// Invalid expressions - Should use "abs()" for nested
com.industry.analytics.Analytic("Expression", ["Input"], ["NoOutput"], {"expression":"sin()"})
com.industry.analytics.Analytic("Expression", ["Input"], ["NoOutput"], {"expression":"cos()"})
com.industry.analytics.Analytic("Expression", ["Input"], ["NoOutput"], {"expression":"tan()"})
com.industry.analytics.Analytic("Expression", ["Input"], ["NoOutput"], {"expression":"asin()"})
com.industry.analytics.Analytic("Expression", ["Input"], ["NoOutput"], {"expression":"acos()"})
com.industry.analytics.Analytic("Expression", ["Input"], ["NoOutput"], {"expression":"atan()"})

// Valid expression - should result in 0
com.industry.analytics.Analytic("Expression", ["Input"], ["Output1"], {"expression":"sin(0)"})
// Valid expression - should result in 1
com.industry.analytics.Analytic("Expression", ["Input"], ["Output2"], {"expression":"cos(0)"})
// Valid expression - should result in 0
com.industry.analytics.Analytic("Expression", ["Input"], ["Output3"], {"expression":"tan(0)"})
// Valid expression - should result in 1
com.industry.analytics.Analytic("Expression", ["Input"], ["Output4"], {"expression":"sin(PI/2)"})
// Valid expression - should result in 0
com.industry.analytics.Analytic("Expression", ["Input"], ["Output5"], {"expression":"cos(PI/2)"})
// Valid expression - should result in 0
com.industry.analytics.Analytic("Expression", ["Input"], ["Output7"], {"expression":"sin(PI)"})
// Valid expression - should result in -1
com.industry.analytics.Analytic("Expression", ["Input"], ["Output8"], {"expression":"cos(PI)"})
// Valid expression - should result in 0
com.industry.analytics.Analytic("Expression", ["Input"], ["Output9"], {"expression":"tan(PI)"})
// Valid expression - should result in -1
com.industry.analytics.Analytic("Expression", ["Input"], ["Output10"], {"expression":"sin(PI*3/2)"})
// Valid expression - should result in 0
com.industry.analytics.Analytic("Expression", ["Input"], ["Output11"], {"expression":"cos(PI*3/2)"})
// Valid expression - should result in 0
com.industry.analytics.Analytic("Expression", ["Input"], ["Output13"], {"expression":"sin(-PI)"})
// Valid expression - should result in -1
com.industry.analytics.Analytic("Expression", ["Input"], ["Output14"], {"expression":"cos(-PI)"})

// Valid expression - should result in 1
com.industry.analytics.Analytic("Expression", ["Input"], ["Output6"], {"expression":"tan(atan(1))"})
// Valid expression - should result in -1
com.industry.analytics.Analytic("Expression", ["Input"], ["Output12"], {"expression":"tan(atan(-1))"})
// Valid expression - should result in 2
com.industry.analytics.Analytic("Expression", ["Input"], ["Output15"], {"expression":"tan(atan(2))"})


// Valid expression - should result in 0
com.industry.analytics.Analytic("Expression", ["Input"], ["Output16"], {"expression":"asin(sin(0))"})
// Valid expression - should result in 0
com.industry.analytics.Analytic("Expression", ["Input"], ["Output17"], {"expression":"acos(cos(0))"})
// Valid expression - should result in 0
com.industry.analytics.Analytic("Expression", ["Input"], ["Output18"], {"expression":"atan(tan(0))"})
// Valid expression - should result in PI/2
com.industry.analytics.Analytic("Expression", ["Input"], ["Output19"], {"expression":"asin(sin(PI/2))"})
// Valid expression - should result in PI/2
com.industry.analytics.Analytic("Expression", ["Input"], ["Output20"], {"expression":"acos(cos(PI/2))"})
// Valid expression - should result in PI/2
com.industry.analytics.Analytic("Expression", ["Input"], ["Output21"], {"expression":"atan(tan(PI/2))"})
// Valid expression - should result in PI
com.industry.analytics.Analytic("Expression", ["Input"], ["Output22"], {"expression":"asin(sin(PI))"})
// Valid expression - should result in PI
com.industry.analytics.Analytic("Expression", ["Input"], ["Output23"], {"expression":"acos(cos(PI))"})
// Valid expression - should result in PI
com.industry.analytics.Analytic("Expression", ["Input"], ["Output24"], {"expression":"atan(tan(PI))"})