//*****************************************************************************
// Title:         Average test
//*****************************************************************************

package com.industry.analytics.streaming_calculations.Average_cor_003;

using com.industry.analytics.Analytic;
using com.industry.analytics.AnalyticInterface;
using com.industry.analytics.streaming_calculations.Average;

event NextTest {
	integer testNum;
}

monitor Test {
	integer testNum := 1;
	
	action onload()	{		
		// Create the Average - Zero input should fail
		(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
															  new sequence<string>, 
															  [ "Output1" ], 
															  { Average.TIMEWINDOW : "1.0" } ), 
								initComplete );

		// Create the Average - Single input should pass
		on NextTest( testNum=2 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1" ], 
																[ "Output1" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - Check more than one input less outputs - should fail
		on NextTest( testNum=3 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1",  "Input2" ], 
																[ "Output1"  ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - Check more than one input with more outputs - should fail
		on NextTest( testNum=4 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1",  "Input2" ], 
																[ "Output1", "Output2", "Output3"  ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - Empty name for input should fail
		on NextTest( testNum=5 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "" ], 
																[ "Output1" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - blank name for input should fail
		on NextTest( testNum=6 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "  " ], 
																[ "Output1" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - Check more than one output with less inputs - should fail
		on NextTest( testNum=7 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1" ], 
																[ "Output1", "Output2" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - Check more than one output with more inputs - should fail
		on NextTest( testNum=8 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1", "Input2", "Input3" ], 
																[ "Output1", "Output2" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - Check zero output fails
		on NextTest( testNum=9 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1" ], 
																new sequence<string>, 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
			
		// Create the Average - Check no inputs or outputs fails
		on NextTest( testNum=10 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																new sequence<string>, 
																new sequence<string>, 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - Check two inputs/outputs - should fail
		on NextTest( testNum=11 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1", "Input2" ], 
																[ "Output1", "Output2" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
	
		// Create the Average - Check four inputs/outputs - should fail
		on NextTest( testNum=12 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1", "Input2", "Input3", "Input4" ], 
																[ "Output1", "Output2", "Output3", "Output4" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - Empty name for output should fail
		on NextTest( testNum=13 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1" ], 
																[ "" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - blank name for output should fail
		on NextTest( testNum=14 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1" ], 
																[ "  " ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - Check null value for Analytic name fails
		on NextTest( testNum=15 ) { 
			(new Average).init( com.industry.analytics.Analytic( "", 
																[ "Input1" ], 
																[ "Output1" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - with invalid Analytic name fails
		on NextTest( testNum=16 ) { 
			(new Average).init( com.industry.analytics.Analytic( "foobar", 
																[ "Input1" ], 
																[ "Output1" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - with invalid case for Analytic name fails
		on NextTest( testNum=17 ) { 
			(new Average).init( com.industry.analytics.Analytic( "AVERAGE", 
																[ "Input1" ], 
																[ "Output1" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
		}
		
		// Create the Average - with no configuration values should fail, missing mandatory param
		on NextTest( testNum=18 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1" ], 
																[ "Output1" ], 
																new dictionary<string,string> ), 
									initComplete );
		}
		
		// Create the Average - with configuration values should pass
		on NextTest( testNum=19 ) { 
			(new Average).init( com.industry.analytics.Analytic( Average.NAME, 
																[ "Input1" ], 
																[ "Output1" ], 
																{ Average.TIMEWINDOW : "1.0" } ), 
									initComplete );
			
			// Log that we have completed the test
			log "TEST COMPLETE";
		}
		
	}
	
	action initComplete( boolean success, AnalyticInterface ti ) {
		
		if( success ) then {
			log "TEST PASSED: "+testNum.toString();
		} else {
			log "FAILED TO CREATE ANALYTIC: "+testNum.toString() at ERROR; 
		}
		
		// Increment the test number
		testNum := testNum+1; 
		
		// Send the next step event
		route NextTest( testNum );
    }
}
