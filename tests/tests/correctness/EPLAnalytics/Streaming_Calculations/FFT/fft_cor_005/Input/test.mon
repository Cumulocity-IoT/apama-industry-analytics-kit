//*****************************************************************************
// Title:         FFTAnalysis test
//*****************************************************************************

package com.industry.analytics.streaming_calculations.FFTAnalysis_cor_005;

using com.industry.analytics.Analytic;
using com.industry.analytics.AnalyticInterface;
using com.industry.analytics.streaming_calculations.FFTAnalysis;

event NextTest {
	integer testNum;
}

monitor Test {
	integer testNum := 1;
	
	action onload()	{		
		// Create the FFTAnalysis - with valid values should pass
		(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
															  { FFTAnalysis.SAMPLE_FREQUENCY : "1", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
								  initComplete );

		// Test minimal params with empty SAMPLE_FREQUENCY value - Should fail
		on NextTest( testNum=2 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																 { FFTAnalysis.SAMPLE_FREQUENCY : "", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );
		}
		
		// Test minimal params with invalid SAMPLE_FREQUENCY value - Should fail
		on NextTest( testNum=3 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																  { FFTAnalysis.SAMPLE_FREQUENCY : "  ", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );
		}
		
		// Test minimal params with invalid SAMPLE_FREQUENCY value - Should fail
		on NextTest( testNum=4 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																  { FFTAnalysis.SAMPLE_FREQUENCY : "foobar", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );
		}
		
		// Test minimal params with invalid SAMPLE_FREQUENCY value - Should fail
		on NextTest( testNum=5 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																  { FFTAnalysis.SAMPLE_FREQUENCY : "[]", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );
		}		
		
		// Test minimal params with invalid SAMPLE_FREQUENCY value - Should fail
		on NextTest( testNum=6 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																  { FFTAnalysis.SAMPLE_FREQUENCY : "[1]", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );
		}		

		// Test minimal params with invalid SAMPLE_FREQUENCY value - Should fail
		on NextTest( testNum=7 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																  { FFTAnalysis.SAMPLE_FREQUENCY : "{}", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );
		}
		
		// Test minimal params with invalid SAMPLE_FREQUENCY value - Should fail
		on NextTest( testNum=8 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																  { FFTAnalysis.SAMPLE_FREQUENCY : "0", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );
		}
		
		// Test minimal params with invalid SAMPLE_FREQUENCY value - Should fail
		on NextTest( testNum=9 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																  { FFTAnalysis.SAMPLE_FREQUENCY : "-1", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );
		}
		

		// Test minimal params with invalid SAMPLE_FREQUENCY name - Should pass as parameters are case insensitive
		on NextTest( testNum=10 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																  { "SAMPLEFREQUENCY" : "1", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );
		}
		
		// Test minimal params with invalid SAMPLE_FREQUENCY name - Should pass as parameters are case insensitive
		on NextTest( testNum=11 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																  { "samplefrequency" : "1", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );
		}
		
		// Test minimal params with valid SAMPLE_FREQUENCY name and value - Should pass
		on NextTest( testNum=12 ) { 
			(new FFTAnalysis).init( com.industry.analytics.Analytic( FFTAnalysis.NAME, [ "Input1" ], [ "Output1" ], 
																  { "sampleFrequency" : "1", FFTAnalysis.TIMEWINDOW : "1.0" } ), 
									  initComplete );

			// Log that we have completed the test
			log "TEST COMPLETE";
		}
	}
	
	action initComplete( boolean success, AnalyticInterface ti ) {
		
		if( success ) then {
			log "TEST PASSED: "+testNum.toString();
		} else {
			log "FAILED TO CREATE ANALYTIC: "+testNum.toString() at ERROR; 
		}
		
		// Increment the test number
		testNum := testNum+1; 
		
		// Send the next step event
		route NextTest( testNum );
    }
}
