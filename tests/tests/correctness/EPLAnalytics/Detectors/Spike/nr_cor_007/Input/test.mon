//*****************************************************************************
// Title:         Spike test
//*****************************************************************************

package com.industry.analytics.spike_cor_007;

using com.industry.analytics.Analytic;
using com.industry.analytics.AnalyticInterface;
using com.industry.analytics.detectors.Spike;

event NextTest {
	integer testNum;
}

monitor Test {
	integer testNum := 1;
	
	action onload() {
   
		// Test full params - Should pass
		(new Spike).init( com.industry.analytics.Analytic( Spike.NAME, [ "Input1" ], [ "Output1", "lower:LBChannel", "upper:UBChannel", "avg:MAChannel", "stddev:SDChannel"], 
															  { Spike.TIMEWINDOW : "10.0",
																Spike.STANDARD_DEVIATION_MULTIPLE : "10.0"} ), 
								  initComplete );

		// Test full params - invalid Lower output channel name value - Should fail
		on NextTest( testNum=2 ) {
			(new Spike).init( com.industry.analytics.Analytic( Spike.NAME, [ "Input1" ], [ "Output1", "lower:" ], 
																  { Spike.TIMEWINDOW : "10.0",
																	Spike.STANDARD_DEVIATION_MULTIPLE : "10.0"} ), 
									  initComplete );
		}

		// Test full params - invalid Lower output channel name value - Should fail
		on NextTest( testNum=3 ) {
			(new Spike).init( com.industry.analytics.Analytic( Spike.NAME, [ "Input1" ], [ "Output1", "lower:  " ], 
																  { Spike.TIMEWINDOW : "10.0",
																	Spike.STANDARD_DEVIATION_MULTIPLE : "10.0"} ), 
									  initComplete );
		}

		// Test minimal params with uppercase Lower output channel name prefix - Should pass as the prefix isn't case sensitive
		on NextTest( testNum=4 ) {
			(new Spike).init( com.industry.analytics.Analytic( Spike.NAME, [ "Input1" ], [ "Output1", "LOWER:LBChannel"  ], 
																  { Spike.TIMEWINDOW : "10.0",
																	Spike.STANDARD_DEVIATION_MULTIPLE : "10.0"} ), 
									  initComplete );
		}

		// Test minimal params with titlecase Lower output channel name prefix - Should pass as the prefix isn't case sensitive
		on NextTest( testNum=5 ) {
			(new Spike).init( com.industry.analytics.Analytic( Spike.NAME, [ "Input1" ], [ "Output1", "Lower:LBChannel" ], 
																  { Spike.TIMEWINDOW : "10.0",
																	Spike.STANDARD_DEVIATION_MULTIPLE : "10.0"} ), 
									  initComplete );
		}
		
		// Test minimal params with two Lower output channel names defined - Should fail as multiple output channels are not supported
		on NextTest( testNum=6 ) {
			(new Spike).init( com.industry.analytics.Analytic( Spike.NAME, [ "Input1" ], [ "Output1", "lower:LBChannel1", "lower:LBChannel2" ], 
																  { Spike.TIMEWINDOW : "10.0",
																	Spike.STANDARD_DEVIATION_MULTIPLE : "10.0"} ), 
									  initComplete );
		}
		
		// Test minimal params with titlecase Lower output channel name prefix - Should pass as the prefix isn't case sensitive
		on NextTest( testNum=7 ) {
			(new Spike).init( com.industry.analytics.Analytic( Spike.NAME, [ "Input1" ], [ "Output1", "lower:LBChannel" ], 
																  { Spike.TIMEWINDOW : "10.0",
																	Spike.STANDARD_DEVIATION_MULTIPLE : "10.0"} ), 
									  initComplete );

			// Log that we have completed the test
			log "TEST COMPLETE";
		}
	}
	
	action initComplete( boolean success, AnalyticInterface ti ) {
		
		if( success ) then {
			log "TEST PASSED: "+testNum.toString();
		} else {
			log "FAILED TO CREATE ANALYTIC: "+testNum.toString() at ERROR; 
		}
		
		// Increment the test number
		testNum := testNum+1; 
		
		// Send the next step event
		route NextTest( testNum );
    }
}

