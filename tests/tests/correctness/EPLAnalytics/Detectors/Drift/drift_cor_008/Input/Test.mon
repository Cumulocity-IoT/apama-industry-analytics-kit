//*****************************************************************************
// Title:         Drift test
//*****************************************************************************

package com.industry.analytics.detectors.Drift_cor_008;

using com.industry.analytics.detectors.Drift;
using com.industry.analytics.Data;
using com.industry.analytics.DataConstants;
using com.industry.analytics.Analytic;
using com.industry.analytics.AnalyticInterface;


monitor Test {
	Drift _drift;
	
	action onload()	{
		Analytic config := Analytic( "Drift", ["Input"], ["Output"],
									 {"offset":"100", "offsetPeriod":"1"});
		_drift.init(config, _initComplete);
	}
	
	
	action _initComplete( boolean success, AnalyticInterface ti ) {
		if( success ) then {
			Data currData := Data.init("Input", DataConstants.RAW, "asset1");
			currData.timestamp := 0.0d;
			currData.dValue    := 1.0d;
			_drift.processData( currData );
			
			currData.timestamp := 1.0d;
			currData.dValue    := 1.0d;
			_drift.processData( currData );
			
			currData.sourceId  := "asset2";
			currData.timestamp := 1.0d;
			currData.dValue    := 2.2d;
			_drift.processData( currData );
			
			log "Drift Pre-Reset State:" at INFO;
			log "  _calculations: " + _drift._calculations.toString() at INFO;
			log "  _boundaries: " + _drift._boundaries.toString() at INFO;
			
			_drift.reset();
			
			log "Drift Post-Reset State:" at INFO;
			log "  _calculations: " + _drift._calculations.toString() at INFO;
			log "  _boundaries: " + _drift._boundaries.toString() at INFO;
		} else {
			log "Error spawning Drift instance." at ERROR;
		}
	}
}
