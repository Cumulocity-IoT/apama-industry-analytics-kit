//*****************************************************************************
// Title:         EventRate test
//*****************************************************************************

package com.industry.analytics.flow_manipulation.EventRate_cor_007;

using com.industry.analytics.Analytic;
using com.industry.analytics.AnalyticInterface;
using com.industry.analytics.flow_manipulation.EventRate;

event NextTest {
	integer testNum;
}

monitor Test {
	integer testNum := 1;
	
	action onload() {
   
		// Test params - Should pass
		(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID   : "true" } ), 
							initComplete );
								  
		// Test params - empty BY_SOURCEID value - Should fail
		on NextTest( testNum=2 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : ""} ), 
									  initComplete );
		}

		// Test params - blank BY_SOURCEID value - Should fail
		on NextTest( testNum=3 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "  "} ), 
									  initComplete );
		}

		// Test params with invalid BY_SOURCEID name - Should pass as the param name is unrecognised and is NOT mandatory
		on NextTest( testNum=4 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ "BYSOURCEID" : "foo" } ), 
									  initComplete );
		}

		// Test params with invalid BY_SOURCEID name - Should pass as the param name is unrecognised and is NOT mandatory 
		on NextTest( testNum=5 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ "bysourceid" : "foo" } ), 
									  initComplete );
		}

		// Test params - Valid BY_SOURCEID name and value - Should pass
		on NextTest( testNum=6 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ "bySourceId" : "true" } ), 
									  initComplete );
		}
		
		// Test params - Valid BY_SOURCEID name and value - Should pass
		on NextTest( testNum=7 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "true" } ), 
									  initComplete );
		}
		
		// Test params - Valid BY_SOURCEID value - Should pass as parameters are case insensitive
		on NextTest( testNum=8 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "TRUE" } ), 
									  initComplete );
		}

		// Test params - Valid BY_SOURCEID value - Should pass as parameters are case insensitive
		on NextTest( testNum=9 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "True" } ), 
									  initComplete );
		}
		
		// Test params - Valid BY_SOURCEID name and value - Should pass
		on NextTest( testNum=10 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "false" } ), 
									  initComplete );
		}
		
		// Test params - Valid BY_SOURCEID value - Should pass as parameters are case insensitive
		on NextTest( testNum=11 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "FALSE" } ), 
									  initComplete );
		}

		// Test params - Valid BY_SOURCEID value - Should pass as parameters are case insensitive
		on NextTest( testNum=12 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "False" } ), 
									  initComplete );

		}

		// Test params - invalid BY_SOURCEID value - Should fail
		on NextTest( testNum=13 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "1" } ), 
									  initComplete );
		}

		// Test params - invalid BY_SOURCEID value - Should fail
		on NextTest( testNum=14 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "0" } ), 
									  initComplete );
		}

		// Test params - invalid BY_SOURCEID value - Should pass as parameters are case insensitive and trimmed
		on NextTest( testNum=15 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "  true" } ), 
									  initComplete );
		}

		// Test params - invalid BY_SOURCEID value - Should pass as parameters are case insensitive and trimmed
		on NextTest( testNum=16 ) {
			(new EventRate).init( com.industry.analytics.Analytic( EventRate.NAME, [ "Input1" ], [ "Output1" ], 
															{ EventRate.BY_SOURCEID : "true  " } ), 
									  initComplete );
									  
			// Log that we have completed the test
			log "TEST COMPLETE";
		}
	}
	
	action initComplete( boolean success, AnalyticInterface ti ) {
		
		if( success ) then {
			log "TEST PASSED: "+testNum.toString();
		} else {
			log "FAILED TO CREATE ANALYTIC: "+testNum.toString() at ERROR; 
		}
		
		// Increment the test number
		testNum := testNum+1; 
		
		// Send the next step event
		route NextTest( testNum );
    }
}

