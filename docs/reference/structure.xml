<?xml version="1.0" encoding="UTF-8" standalone="no"?><Packages><Package depth="../../../../" display="com.industry.analytics.flow_manipulation" name="com.industry.analytics.flow_manipulation"><Type category="Event" name="NumericFilter" private="true"><Description><![CDATA[Event for the parsing and checking of numeric filters based on the dValue, xValue, yValue and/or zValue of the Data event.]]></Description><Summary><![CDATA[Event for the parsing and checking of numeric filters based on the dValue, xValue, yValue and/or zValue of the Data event.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="DVALUE" type="string" typeValue="&quot;dValue&quot;"/><Member constant="true" name="XVALUE" type="string" typeValue="&quot;xValue&quot;"/><Member constant="true" name="YVALUE" type="string" typeValue="&quot;yValue&quot;"/><Member constant="true" name="ZVALUE" type="string" typeValue="&quot;zValue&quot;"/><Member constant="true" name="LT" type="integer" typeValue="-"/><Member constant="true" name="LTEQ" type="integer" typeValue="-"/><Member constant="true" name="EQ" type="integer" typeValue="0"/><Member constant="true" name="GTEQ" type="integer" typeValue="1"/><Member constant="true" name="GT" type="integer" typeValue="2"/><Member constant="true" name="BT" type="integer" typeValue="3"/><Member constant="true" name="BTEQ" type="integer" typeValue="4"/><Member constant="true" name="WO" type="integer" typeValue="5"/><Member constant="true" name="WOEQ" type="integer" typeValue="6"/><Member name="valid" type="boolean"/><Member name="valueId" type="string"/><Member name="operator" type="integer"/><Member name="dValue1" type="decimal"/><Member name="dValue2" type="decimal"/><Member name="fValue1" type="float"/><Member name="fValue2" type="float"/><Action name="parseDecimal" private="true" staticNature="static "><Description><![CDATA[Parse a decimal from a string with error checking.]]></Description><Summary><![CDATA[Parse a decimal from a string with error checking.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[The decimal value or NaN if parsing fails.]]></Description></Returns><Parameters><Parameter name="value" type="string"><Description><![CDATA[The string to be parsed as a decimal.]]></Description></Parameter></Parameters></Action><Action name="filter" private="true" staticNature=""><Description><![CDATA[Checks the provided Data event against the filter.]]></Description><Summary><![CDATA[Checks the provided Data event against the filter.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean indicating whether the Data events passes or fails the filter.]]></Description></Returns><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The Data to be compared against the filter.]]></Description></Parameter></Parameters></Action><Action name="init" private="true" staticNature="static "><Description><![CDATA[Static initialisation action for creating a NUmericFilter from a parameter and value provided in the Filter analytic configuration.]]></Description><Summary><![CDATA[Static initialisation action for creating a NUmericFilter from a parameter and value provided in the Filter analytic configuration.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics.flow_manipulation" type="NumericFilter"><Description><![CDATA[The NumericFilter created from the parameters.]]></Description></Returns><Parameters><Parameter name="valueId" type="string"><Description><![CDATA[The numeric member of the Data event. dValue, xValue, yValue or zValue.]]></Description></Parameter><Parameter name="condition" type="string"><Description><![CDATA[The string to be parsed as a filter condition.]]></Description></Parameter></Parameters></Action><Action name="parseFloat" private="true" staticNature="static "><Description><![CDATA[Parse a float from a string with error checking.]]></Description><Summary><![CDATA[Parse a float from a string with error checking.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"><Description><![CDATA[The float value or NaN if parsing fails.]]></Description></Returns><Parameters><Parameter name="value" type="string"><Description><![CDATA[The string to be parsed as a float.]]></Description></Parameter></Parameters></Action><Action name="isValid" private="true" staticNature=""><Description><![CDATA[Is this NumericFilter event correctly set up?]]></Description><Summary><![CDATA[Is this NumericFilter event correctly set up?]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean indicating whether the NumericFilter has been correctly created.]]></Description></Returns></Action></Type><Type category="Event" name="Slicer"><Description><![CDATA[The Slicer Analytic generates a set of 'X' new Data events for each incoming event, at 'Y' seconds apart and with value 'Z'. The value of 'Z' is defined by the behavior. The new events are generated every 'Y' seconds.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Computed type are generated.  All the <font face="courier" size="-1">params</font> from the input Data are copied to the computed Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>sliceType</b></td><td>Defines the behaviour of the Slicer analytic. Its value can be either <font face="courier" size="-1">sliceSize</font> or <font face="courier" size="-1">sliceCount</font>.</td> <td>String</td><td>String</td><td>True</td><td> </td></tr> <tr><td><b>sliceValue</b></td><td>Defines the value of selected behaviour.</td> <td>Stringified decimal</td><td>Decimal</td><td>True</td><td> </td></tr> <tr><td><b>timeInterval</b></td><td>Defines the time to send each sliced event number of "seconds" apart.</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">0.0d</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
//Define a Slicer Analytic which takes Data events on the channel "Input"  
//and generates a set of 10 Data events with value equally sliced. It publishes
//a Data event with the calculated value on the output channel "Output" every 1 second apart.   
send com.industry.analytics.Analytic("Slicer", ["Input"], ["Output"], {"sliceType":"sliceCount", "sliceValue":"10.0",  "timeInterval":"1.0"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Slicer Analytic generates a set of 'X' new Data events for each incoming event, at 'Y' seconds apart and with value 'Z'. The value of 'Z' is defined by the behavior. The new events are generated every 'Y' seconds.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Slicer&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="SLICE_TYPE" type="string" typeValue="&quot;sliceType&quot;"><Description><![CDATA[This constant defines the behaviour of the Slicer analytic. The value can be 'sliceSize' or 'sliceCount']]></Description><Summary><![CDATA[This constant defines the behaviour of the Slicer analytic. The value can be 'sliceSize' or 'sliceCount']]></Summary></Member><Member constant="true" name="SLICE_VALUE" type="string" typeValue="&quot;sliceValue&quot;"><Description><![CDATA[This constant defines the value of selected slicer behaviour.]]></Description><Summary><![CDATA[This constant defines the value of selected slicer behaviour.]]></Summary></Member><Member constant="true" name="SLICE_SIZE" private="true" type="string" typeValue="&quot;sliceSize&quot;"><Description><![CDATA[The value slice type to compare. This will generate the sliced events with data specified by sliceValue]]></Description><Summary><![CDATA[The value slice type to compare. This will generate the sliced events with data specified by sliceValue]]></Summary></Member><Member constant="true" name="SLICE_COUNT" private="true" type="string" typeValue="&quot;sliceCount&quot;"><Description><![CDATA[The value slice type to compare. This will generate 'n' sliced events where 'n' is the number specified by sliceValue.]]></Description><Summary><![CDATA[The value slice type to compare. This will generate 'n' sliced events where 'n' is the number specified by sliceValue.]]></Summary></Member><Member constant="true" name="TIME_INTERVAL" type="string" typeValue="&quot;timeInterval&quot;"><Description><![CDATA[This constant defines Time to send each sliced event number of "seconds" apart]]></Description><Summary><![CDATA[This constant defines Time to send each sliced event number of "seconds" apart]]></Summary></Member><Member name="_sliceType" private="true" type="string"><Description><![CDATA[Local cache to save the value of sliceType parameter]]></Description><Summary><![CDATA[Local cache to save the value of sliceType parameter]]></Summary></Member><Member name="_sliceValue" private="true" type="decimal"><Description><![CDATA[Local cache to save the value of sliceValue parameter]]></Description><Summary><![CDATA[Local cache to save the value of sliceValue parameter]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_timeInterval" private="true" type="decimal"><Description><![CDATA[Local cache to save the time to send each sliced event number of "seconds" apart]]></Description><Summary><![CDATA[Local cache to save the time to send each sliced event number of "seconds" apart]]></Summary></Member><Member name="constants" package="com.industry.analytics" private="true" type="DataConstants"><Description><![CDATA[Access DataConstants]]></Description><Summary><![CDATA[Access DataConstants]]></Summary></Member><Member name="_remaining" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="decimal"/></Parameters><Description><![CDATA[Local cache to save the value of remaining data when sending slices 'byValue'. This is required to process input data from multiple sources at different time duration]]></Description><Summary><![CDATA[Local cache to save the value of remaining data when sending slices 'byValue'. This is required to process input data from multiple sources at different time duration]]></Summary></Member><Member name="_counter" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="integer"/></Parameters><Description><![CDATA[Local cache to save the value of remaining number of events when sending slices 'byCount'. This is required to process input data from multiple sources at different time duration]]></Description><Summary><![CDATA[Local cache to save the value of remaining number of events when sending slices 'byCount'. This is required to process input data from multiple sources at different time duration]]></Summary></Member><Member constant="true" name="DEFAULT_TIME_INTERVAL" private="true" type="decimal" typeValue="0.0d"><Description><![CDATA[Constant to define default time interval value in seconds]]></Description><Summary><![CDATA[Constant to define default time interval value in seconds]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="_sendSlice" private="true" staticNature=""><Description><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="newValue" type="decimal"/></Parameters></Action><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="_updateCounterAndSend" private="true" staticNature=""><Description><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="value" type="decimal"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="_updateRemainingAndSend" private="true" staticNature=""><Description><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="sValue" type="decimal"/></Parameters></Action></Type><Type category="Event" name="Duplicator"><Description><![CDATA[The Duplicator Analytic takes one input channel, and then duplicates the unmodified event received onto one or more output channels.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>One or more output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Duplicator Analytic which takes Data events on the channel "Input1" 
// and publishes a copy of the Data event onto two output channels ("Output1" and "Output2")
send com.industry.analytics.Analytic("Duplicator", ["Input1"], ["Output1","Output2"], new dictionary&ltstring,string&gt ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Duplicator Analytic takes one input channel, and then duplicates the unmodified event received onto one or more output channels.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Duplicator&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member name="_outputDataNames" private="true" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[Local cached output Data stream names]]></Description><Summary><![CDATA[Local cached output Data stream names]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="Combiner"><Description><![CDATA[The Combiner Analytic takes one or more input channels, combines the unmodified event received onto a single output channel. If the optional parameter <font face="courier" size="-1">aggregatedSourceId</font> is provided, the Combiner aggregates all incoming <font face="courier" size="-1">Data</font> events by modifying their <font face="courier" size="-1">sourceId</font> to the one provided. This then allows the data to be treated as a singular aggregated source.  For example, if a calculation is required in which the original source of the data values are irrelevant. If the <font face="courier" size="-1">Data</font> events type is <font face="courier" size="-1">RAW</font>, the original <font face="courier" size="-1">sourceId</font> is added to the generated <font face="courier" size="-1">Data</font> events <font face="courier" size="-1">params</font>.

 <dl><dt><b>Input Data events:</b></dt> <dd>One or more input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>aggregatedSourceId</b></td><td>If defined, all Data events that are combined will be modified to use the defined <font face="courier" size="-1">sourceId</font></td> <td>Non-Empty String</td><td>String</td><td>False</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Combiner Analytic which takes Data events from two separate 
// input channels ("Input1" and "Input2") and publishes the events onto 
// a single output channel ("Output1")
send com.industry.analytics.Analytic("Combiner", ["Input1","Input2"], ["Output1"], new dictionary&ltstring,string&gt ) to "";

// Define a Combiner Analytic which takes Data events from two separate 
// input channels ("Input1" and "Input2") and publishes the events onto 
// a single output channel ("Output1") and replaces the sourceId parameter
// of all events with the aggregated SourceId of "myNewId"
send com.industry.analytics.Analytic("Combiner", ["Input1","Input2"], ["Output1"], {"aggregatedSourceId":"myNewId"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Combiner Analytic takes one or more input channels, combines the unmodified event received onto a single output channel. If the optional parameter <font face="courier" size="-1">aggregatedSourceId</font> is provided, the Combiner aggregates all incoming <font face="courier" size="-1">Data</font> events by modifying their <font face="courier" size="-1">sourceId</font> to the one provided. This then allows the data to be treated as a singular aggregated source.  For example, if a calculation is required in which the original source of the data values are irrelevant. If the <font face="courier" size="-1">Data</font> events type is <font face="courier" size="-1">RAW</font>, the original <font face="courier" size="-1">sourceId</font> is added to the generated <font face="courier" size="-1">Data</font> events <font face="courier" size="-1">params</font>.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Combiner&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="AGGREGATED_SOURCEID" type="string" typeValue="&quot;aggregatedSourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that must be defined when creating an instance of this Analytic.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that must be defined when creating an instance of this Analytic.]]></Summary></Member><Member constant="true" name="ORIGINAL_SOURCEID" type="string" typeValue="&quot;originalSourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name of the originator <font face="courier" size="-1">sourceId</font> that will be cached in the output Data events that are generated by this Analytic.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name of the originator <font face="courier" size="-1">sourceId</font> that will be cached in the output Data events that are generated by this Analytic.]]></Summary></Member><Member name="_aggregatedSourceId" private="true" type="string"><Description><![CDATA[Local cached aggregated sourceId configuration parameter name]]></Description><Summary><![CDATA[Local cached aggregated sourceId configuration parameter name]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="EventRate"><Description><![CDATA[The EventRate Analytic outputs the rate of arrival of events on the specified input channel. This rate can be derived based on either the correlator time or on the timestamps of the <font face="courier" size="-1">Data</font> events.

 The calculated event rate is published at a rate defined by the <font face="courier" size="-1">publishRate</font> parameter.  If a value of <font face="courier" size="-1">0.0d</font> is provided, then the calculation is sent everytime an input event is received.  In the correlator time mode, a wait listener is setup to ensure an event rate is output even when no input Data events are received. This is not possible for the timestamp mode, as time is being driven entirely by the timestamp of the Data events received. If the <font face="courier" size="-1">bySourceId</font> parameter is set to <font face="courier" size="-1">true</font>, then the listener will be enabled AFTER the first <font face="courier" size="-1">Data</font> event is received for the new <font face="courier" size="-1">sourceId</font>. This means that if no input events are received, no output events will be sent.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. As this analytic is generating new data, not dependent on the values of the incoming Data events, no params are copied from the incoming events.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>useCorrelatorTime</b></td><td>Defines whether to use the Correlator time or alternatively use the events timestamp</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">false</font></td></tr> <tr><td><b>smoothingFactor</b></td><td>Defines the number of events over which to calculate/smooth the event rate calculation.</td> <td>>= 2</td><td>Integer</td><td>False</td><td><font face="courier" size="-1">3</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Event Rate calculations are partitioned based on the <font face="courier" size="-1">sourceId</font> parameter of the input data stream</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> <tr><td><b>publishRate</b></td><td>Defines the rate at which the Event Rate calculations are published on the output channel per-sourceId. A value of <font face="courier" size="-1">0.0d</font> indicates that the calculation is published for each event received.</td> <td>>=0.0d</td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">1.0d</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a EventRate Analytic which takes Data events on the channel "Input1"  
// and calculates the rate at which events are being received on that channel
// based on the Data events timestamp and publishes an event on the "Output1" channel. 
send com.industry.analytics.Analytic("EventRate", ["Input1"], ["Output1"], new dictionary&ltstring,string&gt ) to "";

// Define a EventRate Analytic which takes Data events on the channel "Input1"  
// and calculates the rate at which events are being received on that channel 
// based on the Correlator time and the last 10events and publishes an event 
// on the "Output1" channel. 
send com.industry.analytics.Analytic("EventRate", ["Input1"], ["Output1"], {"useCorrelatorTime":"true", "smoothingFactor":"10"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The EventRate Analytic outputs the rate of arrival of events on the specified input channel. This rate can be derived based on either the correlator time or on the timestamps of the <font face="courier" size="-1">Data</font> events.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Import library="TimeFormatPlugin" name="timeFormat"/><Member constant="true" name="NAME" type="string" typeValue="&quot;EventRate&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="SMOOTHING_FACTOR" type="string" typeValue="&quot;smoothingFactor&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the number of events that the rate is calculated over.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the number of events that the rate is calculated over.]]></Summary></Member><Member constant="true" name="USE_CORRELATOR_TIME" type="string" typeValue="&quot;useCorrelatorTime&quot;"><Description><![CDATA[This constant defines the configuration parameter name that indicates what timestamp mode should be used. By default, the timestamp of the event is used instead of the Correlator time.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that indicates what timestamp mode should be used. By default, the timestamp of the event is used instead of the Correlator time.]]></Summary></Member><Member constant="true" name="PUBLISH_RATE" type="string" typeValue="&quot;publishRate&quot;"><Description><![CDATA[This constant defines the configuration parameter name that indicates what the time between publishing the event rates.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that indicates what the time between publishing the event rates.]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the Event Rate calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the Event Rate calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_smoothingFactor" private="true" type="integer"><Description><![CDATA[Local cached value for the smoothingFactor configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the smoothingFactor configuration parameter value]]></Summary></Member><Member name="_correlatorRate" private="true" type="boolean"><Description><![CDATA[Local cached boolean value indicating whether the correlatorOrTimestamp configuration parameter was set to use the Correlator time versus the event timestamp value.]]></Description><Summary><![CDATA[Local cached boolean value indicating whether the correlatorOrTimestamp configuration parameter was set to use the Correlator time versus the event timestamp value.]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_publishRate" private="true" type="decimal"><Description><![CDATA[Local cached value for the smoothingFactor configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the smoothingFactor configuration parameter value]]></Summary></Member><Member name="_lastInputTimestamps" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="sequence"><Parameters><Parameter type="decimal"/></Parameters></Parameter></Parameters><Description><![CDATA[Local cached timestamps for the incoming Data event that were received partitioned by the sourceId]]></Description><Summary><![CDATA[Local cached timestamps for the incoming Data event that were received partitioned by the sourceId]]></Summary></Member><Member name="_lastOutputTimestamps" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="decimal"/></Parameters><Description><![CDATA[Local cached timestamp for the last Data event that was sent partitioned by the sourceId]]></Description><Summary><![CDATA[Local cached timestamp for the last Data event that was sent partitioned by the sourceId]]></Summary></Member><Member name="_correlatorTimeout" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="listener"/></Parameters><Description><![CDATA[Local cached listener when using the Correlator Time mode partitioned by the sourceId]]></Description><Summary><![CDATA[Local cached listener when using the Correlator Time mode partitioned by the sourceId]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="sendData" private="true" staticNature=""><Description><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="sourceId" type="string"/></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="correlatorTimeout" private="true" staticNature=""><Description><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="sourceId" type="string"/></Parameters></Action></Type><Type category="Event" name="Mapper"><Description><![CDATA[The Mapper Analytic will modify a field on each event in the input stream.

 Events with an input field value matching a key in the mapping dictionary will have their output field value set to the value in the mapping dictionary. If a "default" key is provided in the dictionary then any unmatched events will use this value.

 Events that do not match the mapping dictionary will be unaffected.

 Matching or setting a param value, requires the name of the param to be provided in "inputParamName" and/or "outputParamName".

 In the "mapping" dictionary you can provide keys in any parseable representation (eg. "10", "10.0", "10.0d"), but there should not be duplicate keys

 To avoid having to escape double quotes with backslashes in the "mapping" param, use a dictionary literal and call ".toString()" (see the Example Usage)

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.  All the <font face="courier" size="-1">params</font> from the input Data are copied to the output Data events.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>inputField</b></td><td>Determines which Data field to match while mapping.</td> <td><font face="courier" size="-1">dValue, sValue, xValue, yValue, zValue, type, param</font></td><td>string</td><td>true</td><td></td></tr> <tr><td><b>outputField</b></td><td>Determines which Data field to modify while mapping.</td> <td><font face="courier" size="-1">dValue, sValue, xValue, yValue, zValue, type, param</font></td><td>string</td><td>false</td><td>Same as inputField</td></tr> <tr><td><b>mapping</b></td><td>The value to match (as the dictionary's key) on the incoming data and the resulting value (as the value) to set on the outgoing.</td> <td>Note: Using the key <font face="courier" size="-1">default</font> will handle any unmatched events.</td><td>Stringified dictionary&ltstring,string&gt</td><td>true</td><td></td></tr> <tr><td><b>inputParamName</b></td><td>If inputField="param", then this is the name of the param.</td> <td></td><td>string</td><td>if inputField="param"</td><td></td></tr> <tr><td><b>outputParamName</b></td><td>If outputField="param", then this is the name of the param.</td> <td></td><td>string</td><td>if outputField="param"</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Mapper Analytic which takes Data events on the channel "Input1".
// Any data events arriving on this channel with an dValue=1.0 or -1.0 have their sValue set to "up" or "down", otherwise the sValue is set to "unknown" 
// and are sent to the output channel "Output1".
send com.industry.analytics.Analytic("Mapper", ["Input1"], ["Output1"], { "inputField":"dValue","outputField":"sValue","mapping":{"1":"up", "-1.0d":"down", "default":"unknown"}.toString() } ) to "";

// Define a Mapper Analytic which takes Data events on the channel "Input1".
// Any data events arriving on this channel with a param "direction":"up" or "direction":"down" have their dValue set to 1.0 or -1.0, otherwise the dValue is set to 0.0 (using "default")
// and are sent to the output channel "Output1".
send com.industry.analytics.Analytic("Mapper", ["Input1"], ["Output1"], { "inputField":"param","inputParamName":"direction","outputField":"dValue","mapping":{"up":"1", "down":"-1", "default":"0"}.toString() } ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Mapper Analytic will modify a field on each event in the input stream.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Mapper&quot;"><Description><![CDATA[The name of the analytic.]]></Description><Summary><![CDATA[The name of the analytic.]]></Summary></Member><Member constant="true" name="INPUT_FIELD" type="string" typeValue="&quot;inputField&quot;"><Description><![CDATA[Constant for analytic configuration]]></Description><Summary><![CDATA[Constant for analytic configuration]]></Summary></Member><Member constant="true" name="INPUT_PARAM_NAME" type="string" typeValue="&quot;inputParamName&quot;"><Description><![CDATA[Constant for analytic configuration]]></Description><Summary><![CDATA[Constant for analytic configuration]]></Summary></Member><Member constant="true" name="OUTPUT_FIELD" type="string" typeValue="&quot;outputField&quot;"><Description><![CDATA[Constant for analytic configuration]]></Description><Summary><![CDATA[Constant for analytic configuration]]></Summary></Member><Member constant="true" name="OUTPUT_PARAM_NAME" type="string" typeValue="&quot;outputParamName&quot;"><Description><![CDATA[Constant for analytic configuration]]></Description><Summary><![CDATA[Constant for analytic configuration]]></Summary></Member><Member constant="true" name="MAPPING" type="string" typeValue="&quot;mapping&quot;"><Description><![CDATA[Constant for analytic configuration]]></Description><Summary><![CDATA[Constant for analytic configuration]]></Summary></Member><Member constant="true" name="DEFAULT" type="string" typeValue="&quot;default&quot;"><Description><![CDATA[Constant key mapping dictionary, used if no other keys match]]></Description><Summary><![CDATA[Constant key mapping dictionary, used if no other keys match]]></Summary></Member><Member name="_outputStreamName" private="true" type="string"><Description/><Summary/></Member><Member name="_inputHandler" private="true" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="string"/><Description/><Summary/></Member><Member name="_inputParamName" private="true" type="string"><Description/><Summary/></Member><Member name="_outputParamName" private="true" type="string"><Description/><Summary/></Member><Member name="_mapping" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters><Description/><Summary/></Member><Member name="_inputHandlers" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="string"/></Parameter></Parameters><Description/><Summary/></Member><Member name="_outputHandlers" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/><Parameter type="string"/></Parameters></Parameter></Parameters><Description/><Summary/></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="inputHandlerXValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="outputHandlerYValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataOut" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="decimalTidier" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="value" type="string"/></Parameters></Action><Action name="inputHandlerParam" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="outputHandlerSValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataOut" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="createSubstitutionHandlers" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="dictionary"><Parameters><Parameter type="string"/><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters></Returns><Parameters><Parameter name="mappingDict" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Parameter><Parameter name="outputHandler" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/><Parameter type="string"/></Parameters></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="outputHandlerXValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataOut" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="checkValues" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="mapping" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters></Parameter></Parameters></Action><Action name="inputHandlerType" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="inputHandlerSValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="outputHandlerType" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataOut" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="inputHandlerZValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="outputHandlerParam" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataOut" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="inputHandlerDValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="outputHandlerZValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataOut" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="inputHandlerYValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="blankToZero" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="possiblyBlank" type="string"/></Parameters></Action><Action name="tidyKeys" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="inputField" type="string"/><Parameter name="inDict" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Parameter></Parameters></Action><Action name="floatTidier" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="value" type="string"/></Parameters></Action><Action name="outputHandlerDValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataOut" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="stringTidier" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="value" type="string"/></Parameters></Action></Type><Type category="Event" name="SubstitutionHandler" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="outputHandler" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/><Parameter type="string"/></Parameters></Member><Member name="paramName" type="string"/><Member name="valueOrField" type="string"/><Action name="handleTimestamp" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="dataOut" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="handleDValue" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="dataOut" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="handleZValue" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="dataOut" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="handleXValue" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="dataOut" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="handleSimple" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="dataOut" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="handleType" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="dataOut" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="tryOrLogAndRethrow" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="a" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/><Parameter type="string"/></Parameters></Parameter><Parameter name="dataOut" package="com.industry.analytics" type="Data"/><Parameter name="v" type="string"/></Parameters></Action><Action name="create" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Returns><Parameters><Parameter name="outputHandler" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/><Parameter type="string"/></Parameters></Parameter><Parameter name="valueOrField" type="string"/></Parameters></Action><Action name="handleYValue" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="dataOut" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="handleSValue" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="dataOut" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="handleParam" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="dataOut" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Event" name="Merger"><Description><![CDATA[The Merger Analytic either adds static data or merges data from another channel onto a single data event on the output channel.

 The "mapping" dictionary contains instuctions on what to set the output fields to. The format is {"outputFieldName":"outputFieldValue"} eg. {"dValue":"${xValue}","sValue":"helloWorld","xValue":"${param.number}"}

 If a merging stream is provided then the analytic will not output until it has received a data event on both channels and will output every event thereafter.

 To avoid having to escape double quotes with backslashes in the "mapping" param, use a dictionary literal and call ".toString()" (see the Example Usage)

 <dl><dt><b>Input Data events:</b></dt> <dd>A stream of data events to modify and optionally a stream of data events to merge.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.  All the non-overwritten <font face="courier" size="-1">params</font> from the input Data are copied to the output Data events.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>mapping</b></td><td>The field to set (as the dictionary's key) and the value (as the dictionary's value). The value uses substitution to get the values from the merging stream eg. "${sValue}__HelloWorld"</td> <td>The key must contain one of "sourceId","timestamp","dValue","sValue","xValue","yValue","zValue","param.myParamName","params". All params can be merged using "params":"*"</td><td>Stringified dictionary&ltstring,string&gt</td><td>true</td><td></td></tr> <tr><td><b>overwriteExistingParams</b></td><td>Should the analytic overwrite params if they already exist on the data stream.</td> <td></td><td>boolean</td><td>false</td><td>true</td></tr> <tr><td><b>bySourceId</b></td><td>Causes the analytic to merge only where the input data's sourceId matches the merge data's sourceId.</td> <td></td><td>boolean</td><td>false</td><td>true</td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Static enrichment, setting the sValue to "helloWorld"
send com.industry.analytics.Analytic("Merger", ["Input1"], ["Output1"], {mapping: {"sValue":"helloWorld"}.toString()})

// Merge another channel. Setting the sValue to be the sValue from the merged channel and adding a param
send com.industry.analytics.Analytic("Merger", ["Input1"], ["Output1"], {{mapping: {"sValue":"${sValue}","param.abc":"helloWorld"}.toString()} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Merger Analytic either adds static data or merges data from another channel onto a single data event on the output channel.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Merger&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="BY_SOURCE_ID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the data will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the data will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member constant="true" name="MAPPING" type="string" typeValue="&quot;mapping&quot;"/><Member constant="true" name="OVERWRITE_EXISTING_PARAMS" type="string" typeValue="&quot;overwriteExistingParams&quot;"/><Member name="_overwriteExisting" type="boolean"/><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached bySourceId value]]></Description><Summary><![CDATA[Local cached bySourceId value]]></Summary></Member><Member name="_sourceChannel" private="true" type="string"><Description><![CDATA[Local cached sourceChannel value]]></Description><Summary><![CDATA[Local cached sourceChannel value]]></Summary></Member><Member name="_mergeChannel" private="true" type="optional"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[Local cached mergeChannel value]]></Description><Summary><![CDATA[Local cached mergeChannel value]]></Summary></Member><Member name="_mapping" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[Local cached param mapping]]></Description><Summary><![CDATA[Local cached param mapping]]></Summary></Member><Member name="_dataBySourceIdAndChannel" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters><Description><![CDATA[Local cached data received]]></Description><Summary><![CDATA[Local cached data received]]></Summary></Member><Member name="_outputHandlers" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/><Parameter type="string"/></Parameters></Parameter></Parameters></Member><Member name="_valueGetters" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="string"/></Parameter></Parameters></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name. Used when sending Data events]]></Description><Summary><![CDATA[Local cached output Data name. Used when sending Data events]]></Summary></Member><Action name="dValueGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="typeGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="yValueGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="typeOut" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="yValueOut" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="xValueOut" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="merge" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="Data"/><Parameters><Parameter name="source" package="com.industry.analytics" type="Data"/><Parameter name="merge" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="containsValidSubstitution" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="test" type="string"/></Parameters></Action><Action name="timestampOut" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="zValueGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="zValueOut" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="performSubstitution" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="template" type="string"/><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="sValueGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="dValueOut" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="parseOrZero" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/><Parameters><Parameter name="value" type="string"/></Parameters></Action><Action name="isValidPropertyName" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="name" type="string"/></Parameters></Action><Action name="sourceIdOut" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="validateMapping" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="mapping" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic Data event processing. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic Data event processing. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="sourceIdGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="tidyMappingKeys" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Returns><Parameters><Parameter name="mapping" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Parameter></Parameters></Action><Action name="blankToZero" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="value" type="string"/></Parameters></Action><Action name="reset" staticNature=""><Description><![CDATA[Optional action to reset the state of the Analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[Optional action to reset the state of the Analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="sValueOut" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/><Parameter name="value" type="string"/></Parameters></Action><Action name="xValueGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="timestampGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="isParamField" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="outputField" type="string"/></Parameters></Action></Type><Type category="Event" name="Filter"><Description><![CDATA[The Filter Analytic filters the Data events passed through it based on the configuration parameters given below. Appropriate use of the <font face="courier" size="-1">sValue</font> filters can create a stream with just float values or just string values if desired.

 <b>Note:</b> When using the <font face="courier" size="-1">sourceId_OnlyLeafNodes</font> or <font face="courier" size="-1">sourceId_AllChildren</font> filters, applications must first define the relationships/grouping of DataSources using the com.industry.analytics.DataSource event.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream channel name must be provided. All the <font face="courier" size="-1">params</font> from the input Data are copied to the filtered <font face="courier" size="-1">Data</font> event.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream channel name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>sourceId</b></td><td>If defined, only Data events which have a <font face="courier" size="-1">sourceId</font> that matches at least ONE of the set of defined sourceIds are allowed through. A stringified empty sequence is treated as "allow any value".<br><br> <b>Note:</b> If the same value appears in both the <font face="courier" size="-1">sourceId</font> and the <font face="courier" size="-1">!sourceId</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face="courier" size="-1">sequence&ltstring&gt</font> containing the set of sourceIds to filter on</td> <td>Stringified <font face="courier" size="-1">sequence&ltstring&gt</font></td><td>False</td><td><font face="courier" size="-1">"[]"</font></td></tr> <tr><td><b>!sourceId</b></td><td>If defined, Data events which have a <font face="courier" size="-1">sourceId</font> that matches matches ANY of the set of defined sourceIds are NOT allowed through. A stringified empty sequence is treated as "allow any value".<br><br> <b>Note:</b> If the same value appears in both the <font face="courier" size="-1">sourceId</font> and the <font face="courier" size="-1">!sourceId</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face="courier" size="-1">sequence&ltstring&gt</font> containing the set of sourceIds to filter on</td> <td>Stringified <font face="courier" size="-1">sequence&ltstring&gt</font></td><td>False</td><td><font face="courier" size="-1">"[]"</font></td></tr> <tr><td><b>hasParam</b></td><td>If defined, only Data events which have a <font face="courier" size="-1">param</font> that matches at least ONE of the set of defined <font face="courier" size="-1">hasParam</font> values are allowed through. A stringified empty sequence is treated as "allow any value".<br><br> <b>Note:</b> If the same value appears in both the <font face="courier" size="-1">hasParam</font> and the <font face="courier" size="-1">!hasParam</font> configuration parameter, then the Data event WILL be filtered.</td> <td>Empty string, or a stringified <font face="courier" size="-1">sequence&ltstring&gt</font> containing the set of params to filter on</td> <td>Stringified <font face="courier" size="-1">sequence&ltstring&gt</font></td><td>False</td><td><font face="courier" size="-1">"[]"</font></td></tr> <tr><td><b>!hasParam</b></td><td>If defined, only Data events which have a <font face="courier" size="-1">param</font> that matches ANY of the set of defined <font face="courier" size="-1">!hasParam</font> values are NOT allowed through. A stringified empty sequence is treated as "allow any value".<br><br> <b>Note:</b> If the same value appears in both the <font face="courier" size="-1">hasParam</font> and the <font face="courier" size="-1">!hasParam</font> configuration parameter, then the Data event WILL be filtered.</td> <td>Empty string, or a stringified <font face="courier" size="-1">sequence&ltstring&gt</font> containing the set of params to filter on</td> <td>Stringified <font face="courier" size="-1">sequence&ltstring&gt</font></td><td>False</td><td><font face="courier" size="-1">"[]"</font></td></tr> <tr><td><b>sValue</b></td><td>If defined, only Data events which have a <font face="courier" size="-1">sValue</font> that matches at least ONE of the set of defined string values are allowed through. A stringified empty sequence is treated as "allow any value".<br><br> <b>Note:</b> If the same value appears in both the <font face="courier" size="-1">sValue</font> and the <font face="courier" size="-1">!sValue</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face="courier" size="-1">sequence&ltstring&gt</font> containing the set of sValues to filter on</td> <td>Stringified <font face="courier" size="-1">sequence&ltstring&gt</font></td><td>False</td><td><font face="courier" size="-1">"[]"</font></td></tr> <tr><td><b>!sValue</b></td><td>If defined, only Data events which have a <font face="courier" size="-1">sValue</font> that matches ANY of the set of defined string values are NOT allowed through. A stringified empty sequence is treated as "allow any value".<br><br> <b>Note:</b> If the same value appears in both the <font face="courier" size="-1">sValue</font> and the <font face="courier" size="-1">!sValue</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face="courier" size="-1">sequence&ltstring&gt</font> containing the set of sValues to filter on</td> <td>Stringified <font face="courier" size="-1">sequence&ltstring&gt</font></td><td>False</td><td><font face="courier" size="-1">"[]"</font></td></tr> <tr><td><b>type</b></td><td>If defined, only Data events which have a <font face="courier" size="-1">type</font> that matches at least ONE of "r" Raw , "c" Computed, or "a" Anomaly. A stringified empty sequence is treated as "allow any value".<br><br> <b>Note:</b> If the same value appears in both the <font face="courier" size="-1">type</font> and the <font face="courier" size="-1">!type</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face="courier" size="-1">sequence&ltstring&gt</font> containing the set of Types to filter on</td> <td>Stringified <font face="courier" size="-1">sequence&ltstring&gt</font></td><td>False</td><td><font face="courier" size="-1">"[]"</font></td></tr> <tr><td><b>!type</b></td><td>If defined, only Data events which have a <font face="courier" size="-1">type</font> that matches ANY of "r" Raw , "c" Computed, or "a" Anomaly are NOT allowed through. A stringified empty sequence is treated as "allow any value".<br><br> <b>Note:</b> If the same value appears in both the <font face="courier" size="-1">type</font> and the <font face="courier" size="-1">!type</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face="courier" size="-1">sequence&ltstring&gt</font> containing the set of Types to filter on</td> <td>Stringified <font face="courier" size="-1">sequence&ltstring&gt</font></td><td>False</td><td><font face="courier" size="-1">"[]"</font></td></tr> <tr><td><b>sourceId_OnlyLeafNodes</b></td><td>If defined, only Data events which have an <font face="courier" size="-1">sourceId</font> which is a leaf node DataSource below the specified DataSource Id in the hierarchy will be allowed through A stringified empty sequence is treated as "allow any value". <td>Empty string, or a stringified <font face="courier" size="-1">sequence&ltstring&gt</font> containing the set of sourceIds to filter on</td> <td>Stringified <font face="courier" size="-1">sequence&ltstring&gt</font></td><td>False</td><td><font face="courier" size="-1">"[]"</font></td></tr> <tr><td><b>sourceId_AllChildren</b></td><td>If defined, only Data events which have an <font face="courier" size="-1">sourceId</font> which is a child DataSource that is has the specified DataSource Id as a parent ancestor in the hierarchy will be allowed through. A stringified empty sequence is treated as "allow any value". <td>Empty string, or a stringified <font face="courier" size="-1">sequence&ltstring&gt</font> containing the set of sourceIds to filter on</td> <td>Stringified <font face="courier" size="-1">sequence&ltstring&gt</font></td><td>False</td><td><font face="courier" size="-1">"[]"</font></td></tr> <tr><td><b>dValue<br>xValue<br>yValue<br>zValue</b></td> <td>For each of the numeric members of the Data event a filter condition can be specified. The operator always comes first, followed by one or two bounding values. If two values are requires they can be separated by a space or comma.<br> <font face="courier" size="-1">&lt; X</font>  less than<br> <font face="courier" size="-1">&lt;= X</font>  less than or equal<br> <font face="courier" size="-1">= X</font>  equals<br> <font face="courier" size="-1">&gt;= X</font>  greater than or equal<br> <font face="courier" size="-1">&gt; X</font>  greater than<br> <font face="courier" size="-1">&gt;&lt; X Y</font>  between<br> <font face="courier" size="-1">&gt;=&lt; X Y</font>  between inclusive<br> <font face="courier" size="-1">&lt;&gt; X Y</font>  without<br> <font face="courier" size="-1">&lt;=&gt; X Y</font>  without inclusive <td>Non-empty string containing condition.</td> <td>String</td><td>False</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Filter Analytic which takes Data events on the channel "Input1"  
// and filters out any Data events from the data source "MySensor" that are not 
// anomalies (IE just filter raw and computed values).
send com.industry.analytics.Analytic("Filter", ["Input1"], ["Output1"], {"sourceId":"MySensor","!type":DataConstants.ANOMALY } ) to "";

// Define a Filter Analytic which takes Data events on the channel "Input1"  
// and filters out any Data events except those which have a dValue parameter 
// of between 15.0 and 30.0.
send com.industry.analytics.Analytic("Filter", ["Input1"], ["Output1"], {"dValue":">< 15.0, 30.0"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Filter Analytic filters the Data events passed through it based on the configuration parameters given below. Appropriate use of the <font face="courier" size="-1">sValue</font> filters can create a stream with just float values or just string values if desired.]]></Summary><See package="com.industry.analytics" type="DataSource"><Description><![CDATA[The DataSource event that is used to define groups of DataSources. This is required if using the <font face="courier" size="-1">sourceId_AllChildren</font> or <font face="courier" size="-1">sourceId_OnlyLeafNodes</font> filters.]]></Description></See><Routes/><Emits/><Enqueues/><Sends><Reference package="com.industry.analytics" type="SourceIdsRequest"/></Sends><Listens><Reference package="com.industry.analytics" type="SourceIdsResponse"/></Listens><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Filter&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="TYPE" type="string" typeValue="&quot;type&quot;"><Description><![CDATA[This constant defines the configuration parameter name that allows filtering by the Data events <font face="courier" size="-1">type</font> parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that allows filtering by the Data events <font face="courier" size="-1">type</font> parameter]]></Summary></Member><Member constant="true" name="SOURCEID" type="string" typeValue="&quot;sourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that allows filtering by the Data events <font face="courier" size="-1">sourceId</font> parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that allows filtering by the Data events <font face="courier" size="-1">sourceId</font> parameter]]></Summary></Member><Member constant="true" name="HASPARAM" type="string" typeValue="&quot;hasParam&quot;"><Description><![CDATA[This constant defines the configuration parameter name that allows filtering by the Data events <font face="courier" size="-1">params</font> parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that allows filtering by the Data events <font face="courier" size="-1">params</font> parameter]]></Summary></Member><Member constant="true" name="SVALUE" type="string" typeValue="&quot;sValue&quot;"><Description><![CDATA[This constant defines the configuration parameter name that allows filtering by the Data events <font face="courier" size="-1">sValue</font> parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that allows filtering by the Data events <font face="courier" size="-1">sValue</font> parameter]]></Summary></Member><Member constant="true" name="NOT_TYPE" type="string" typeValue="&quot;!type&quot;"><Description><![CDATA[This constant defines the configuration parameter name that allows filtering by not having the Data events <font face="courier" size="-1">type</font> parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that allows filtering by not having the Data events <font face="courier" size="-1">type</font> parameter]]></Summary></Member><Member constant="true" name="NOT_SOURCEID" type="string" typeValue="&quot;!sourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that allows filtering by not having the Data events <font face="courier" size="-1">sourceId</font> parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that allows filtering by not having the Data events <font face="courier" size="-1">sourceId</font> parameter]]></Summary></Member><Member constant="true" name="NOT_HASPARAM" type="string" typeValue="&quot;!hasParam&quot;"><Description><![CDATA[This constant defines the configuration parameter name that allows filtering by not having the Data events <font face="courier" size="-1">params</font> parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that allows filtering by not having the Data events <font face="courier" size="-1">params</font> parameter]]></Summary></Member><Member constant="true" name="NOT_SVALUE" type="string" typeValue="&quot;!sValue&quot;"><Description><![CDATA[This constant defines the configuration parameter name that allows filtering by not having the Data events <font face="courier" size="-1">sValue</font> parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that allows filtering by not having the Data events <font face="courier" size="-1">sValue</font> parameter]]></Summary></Member><Member constant="true" name="SOURCEID_ONLYLEAFNODES" type="string" typeValue="&quot;sourceId_OnlyLeafNodes&quot;"><Description><![CDATA[This constant defines the configuration parameter name that allows filtering where the Data events <font face="courier" size="-1">sourceId</font> parameter is a terminating leaf node in the hierarchical tree of DataSources (IE it has no associated child DataSources) associated with the parent sourceId defined by this parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that allows filtering where the Data events <font face="courier" size="-1">sourceId</font> parameter is a terminating leaf node in the hierarchical tree of DataSources (IE it has no associated child DataSources) associated with the parent sourceId defined by this parameter]]></Summary></Member><Member constant="true" name="SOURCEID_ALLCHILDREN" type="string" typeValue="&quot;sourceId_AllChildren&quot;"><Description><![CDATA[This constant defines the configuration parameter name that allows filtering where the Data events <font face="courier" size="-1">sourceId</font> parameter is a node in the hierarchical tree of DataSources associated with the parent sourceId defined by this parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that allows filtering where the Data events <font face="courier" size="-1">sourceId</font> parameter is a node in the hierarchical tree of DataSources associated with the parent sourceId defined by this parameter]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_typeFilter" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters><Description><![CDATA[Local cached value for the type filter configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the type filter configuration parameter value]]></Summary></Member><Member name="_sourceIdFilter" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters><Description><![CDATA[Local cached value for the sourceIdfilter configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the sourceIdfilter configuration parameter value]]></Summary></Member><Member name="_paramFilter" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters><Description><![CDATA[Local cached value for the param filter configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the param filter configuration parameter value]]></Summary></Member><Member name="_sValueFilter" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters><Description><![CDATA[Local cached value for the sValue filter configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the sValue filter configuration parameter value]]></Summary></Member><Member name="_notTypeFilter" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters><Description><![CDATA[Local cached value for the NOT type filter configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the NOT type filter configuration parameter value]]></Summary></Member><Member name="_notSourceIdFilter" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters><Description><![CDATA[Local cached value for the NOT sourceIdfilter configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the NOT sourceIdfilter configuration parameter value]]></Summary></Member><Member name="_notParamFilter" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters><Description><![CDATA[Local cached value for the NOT param filter configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the NOT param filter configuration parameter value]]></Summary></Member><Member name="_notsValueFilter" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters><Description><![CDATA[Local cached value for the NOT sValue filter configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the NOT sValue filter configuration parameter value]]></Summary></Member><Member name="_numericFilters" private="true" type="sequence"><Parameters><Parameter package="com.industry.analytics.flow_manipulation" type="NumericFilter"/></Parameters><Description><![CDATA[Local cached value for numeric filters]]></Description><Summary><![CDATA[Local cached value for numeric filters]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends><Reference package="com.industry.analytics" type="SourceIdsRequest"/></Sends><Listens><Reference package="com.industry.analytics" type="SourceIdsResponse"/></Listens><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="Sorter"><Description><![CDATA[In a general use case the event ordering cannot be guaranteed. This may be because the events are batched in some way for different devices or network delays. For example, where vehicles take data readings every 5 minutes but only return the results as a batch every hour.

 The Sorter Analytic will receive multiple Data events of different names and store them into a single ordered sequence sorted by the originating timestamp. It will then dispatch the oldest stored values after a minimum (held) time period. The result is a single combined stream of Data events that will be delayed by a minimum period.  This delay will allow for late or out-of-order events to be correctly ordered.

 Multiple input channels can also be specified where the Data events that are received are sorted across all input channels before they are sent in time-order to their corresponding output channel.  Note that the set of input channels must be in the same order as the output channels.

 We cannot use the internal Correlator timers as incoming data will be heavily clustered, so we need to use the event timestamp values: <ol> <li>Receive a new Data; insert into sequence ordered by timestamp value within the event.</li> <li>Time period between the newly received timestamp value and the oldest timestamp in the sequence compared; if that event has been stored for more than the minimum period then dispatch it and remove from the sequence; then look at the next oldest and repeat until no events have been held for the minimum period.</li> <li>We may not get a new event before we need to dispatch the next output event and we can't rely on correlator time; so we:</li> <ol type="a"><li>Calculate a timeout period as 10% of the minimum hold period (e.g. t_out := min * 0.1;).</li> <li>Set an on wait timer for this calculated period.</li> <li>If we get a new incoming Data event before the timer triggers the timer is torn down and re-added in the cycle of the new event.</li> <li>If the timer triggers then our new time is the timestamp of the last received event plus the calculated timeout period (e.g. newtime := sequence[0].timestamp + t_out).</li> <li>We then use this to try to flush the sequence. We then create a new timeout and go to step 3 and repeat.</li> </ol></ol> <dl><dt><b>Input Data events:</b></dt> <dd>At least one or more input Data channel must be provided</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>The same number of output Data channels must be provided as are defined in the input Data channel list.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window in which to sort Data events</td> <td>Stringified decimal <font face="courier" size="-1">>0.0d</font></td><td>Decimal</td><td>True</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Sorter Analytic which takes Data events on the channel "Input1"  
// and stores the values in a 10.0 second time window before republishing them 
// ordered by the events timestamp parameter.
send com.industry.analytics.Analytic("Sorter", ["Input1"], ["Output1"], {"timeWindow":"10.0"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[In a general use case the event ordering cannot be guaranteed. This may be because the events are batched in some way for different devices or network delays. For example, where vehicles take data readings every 5 minutes but only return the results as a batch every hour.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Sorter&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="TIMEWINDOW" type="string" typeValue="&quot;timeWindow&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the time window (in seconds) that the events will be sorted within]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the time window (in seconds) that the events will be sorted within]]></Summary></Member><Member name="_datastream" private="true" type="dictionary"><Parameters><Parameter type="decimal"/><Parameter type="sequence"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters><Description><![CDATA[Local cache of the set of data received, keyed by the the timestamp they were received.]]></Description><Summary><![CDATA[Local cache of the set of data received, keyed by the the timestamp they were received.]]></Summary></Member><Member name="_outputDataNameMap" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_timeWindow" private="true" type="decimal"><Description><![CDATA[Local cached value for the timeWindow configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the timeWindow configuration parameter value]]></Summary></Member><Member name="_waitWindow" private="true" type="decimal"><Description/><Summary/></Member><Member name="_waitListener" private="true" type="listener"><Description/><Summary/></Member><Member name="_expiredTimestamp" private="true" type="decimal"><Description/><Summary/></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="_sendDatas" private="true" staticNature=""><Description><![CDATA[1) Adjust and send on the Data events from the given timestamp in the dictionary. 2) Remove the sent entries from the dictionary. This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[1) Adjust and send on the Data events from the given timestamp in the dictionary. 2) Remove the sent entries from the dictionary. This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="timestamp" type="decimal"/></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.

 The following operations are implemented: 1) Ensure the Data is valid, ie; within the current time window. 2) Add it to the dictionary of Data events being sorted. 3) Check the dictionary for Data events that should be sent on. 4) Create a listener for the next check on 3) should a new Data not arrive.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_checkForTimedOutDatas" private="true" staticNature=""><Description><![CDATA[Check through the dictionary for entries which have now exceeded the specified time window. Send on those that have. This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[Check through the dictionary for entries which have now exceeded the specified time window. Send on those that have. This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_validateData" private="true" staticNature=""><Description><![CDATA[Ensure the Data is within the allotted time window, else send it on as an Anomaly. This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[Ensure the Data is within the allotted time window, else send it on as an Anomaly. This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_createWaitListener" private="true" staticNature=""><Description><![CDATA[Creates wait listener for ensuring that already received Data events are sent on even if no new Data events are received from the source. This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[Creates wait listener for ensuring that already received Data events are sent on even if no new Data events are received from the source. This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="Repeater"><Description><![CDATA[The Repeater Analytic takes <font face="courier" size="-1">Data</font> events from the input channel and repeats the Data received if an update was not received within the defined time interval.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>interval</b></td><td>The time interval to repeat the data after unless an update was received</td> <td>Stringified decimal <font face="courier" size="-1">>0.0d</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">60.0d</font></td></tr> <tr><td><b>bySourceId</b></td><td>If true, the Data event to be repeated is partitioned based on the <font face="courier" size="-1">sourceId</font> parameter of the input data stream</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Repeater Analytic which takes Data events from input channel ("Input1")
// and republishes the events to a single output channel ("Output1") if another update 
// for the same sourceId was not received within the default time interval
send com.industry.analytics.Analytic("Repeater", ["Input1"], ["Output1"], new dictionary&ltstring,string&gt ) to "";

// Define a Repeater Analytic which takes Data events from input channel ("Input2")
// and republishes the events to a single output channel ("Output2") if another update 
// for the same sourceId was not received within the defined time interval of 20seconds
send com.industry.analytics.Analytic("Repeater", ["Input2"], ["Output2"], {"interval":"20.0d"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Repeater Analytic takes <font face="courier" size="-1">Data</font> events from the input channel and repeats the Data received if an update was not received within the defined time interval.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Data"/></Listens><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Repeater&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="TIME_INTERVAL" type="string" typeValue="&quot;interval&quot;"><Description><![CDATA[This constant defines the configuration parameter name for defining the repeat interval.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name for defining the repeat interval.]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the events received will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the events received will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="REPEATED_PARAM" type="string" typeValue="&quot;repeated&quot;"><Description><![CDATA[This constant defines the parameter name that is added to the repeatedly generated events. This will not be added to Data events that are received within the time window]]></Description><Summary><![CDATA[This constant defines the parameter name that is added to the repeatedly generated events. This will not be added to Data events that are received within the time window]]></Summary></Member><Member name="_interval" private="true" type="decimal"><Description><![CDATA[Local cached time interval configuration parameter name]]></Description><Summary><![CDATA[Local cached time interval configuration parameter name]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_inputDataName" private="true" type="string"><Description><![CDATA[Local cached input Data name]]></Description><Summary><![CDATA[Local cached input Data name]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Data"/></Listens><Spawns/><Parameters><Parameter name="dIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="Suppressor"><Description><![CDATA[The Suppressor Analytic will suppress events from the defined input stream from appearing on the output stream name for a set duration following a trigger event. The trigger event will be passed through regardless allowing the prevention of repeated warnings, for example.

 The trigger event is based upon a defined parameter, the events acted upon may use the same parameter or another. It is also possible to reset the suppressing by the use of an event with a different parameter. It is also possible to independently set whether suppressing should happen just for the source in the trigger event or for all sources received, and whether a reset should just apply to its source or reset all sources being actioned. It is also possible to set whether a new trigger event received before the end of a suppressing window should restart the duration timer or just be ignored.

 A special case exists for the parameters below. If the parameter value <font face="courier" size="-1">"type"</font> is used, then the Suppressor will look at the type member of the Data event instead of the params dictionary. In this case the param value is mandatory and must be one of <font face="courier" size="-1">'r', 'c' or 'a'</font> (raw, computed or anomaly).

 The suppressor can also be inverted so that events are suppressed until after a trigger event. See the <font face="courier" size="-1">suppressionType</font> param.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.  All the <font face="courier" size="-1">params</font> from the input Data are copied to the unsuppressed Data events.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window in seconds in which to suppress events over</td> <td>Stringified decimal <font face="courier" size="-1">>0.0d</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">60.0d"</font></td></tr> <tr><td><b>triggerParam</b></td><td>Defines the parameter name at which to start suppressing events on. The <font face="courier" size="-1">triggerParamValue</font> parameter can also be used to trigger on a specific parameter value. If the value is set to <font face="courier" size="-1">"type"</font>, then the Suppressor will look at the type member of the Data event instead of the params dictionary. In this case the <font face="courier" size="-1">triggerParamValue</font> value is mandatory and must be one of <font face="courier" size="-1">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td>Non-empty string value</td><td>String</td><td>True</td><td></td></tr> <tr><td><b>triggerParamValue</b></td><td>Defines a specific value for the <font face="courier" size="-1">triggerParam</font> before starting to suppress events. If this configuration parameter was not defined or an empty string is provided, then any values for the <font face="courier" size="-1">triggerParam</font> will trigger suppressing to start. If the <font face="courier" size="-1">triggerParam</font> value is set to <font face="courier" size="-1">"type"</font>, this parameter is mandatory and must be one of <font face="courier" size="-1">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td></td><td>String</td><td>False</td><td><font face="courier" size="-1">""</font></td></tr> <tr><td><b>triggerExtension</b></td><td>Defines whether or not the time window will be reset following a new trigger match</td> <td></td><td><font face="courier" size="-1">"true"</font> or <font face="courier" size="-1">"false"</font></td><td>False</td><td><font face="courier" size="-1">"false"</font></td></tr> <tr><td><b>actionParam</b></td><td>Defines the parameter name which will cause the Data event to be suppressed once a trigger has been received. The <font face="courier" size="-1">actionParamValue</font> parameter to trigger on a specific parameter value. If the value is set to <font face="courier" size="-1">"type"</font>, then the Suppressor will look at the type member of the Data event instead of the params dictionary. In this case the <font face="courier" size="-1">actionParamValue</font> value is mandatory and must be one of <font face="courier" size="-1">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td></td><td>String</td><td>False</td><td>The <font face="courier" size="-1">triggerParam</font></td></tr> <tr><td><b>actionParamValue</b></td><td>Defines a specific value for the <font face="courier" size="-1">actionParam</font> before suppressing events. If this configuration parameter was not defined or an empty string is provided, then any values for the <font face="courier" size="-1">actionParam</font> will trigger suppressing to start. If the <font face="courier" size="-1">actionParam</font> value is set to <font face="courier" size="-1">"type"</font>, this parameter is mandatory and must be one of <font face="courier" size="-1">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td></td><td>String</td><td>False</td><td><font face="courier" size="-1">""</font></td></tr> <tr><td><b>resetParam</b></td><td>Defines the parameter name which will cause the trigger Suppressor to be reset. The <font face="courier" size="-1">resetParamValue</font> parameter can also be used to reset the trigger on a specific parameter value. If this parameter is not defined, the trigger will never be reset. If the value is set to <font face="courier" size="-1">"type"</font>, then the Suppressor will look at the type member of the Data event instead of the params dictionary. In this case the <font face="courier" size="-1">resetParamValue</font> value is mandatory and must be one of <font face="courier" size="-1">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td></td><td>String</td><td>False</td><td>""</td></tr> <tr><td><b>resetParamValue</b></td><td>Defines a specific value for the <font face="courier" size="-1">resetParam</font> before resetting the trigger. If the <font face="courier" size="-1">resetParam</font> value is set to <font face="courier" size="-1">"type"</font>, this parameter is mandatory and must be one of <font face="courier" size="-1">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td></td><td>String</td><td>False</td><td><font face="courier" size="-1">""</font></td></tr> <tr><td><b>suppressionType</b></td><td>Switch between two different modes of suppression.<br> <font face="courier" size="-1">startUnsuppressed</font> - Start unsuppressed, triggering events cause supression.<br> <font face="courier" size="-1">startSuppressed</font> - Start suppressed, triggering events cause unsuppression.</td> <td><font face="courier" size="-1">startUnsuppressed</font> or <font face="courier" size="-1">startSuppressed</font></td><td>String</td><td>False</td><td><font face="courier" size="-1">startUnsuppressed</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the suppression of Data events is partitioned by the <font face="courier" size="-1">sourceId</font> parameter of the input data stream</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Suppressor Analytic which takes Data events on the channel "Input1"  
// and prevents any "Computed" types of Data events from being published onto 
// the output channel "Output1" within a 20.0 second time window. For example,
// if you only want to publish periodic updates from a data source.
send com.industry.analytics.Analytic("Suppressor", ["Input1"], ["Output1"], { "timeWindow":"20.0d","triggerParam":"type","triggerParamValue":DataConstants.COMPUTED } ) to "";

// Define a Suppressor Analytic which takes Data events on the channel "Input1"  
// and waits until it receives a Data event with the parameter "isTestingEnabled"
// set to a value of "true". Once the Analytic has triggered, it prevents any 
// "Computed" types of Data events from being published onto the output channel 
// "Output1" within a 20.0 second time window.  For example, if you want to 
// ignore any events being published while a device is in a "test mode".
send com.industry.analytics.Analytic("Suppressor", ["Input1"], ["Output1"], { "timeWindow":"20.0d","triggerParam":"isTestingEnabled","triggerParamValue":"true",
                                                                               "actionParam":"type", "actionParamValue":DataConstants.COMPUTED } ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Suppressor Analytic will suppress events from the defined input stream from appearing on the output stream name for a set duration following a trigger event. The trigger event will be passed through regardless allowing the prevention of repeated warnings, for example.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Suppressor&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="TRIGGER_PARAM" type="string" typeValue="&quot;triggerParam&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the suppressing trigger parameter name. This can be used in conjunction with the <font face="courier" size="-1">triggerParamValue</font> configuration parameter to refine the trigger condition.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the suppressing trigger parameter name. This can be used in conjunction with the <font face="courier" size="-1">triggerParamValue</font> configuration parameter to refine the trigger condition.]]></Summary></Member><Member constant="true" name="TRIGGER_PARAM_VALUE" type="string" typeValue="&quot;triggerParamValue&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the suppressing trigger parameter value. This is used in conjunction with the <font face="courier" size="-1">triggerParam</font> configuration parameter.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the suppressing trigger parameter value. This is used in conjunction with the <font face="courier" size="-1">triggerParam</font> configuration parameter.]]></Summary></Member><Member constant="true" name="TRIGGER_EXTENSION" type="string" typeValue="&quot;triggerExtension&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the whether or not the trigger time out will be reset following a new trigger match.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the whether or not the trigger time out will be reset following a new trigger match.]]></Summary></Member><Member constant="true" name="ACTION_PARAM" type="string" typeValue="&quot;actionParam&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the action parameter name. This can be used in conjunction with the <font face="courier" size="-1">actionParamValue</font> configuration parameter to refine the action condition.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the action parameter name. This can be used in conjunction with the <font face="courier" size="-1">actionParamValue</font> configuration parameter to refine the action condition.]]></Summary></Member><Member constant="true" name="ACTION_PARAM_VALUE" type="string" typeValue="&quot;actionParamValue&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the action parameter value. This is used in conjunction with the <font face="courier" size="-1">actionParam</font> configuration parameter to refine the action condition.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the action parameter value. This is used in conjunction with the <font face="courier" size="-1">actionParam</font> configuration parameter to refine the action condition.]]></Summary></Member><Member constant="true" name="RESET_PARAM" type="string" typeValue="&quot;resetParam&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the trigger reset parameter name. This can be used in conjunction with the <font face="courier" size="-1">resetParamValue</font> configuration parameter to refine the trigger reset condition.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the trigger reset parameter name. This can be used in conjunction with the <font face="courier" size="-1">resetParamValue</font> configuration parameter to refine the trigger reset condition.]]></Summary></Member><Member constant="true" name="RESET_PARAM_VALUE" type="string" typeValue="&quot;resetParamValue&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the trigger reset parameter value. This is used in conjunction with the <font face="courier" size="-1">resetParam</font> configuration parameter to refine the trigger reset condition.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the trigger reset parameter value. This is used in conjunction with the <font face="courier" size="-1">resetParam</font> configuration parameter to refine the trigger reset condition.]]></Summary></Member><Member constant="true" name="TIMEWINDOW" type="string" typeValue="&quot;timeWindow&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the time window (in seconds) that the events will be suppressed for once triggered.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the time window (in seconds) that the events will be suppressed for once triggered.]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the suppression of Data events is partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the suppression of Data events is partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="TYPE" type="string" typeValue="&quot;type&quot;"><Description><![CDATA[This constant defines the special case parameter name which refers to the Data event type field.]]></Description><Summary><![CDATA[This constant defines the special case parameter name which refers to the Data event type field.]]></Summary></Member><Member constant="true" name="SUPPRESSION_TYPE" type="string" typeValue="&quot;suppressionType&quot;"><Description><![CDATA[Constant for the supressionType parameter name.]]></Description><Summary><![CDATA[Constant for the supressionType parameter name.]]></Summary></Member><Member constant="true" name="SUPPRESSION_TYPE_START_UNSUPPRESSED" type="string" typeValue="&quot;startUnsuppressed&quot;"><Description><![CDATA[A valid value for supressionType - suppresses data when triggered]]></Description><Summary><![CDATA[A valid value for supressionType - suppresses data when triggered]]></Summary></Member><Member constant="true" name="SUPPRESSION_TYPE_START_SUPPRESSED" type="string" typeValue="&quot;startSuppressed&quot;"><Description><![CDATA[A valid value for supressionType - unsuppresses data when triggered]]></Description><Summary><![CDATA[A valid value for supressionType - unsuppresses data when triggered]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_activeSourceIds" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="decimal"/></Parameters><Description><![CDATA[Local cached dictionary of the active suppress timeouts, keyed by the sourceId.]]></Description><Summary><![CDATA[Local cached dictionary of the active suppress timeouts, keyed by the sourceId.]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_triggerParam" private="true" type="string"><Description><![CDATA[Local cached value for the triggerParam configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the triggerParam configuration parameter value]]></Summary></Member><Member name="_hasTriggerParamValue" private="true" type="boolean"><Description><![CDATA[Local cached value that indicates whether the triggerParamValue has been defined or not]]></Description><Summary><![CDATA[Local cached value that indicates whether the triggerParamValue has been defined or not]]></Summary></Member><Member name="_triggerParamValue" private="true" type="string"><Description><![CDATA[Local cached value for the triggerParamValue configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the triggerParamValue configuration parameter value]]></Summary></Member><Member name="_triggerExtension" private="true" type="boolean"><Description><![CDATA[Local cached value for the triggerExtension configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the triggerExtension configuration parameter value]]></Summary></Member><Member name="_actionParam" private="true" type="string"><Description><![CDATA[Local cached value for the actionParam configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the actionParam configuration parameter value]]></Summary></Member><Member name="_hasActionParamValue" private="true" type="boolean"><Description><![CDATA[Local cached value that indicates whether the actionParamValue has been defined or not]]></Description><Summary><![CDATA[Local cached value that indicates whether the actionParamValue has been defined or not]]></Summary></Member><Member name="_actionParamValue" private="true" type="string"><Description><![CDATA[Local cached value for the actionParamValue configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the actionParamValue configuration parameter value]]></Summary></Member><Member name="_resetParam" private="true" type="string"><Description><![CDATA[Local cached value for the resetParam configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the resetParam configuration parameter value]]></Summary></Member><Member name="_hasResetParamValue" private="true" type="boolean"><Description><![CDATA[Local cached value that indicates whether the resetParamValue has been defined or not]]></Description><Summary><![CDATA[Local cached value that indicates whether the resetParamValue has been defined or not]]></Summary></Member><Member name="_resetParamValue" private="true" type="string"><Description><![CDATA[Local cached value for the resetParamValue configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the resetParamValue configuration parameter value]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_timeWindow" private="true" type="decimal"><Description><![CDATA[Local cached value for the timeWindow configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the timeWindow configuration parameter value]]></Summary></Member><Member name="_suppressionType" private="true" type="string"><Description><![CDATA[Local cached value for the suppressionType configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the suppressionType configuration parameter value]]></Summary></Member><Member name="_handleActive" private="true" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[The handler for active sourceIds suppressionType = StartUnsuppressed => NoOp suppressionType = StartSuppressed => SendData]]></Description><Summary><![CDATA[The handler for active sourceIds suppressionType = StartUnsuppressed => NoOp suppressionType = StartSuppressed => SendData]]></Summary></Member><Member name="_handleInactive" private="true" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[The handler for inactive sourceIds suppressionType = StartUnsuppressed => SendData suppressionType = StartSuppressed => NoOp]]></Description><Summary><![CDATA[The handler for inactive sourceIds suppressionType = StartUnsuppressed => SendData suppressionType = StartSuppressed => NoOp]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="noOp" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="sendOutput" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Event" name="Throttler"><Description><![CDATA[The Throttler Analytic removes repeated events from the output stream.

 By default the throttler will throttle any events with the same sourceId, this can be futher limited to throttle only if a particular value is the same for the previous event as the current event. This is particularly useful for removing duplicated values.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>The duration to throttle events for.</td> <td>Stringified decimal <font face="courier" size="-1">>0.0d</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">60.0d"</font></td></tr> <tr><td><b>matchDValue</b></td><td>Throttling only happens if the dValue of the previous event matches the current event.</td> <td>true or false</td><td>String</td><td>False</td><td>False</td></tr> <tr><td><b>matchSValue</b></td><td>Throttling only happens if the sValue of the previous event matches the current event.</td> <td>true or false</td><td>String</td><td>False</td><td>False</td></tr> <tr><td><b>matchXValue</b></td><td>Throttling only happens if the xValue of the previous event matches the current event.</td> <td>true or false</td><td>String</td><td>False</td><td>False</td></tr> <tr><td><b>matchYValue</b></td><td>Throttling only happens if the yValue of the previous event matches the current event.</td> <td>true or false</td><td>String</td><td>False</td><td>False</td></tr> <tr><td><b>matchZValue</b></td><td>Throttling only happens if the zValue of the previous event matches the current event.</td> <td>true or false</td><td>String</td><td>False</td><td>False</td></tr> <tr><td><b>matchType</b></td><td>Throttling only happens if the type of the previous event matches the current event.</td> <td>true or false</td><td>String</td><td>False</td><td>False</td></tr> <tr><td><b>matchParams</b></td><td>Throttling only happens if these params on the previous event match the current event.</td> <td>Stringified sequence of param names</td><td>sequence&lt;string&gt;</td><td>False</td><td>[]</td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the throttling of Data events is partitioned by the <font face="courier" size="-1">sourceId</font> parameter of the input data stream</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Thottler Analytic which takes Data events on the channel "Input1"  
// and prevents any Data events with the same sourceId from being published onto 
// the output channel "Output1" within a 20.0 second time window.
send com.industry.analytics.Analytic("Throttler", ["Input1"], ["Output1"], { "timeWindow":"20.0d" } ) to "";

// Same as above, but only throttle if the Data events have the same dValue.
// Useful for removing duplicates (use a timeWindow of "Infinity" to remove all back-to-back duplicates)
send com.industry.analytics.Analytic("Throttler", ["Input1"], ["Output1"], { "timeWindow":"20.0d", "matchDValue":"true" } ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Throttler Analytic removes repeated events from the output stream.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Throttler&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceID&quot;"/><Member constant="true" name="MATCH_DVALUE" type="string" typeValue="&quot;matchDValue&quot;"/><Member constant="true" name="MATCH_SVALUE" type="string" typeValue="&quot;matchSValue&quot;"/><Member constant="true" name="MATCH_XVALUE" type="string" typeValue="&quot;matchXValue&quot;"/><Member constant="true" name="MATCH_YVALUE" type="string" typeValue="&quot;matchYValue&quot;"/><Member constant="true" name="MATCH_ZVALUE" type="string" typeValue="&quot;matchZValue&quot;"/><Member constant="true" name="MATCH_PARAMS" type="string" typeValue="&quot;matchParams&quot;"/><Member constant="true" name="MATCH_TYPE" type="string" typeValue="&quot;matchType&quot;"/><Member constant="true" name="TIMEWINDOW" type="string" typeValue="&quot;timeWindow&quot;"/><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__INTERNAL_SOURCE_ID__&quot;"><Description/><Summary/></Member><Member name="_bySourceId" private="true" type="boolean"><Description/><Summary/></Member><Member name="_matchDValue" private="true" type="boolean"><Description/><Summary/></Member><Member name="_matchSValue" private="true" type="boolean"><Description/><Summary/></Member><Member name="_matchXValue" private="true" type="boolean"><Description/><Summary/></Member><Member name="_matchYValue" private="true" type="boolean"><Description/><Summary/></Member><Member name="_matchZValue" private="true" type="boolean"><Description/><Summary/></Member><Member name="_matchParams" private="true" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description/><Summary/></Member><Member name="_matchType" private="true" type="boolean"><Description/><Summary/></Member><Member name="_timeWindow" private="true" type="decimal"><Description/><Summary/></Member><Member name="_previousDataBySourceId" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description/><Summary/></Member><Member name="_outputDataName" private="true" type="string"><Description/><Summary/></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="updateAndSend" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="sourceId" type="string"/><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Monitor" name="InternEventRate" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the EventRate Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the EventRate Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternEventRate" package="com.industry.analytics.flow_manipulation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="CombinerService" private="true"><Description><![CDATA[The CombinerService monitor listens for requests to create a new Combiner Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The CombinerService monitor listens for requests to create a new Combiner Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.flow_manipulation" type="Combiner"><Description><![CDATA[The implementation of the Combiner Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternSorter" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Sorter Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Sorter Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternSorter" package="com.industry.analytics.flow_manipulation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="SuppressorService" private="true"><Description><![CDATA[The SuppressorService monitor listens for requests to create a new Suppressor Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The SuppressorService monitor listens for requests to create a new Suppressor Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.flow_manipulation" type="Suppressor"><Description><![CDATA[The implementation of the Suppressor Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternThrottler" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Suppressor Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Suppressor Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternThrottler" package="com.industry.analytics.flow_manipulation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="FilterService" private="true"><Description><![CDATA[The FilterService monitor listens for requests to create a new Filter Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The FilterService monitor listens for requests to create a new Filter Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.flow_manipulation" type="Filter"><Description><![CDATA[The implementation of the Filter Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="SorterService" private="true"><Description><![CDATA[The SorterService monitor listens for requests to create a new Sorter Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The SorterService monitor listens for requests to create a new Sorter Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.flow_manipulation" type="Sorter"><Description><![CDATA[The implementation of the Sorter Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternMapper" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Suppressor Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Suppressor Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternMapper" package="com.industry.analytics.flow_manipulation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="InternRepeaterChannel" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Repeater Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Repeater Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternRepeaterChannel" package="com.industry.analytics.flow_manipulation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="RepeaterService" private="true"><Description><![CDATA[The RepeaterService monitor listens for requests to create a new Repeater Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The RepeaterService monitor listens for requests to create a new Repeater Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.flow_manipulation" type="Repeater"><Description><![CDATA[The implementation of the Repeater Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="EventRateService" private="true"><Description><![CDATA[The EventRateService monitor listens for requests to create a new EventRate Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The EventRateService monitor listens for requests to create a new EventRate Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.flow_manipulation" type="EventRate"><Description><![CDATA[The implementation of the EventRate Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternDuplicatorChannel" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Duplicator Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Duplicator Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternDuplicatorChannel" package="com.industry.analytics.flow_manipulation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="SlicerService" private="true"><Description><![CDATA[The SlicerService monitor listens for requests to create a new Slicer object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The SlicerService monitor listens for requests to create a new Slicer object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.flow_manipulation" type="Slicer"><Description><![CDATA[The implementation of the Slicer Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternSuppressor" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Suppressor Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Suppressor Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternSuppressor" package="com.industry.analytics.flow_manipulation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="InternCombinerChannel" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Combiner Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Combiner Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternCombinerChannel" package="com.industry.analytics.flow_manipulation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="ThrottlerService" private="true"><Description><![CDATA[The ThrottlerService monitor listens for requests to create a new Throttler Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The ThrottlerService monitor listens for requests to create a new Throttler Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.flow_manipulation" type="Throttler"><Description><![CDATA[The implementation of the Throttler Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternSlicer" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Slicer Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Slicer Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternSlicer" package="com.industry.analytics.flow_manipulation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="MapperService" private="true"><Description><![CDATA[The MapperService monitor listens for requests to create a new Mapper Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The MapperService monitor listens for requests to create a new Mapper Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.flow_manipulation" type="Mapper"><Description><![CDATA[The implementation of the Mapper Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="MergerService" private="true"><Description><![CDATA[This monitor implementation listens for requests to create a new instance of the Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[This monitor implementation listens for requests to create a new instance of the Analytic object, and creates the Analytic in a new unique context.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="DuplicatorService" private="true"><Description><![CDATA[The DuplicatorService monitor listens for requests to create a new Duplicator Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The DuplicatorService monitor listens for requests to create a new Duplicator Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.flow_manipulation" type="Duplicator"><Description><![CDATA[The implementation of the Duplicator Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternFilter" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Filter Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Filter Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternFilter" package="com.industry.analytics.flow_manipulation" type="StayAlive"/></Listens></Type></Package><Package depth="../../../../" display="com.industry.analytics.geolocation" name="com.industry.analytics.geolocation"><Type category="Event" name="Speed"><Description><![CDATA[The Speed Analytic computation generates a Data containing a speed calculation for each input Data received. The speed is calculated by comparing previous location Data with recent lacation Data event.

 The distance is calculated using Haversine formula. </br> a = square(sin(((lat2-lat1)in radians)/2)) + cos(Lat1 in radians) * cos(Lat2 in radians) * square(sin(((lon2-lon1) in radians)/2))</br> c = 2* atan2(sqrt(a), sqrt(1-a))</br> d = radius of earth * c </br> S = d/t

 <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Computed type are generated.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>speedUnit</b></td><td>Defines the units to use for calculating speed.</td> <td>Valid values are <font face="courier" size="-1"> KMPH</font> or <font face="courier" size="-1">MPH</font></td><td>String</td><td>False</td><td><font face="courier" size="-1">MPH</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
//Define a Speed Analytic which takes Data events on the channel "Input"
//and calculate the Speed in MPH. It publishes a Data event with the calculated
//value of Speed on the output channel "Output" after receiving every Data event. 
send com.industry.analytics.Analytic("Speed", ["Input"], ["Output"], {} ) to "";

//Define a Speed Analytic which takes Data events on the channel "Input"  
//and calculate the moving Speed in KMPH. It publishes a Data event with the calculated
//value of Speed on the output channel "Output" after receiving every Data event. 
send com.industry.analytics.Analytic("Speed", ["Input"], ["Output"], {"speedUnits": "KMPH"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Speed Analytic computation generates a Data containing a speed calculation for each input Data received. The speed is calculated by comparing previous location Data with recent lacation Data event.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Speed&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="SPEED_UNIT" type="string" typeValue="&quot;speedUnit&quot;"><Description><![CDATA[This constant defines the name of parameter speedUnits.]]></Description><Summary><![CDATA[This constant defines the name of parameter speedUnits.]]></Summary></Member><Member name="_speedUnits" private="true" type="string"><Description><![CDATA[Local cache to save speedUnits parameter value]]></Description><Summary><![CDATA[Local cache to save speedUnits parameter value]]></Summary></Member><Member constant="true" name="KMPH" private="true" type="string" typeValue="&quot;KMPH&quot;"><Description><![CDATA[Constant to save the value of speed units in Km per hour]]></Description><Summary><![CDATA[Constant to save the value of speed units in Km per hour]]></Summary></Member><Member constant="true" name="MPH" private="true" type="string" typeValue="&quot;MPH&quot;"><Description><![CDATA[Constant to save the value of distance units in Miles per hour]]></Description><Summary><![CDATA[Constant to save the value of distance units in Miles per hour]]></Summary></Member><Member name="prev" package="com.industry.analytics.geolocation" private="true" type="Location"><Description><![CDATA[Save previous location information for speed calculation]]></Description><Summary><![CDATA[Save previous location information for speed calculation]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="geoUtil" package="com.industry.analytics" type="GeoUtil"/><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="Point" private="true"><Description><![CDATA[Event for holding and parsing details of a point's location.]]></Description><Summary><![CDATA[Event for holding and parsing details of a point's location.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="x" type="decimal"/><Member name="y" type="decimal"/><Action name="parseDecimal" private="true" staticNature="static "><Description><![CDATA[Parse a decimal from a string with error checking.]]></Description><Summary><![CDATA[Parse a decimal from a string with error checking.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[The decimal value or NaN if parsing fails.]]></Description></Returns><Parameters><Parameter name="value" type="string"><Description><![CDATA[The string to be parsed as a decimal.]]></Description></Parameter></Parameters></Action><Action name="init" private="true" staticNature="static "><Description><![CDATA[Static init action creating a Point from a string of two space or comma separated decimal values.]]></Description><Summary><![CDATA[Static init action creating a Point from a string of two space or comma separated decimal values.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics.geolocation" type="Point"><Description><![CDATA[The Point event generated from trhe parsed string. If the parsing fails x and y are set to NaN and the event considered invalid.]]></Description></Returns><Parameters><Parameter name="sPoint" type="string"><Description><![CDATA[The string to be parsed to create the Point event.]]></Description></Parameter></Parameters></Action><Action name="isValid" private="true" staticNature=""><Description><![CDATA[Action for checking whether the given event instance is valid or not.]]></Description><Summary><![CDATA[Action for checking whether the given event instance is valid or not.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean indicating whether the event instance is valid. True if both x and y are legitimate decimal values.]]></Description></Returns></Action></Type><Type category="Event" name="GeoFence"><Description><![CDATA[The Geofence Analytic takes a set of input Data sourceIds and uses the location object as either a cartesian or GPS location. Based on the Analytic configuration, a Data event will be generated whenever an input Data event's location activates one of five triggers in the configuration. The sourceId could be the device identifier, a completely synthetic identifier, or perhaps an sourceId higher up a hierarchy for a group calculation in which the original Data sourceId values are irrelevant. The triggers are defined within the configuration based on whether the Data is inside the geoFence, outside the geoFence, has entered the geoFence, has exited the geoFence or has dwelled within the geoFence longer than a defined period of time. At least one of these five triggers must be enabled.

 There are three types of geoFence available, of which only one can be used in a given analytic instance.<br> 1) Square, aligned with the x-axis (geoFenceOffset).<br> 2) Circle (geoFenceRadius).<br> 3) Polygon (geoFencePolygon).

 A square and a circle always require a geoFence reference point for their centre, either defined with the geoFenceLatitude, geoFenceLongitude parameter pair, or with the geoFenceLatitudeParam, geoFenceLongitude parameter pair. Polygons can also use the parameter pairs, but may also be defined absolutely with just the vertex points, without being relative to a reference point. In this latter case, do not define either of the parameter pairs mentioned.

 A cartesian coordinate system is taken as flat and completely arbitrary. As such, no boundary validation is done on the coordinates received. For GPS, the latitude and longitude are validated, and the dateline handled. A current limitation is that the analytic will not correctly handle geoFences which cross over either pole, nor does it it check for violating this limit. GPS distance calculations use a Haversine calculation. For cartesian coordinates latitude parameters are read as the y axis and longitude as the x axis.

 When defining a polygon geoFence, it is assumed that no polygon vertex will be more than half a hemisphere from it's nearest neighbour. This assumption is used when deciding whether the link between vertices crosses the dateline or not. The polygon links are assumed to be straight lines, an assumption which works acceptable over localised areas, but will become inaccurate over large areas. The polygon is defined in the configuration as a stringified sequence of stringified vertex points. Each point contains two decimal values, using space and/or comma as separators. Eg:<br> ["0 0", "10 10", "10 0"]<br> ["0,0", "10,10", "10,0"]<br> ["0, 0", "10, 10", "10, 0"]<br> There must be at least 3 vertices as neither a point nor a line is valid.

 GeoFences can be defined in absolute terms or relative to given coordinates provided within each Data event. This allows a variety of different use cases to be used.

 The analytic has two running modes. The first is the standard Industry Analytics Kit mode of using the processData action for receiving each Data event. The second is to use the correlator hypertree directly, via listeners, for Data events. In the second case, the geoFence can only be defined upfront at init time, and is fixed for the lifetime of the analytic.

 The incoming Data events must have their xValues and yValues set to the coordinates to be checked. xValue must be the x cartesian value or longitude, yValue the y cartesian value or latitude.

 The analytic can give an output when the source has dwelt within the geofence for a defined length of time. This can either be based on the Data timestamps, in which case the output will be generated on the first Data event received after the dwellTime period. Alternatively, this can be done in real time, using a correlator wait listener. This should only be used if the data is being received in real time and the correlator time resolution is acceptable (default = 100ms). In essence, the first method requires confirmation that the source is still resident in the geoFence after the expiration of the dwell period, whereas the second method will assume the source is still resident if it has not been explicitly told otherwise. Only one dwell output will be generated per stay within the geoFence in both cases.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only one Data stream name must be provided. Its Data events must have the xValue and yValue parameters set to the coordinates of the input.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>A single Data stream name must be provided. The resulting Data events will have the same <font face="courier" size="-1">sourceId</font> as the incoming Data event. The string value ("sValue") will contain the action state of either "ENTERED", "EXITED", "DWELLED", "INSIDE" or "OUTSIDE". All the <font face="courier" size="-1">params</font> from the triggering input Data are copied to the output Data events.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>enableEntry</b></td><td>Defines whether a Data event will be generated when the incoming Data event enters the defined location.</td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>enableExit</b></td><td>Defines whether a Data event will be generated when the incoming Data event leaves the defined location.</td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>enableDwell</b></td><td>Defines whether a Data event will be generated when the incoming Data event dwells in the defined location for the period defined by the "dwellTime" parameter. </td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>enableInside</b></td><td>Defines whether a Data event will be generated when the incoming Data event is inside the defined location. </td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>enableOutside</b></td><td>Defines whether a Data event will be generated when the incoming Data event is outside the defined location. </td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>dwellTime</b></td><td>Defines the duration in seconds that a source needs to be within a geoFence to be considered as dwelling.</td> <td>Stringified decimal</td><td>Decimal</td><td>True, if enableDwell is enabled.</td><td>0.0</td></tr> <tr><td><b>realtimeDwell</b></td><td>Defines whether the dwell should be based on the Data timestamps or be real time.</td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>true, if useHypertree is enabled, otherwise false.</td></tr> <tr><td><b>geoFenceOffset</b></td><td>Defines the offset of the geoFenced square boundary from it's centre in metres</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td>0.0</td></tr> <tr><td><b>geoFenceRadius</b></td><td>Defines the radius of the geoFenced circle in metres</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td>0.0</td></tr> <tr><td><b>geoFencePolygon</b></td><td>Defines the vertices of the polygon. See examples above.</td> <td>Stringified sequence<string></td><td>String</td><td>False</td><td>[]</td></tr> <tr><td><b>geoFenceLatitude<br>geoFenceLongitude</b></td><td>Use as a pair. Defines the latitude and longitude coordinates for the reference point of the GeoFence.</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td>0.0</td></tr> <tr><td><b>geoFenceLatitudeParam<br>geoFenceLongitudeParam</b></td><td>Use as a pair. Defines the parameters which will contain the latitude and longitude coordinates for the reference point of the GeoFence. This option cannot be used with the hypertree.</td> <td>String</td><td>String</td><td>False</td><td>0.0</td></tr> <tr><td><b>useCartesianCoords</b></td><td>Whether to use cartesian coordinates (true) or GPS coordinates (false).</td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>useHypertree</b></td><td>Whether to use the hypertree (true) or the Analytics object processData action (false).</td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a GeoFence Analytic which takes Data events on the channel "Input1"  
// and uses the events xValue and yValue parameters as latitude and longitude
// to listen for events that are entering or leaving a 100m radius of Big Ben in London. 
// If there a event was received that entered/exited the defined area, then the
// Analytic will publish the event on the output channel "Output1" with the "sValue"
// parameter modified to indicate either "ENTERED" or "EXITED".  This example is better
// used when a small number of GeoFences are required, and a large number of Data events
// for that location are required.
send com.industry.analytics.Analytic("GeoFence", ["Input"], ["Output1"], {"geoFenceRadius":"100", "geoFenceLatitude":"51.500755", 
                                                                          "geoFenceLongitude":"-0.124627", "enableEntry":"true", 
                                                                          "enableExit":"true"} ) to "";

// Define a GeoFence Analytic which takes Data events on the channel "Input1"  
// and checks the events parameters for a "home_latitude" and "home_longitude"
// values to define a center point at which to calculate whether or not the 
// events xValue and yValue parameters (treated as latitude and longitude)
// are within 20m of that radius. If there a event was received that entered
// the defined area and stayed/dwelled inside that area for 60 seconds, then 
// the Analytic will publish the event on the output channel "Output1" with the 
// "sValue" parameter modified to indicate it "DWELLED".  This example is better
// used when a very large number of GeoFences with a lower number of location 
// Data events are required.
send com.industry.analytics.Analytic("GeoFence", ["Input"], ["Output1"], {"geoFenceRadius":"100", "geoFenceLatitudeParam":"home_latitude", 
                                                                          "geoFenceLongitudeParam":"home_longitude", "enableDwell":"true", 
                                                                          "dwellTime":"60.0"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Geofence Analytic takes a set of input Data sourceIds and uses the location object as either a cartesian or GPS location. Based on the Analytic configuration, a Data event will be generated whenever an input Data event's location activates one of five triggers in the configuration. The sourceId could be the device identifier, a completely synthetic identifier, or perhaps an sourceId higher up a hierarchy for a group calculation in which the original Data sourceId values are irrelevant. The triggers are defined within the configuration based on whether the Data is inside the geoFence, outside the geoFence, has entered the geoFence, has exited the geoFence or has dwelled within the geoFence longer than a defined period of time. At least one of these five triggers must be enabled.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Data"/></Listens><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;GeoFence&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="ENABLE_ENTRY" type="string" typeValue="&quot;enableEntry&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event enters the defined location]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event enters the defined location]]></Summary></Member><Member constant="true" name="ENABLE_EXIT" type="string" typeValue="&quot;enableExit&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event exits the defined location]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event exits the defined location]]></Summary></Member><Member constant="true" name="ENABLE_INSIDE" type="string" typeValue="&quot;enableInside&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event has a Geolocation that is inside the GeoFenced area.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event has a Geolocation that is inside the GeoFenced area.]]></Summary></Member><Member constant="true" name="ENABLE_OUTSIDE" type="string" typeValue="&quot;enableOutside&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event has a Geolocation that is outside the GeoFenced area.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event has a Geolocation that is outside the GeoFenced area.]]></Summary></Member><Member constant="true" name="ENTERED" type="string" typeValue="&quot;ENTERED&quot;"/><Member constant="true" name="EXITED" type="string" typeValue="&quot;EXITED&quot;"/><Member constant="true" name="DWELLED" type="string" typeValue="&quot;DWELLED&quot;"/><Member constant="true" name="INSIDE" type="string" typeValue="&quot;INSIDE&quot;"/><Member constant="true" name="OUTSIDE" type="string" typeValue="&quot;OUTSIDE&quot;"/><Member constant="true" name="ENABLE_DWELL" type="string" typeValue="&quot;enableDwell&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event dwells within the defined location for at least the duration specified by the "dwellTime" parameter]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event dwells within the defined location for at least the duration specified by the "dwellTime" parameter]]></Summary></Member><Member constant="true" name="DWELL_TIME" type="string" typeValue="&quot;dwellTime&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the minium duration (in seconds) a Data event will need to stay in the location before a Data event is generated for the dwell action.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the minium duration (in seconds) a Data event will need to stay in the location before a Data event is generated for the dwell action.]]></Summary></Member><Member constant="true" name="GEOFENCE_LATITUDE" type="string" typeValue="&quot;geoFenceLatitude&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the latitude of the geofenced area]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the latitude of the geofenced area]]></Summary></Member><Member constant="true" name="GEOFENCE_LONGITUDE" type="string" typeValue="&quot;geoFenceLongitude&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the longitude of the geofenced area]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the longitude of the geofenced area]]></Summary></Member><Member constant="true" name="GEOFENCE_LATITUDE_PARAM" type="string" typeValue="&quot;geoFenceLatitudeParam&quot;"><Description><![CDATA[This constant defines the configuration parameter name in the Data event that defines the latitude of the geofenced area]]></Description><Summary><![CDATA[This constant defines the configuration parameter name in the Data event that defines the latitude of the geofenced area]]></Summary></Member><Member constant="true" name="GEOFENCE_LONGITUDE_PARAM" type="string" typeValue="&quot;geoFenceLongitudeParam&quot;"><Description><![CDATA[This constant defines the configuration parameter name in the Data event that defines the longitude of the geofenced area]]></Description><Summary><![CDATA[This constant defines the configuration parameter name in the Data event that defines the longitude of the geofenced area]]></Summary></Member><Member constant="true" name="GEOFENCE_OFFSET" type="string" typeValue="&quot;geoFenceOffset&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the offset of the geofenced area in metres, when using a square geofence.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the offset of the geofenced area in metres, when using a square geofence.]]></Summary></Member><Member constant="true" name="GEOFENCE_RADIUS" type="string" typeValue="&quot;geoFenceRadius&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the radius of the geofenced area in metres, when using a circular geofence.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the radius of the geofenced area in metres, when using a circular geofence.]]></Summary></Member><Member constant="true" name="GEOFENCE_POLYGON" type="string" typeValue="&quot;geoFencePolygon&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the corners of a polygon, when using a polygon geofence.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the corners of a polygon, when using a polygon geofence.]]></Summary></Member><Member constant="true" name="USE_CARTESIAN_COORDS" type="string" typeValue="&quot;useCartesianCoords&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether the coordinates should be treated as GPS latitude/longitude points or as cartesian coordinates]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether the coordinates should be treated as GPS latitude/longitude points or as cartesian coordinates]]></Summary></Member><Member constant="true" name="USE_HYPERTREE" type="string" typeValue="&quot;useHypertree&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether hypertree listeners should be used when geoFenceLatitude and geoFenceLongitude are specified.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether hypertree listeners should be used when geoFenceLatitude and geoFenceLongitude are specified.]]></Summary></Member><Member constant="true" name="REALTIME_DWELL" type="string" typeValue="&quot;realtimeDwell&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether the dwell uses a realtime EPL wait listener or is based soley on Data event timestamps.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether the dwell uses a realtime EPL wait listener or is based soley on Data event timestamps.]]></Summary></Member><Member constant="true" name="METERS_PER_DEGREE_LATITUDE" type="decimal" typeValue="111111.1111d"><Description><![CDATA[Defines the constant value for the number of meters in a degree of latitude. Typically used in geo-location distance calculations.]]></Description><Summary><![CDATA[Defines the constant value for the number of meters in a degree of latitude. Typically used in geo-location distance calculations.]]></Summary></Member><Member constant="true" name="EARTH_RADIUS" type="decimal" typeValue="6371000.0d"><Description><![CDATA[Radius of the Earth in metres. No point being more precise with spherical model.]]></Description><Summary><![CDATA[Radius of the Earth in metres. No point being more precise with spherical model.]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="_cacheLocationUpdates" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="decimal"/></Parameters><Description><![CDATA[Cache containing the sources that are currently inside the defined geofenced area.  A timestamp of the entry time is cached for use with the dwell handler.]]></Description><Summary><![CDATA[Cache containing the sources that are currently inside the defined geofenced area.  A timestamp of the entry time is cached for use with the dwell handler.]]></Summary></Member><Member name="_inputDataName" private="true" type="string"><Description><![CDATA[Local cached input Data name]]></Description><Summary><![CDATA[Local cached input Data name]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_entryEnabled" private="true" type="boolean"><Description><![CDATA[Local cached configuration parameter for whether an output Data event should be generated when the GeoFence is entered.]]></Description><Summary><![CDATA[Local cached configuration parameter for whether an output Data event should be generated when the GeoFence is entered.]]></Summary></Member><Member name="_exitEnabled" private="true" type="boolean"><Description><![CDATA[Local cached configuration parameter for whether an output Data event should be generated when the GeoFence is exited.]]></Description><Summary><![CDATA[Local cached configuration parameter for whether an output Data event should be generated when the GeoFence is exited.]]></Summary></Member><Member name="_insideEnabled" private="true" type="boolean"><Description><![CDATA[Local cached configuration parameter for whether an output Data event should be generated when a Geolocation is received that is outside the GeoFenced area.]]></Description><Summary><![CDATA[Local cached configuration parameter for whether an output Data event should be generated when a Geolocation is received that is outside the GeoFenced area.]]></Summary></Member><Member name="_outsideEnabled" private="true" type="boolean"><Description><![CDATA[Local cached configuration parameter for whether an output Data event should be generated when a Geolocation is received that is inside the GeoFenced area.]]></Description><Summary><![CDATA[Local cached configuration parameter for whether an output Data event should be generated when a Geolocation is received that is inside the GeoFenced area.]]></Summary></Member><Member name="_dwellEnabled" private="true" type="boolean"><Description><![CDATA[Local cached configuration parameter for whether an output Data event should be generated when the GeoFence is dwelled within for the defined period of time.]]></Description><Summary><![CDATA[Local cached configuration parameter for whether an output Data event should be generated when the GeoFence is dwelled within for the defined period of time.]]></Summary></Member><Member name="_dwellTime" private="true" type="decimal"><Description><![CDATA[Local cached configuration parameter for the defined period of time (in seconds) before it will be counted as being dwelled.]]></Description><Summary><![CDATA[Local cached configuration parameter for the defined period of time (in seconds) before it will be counted as being dwelled.]]></Summary></Member><Member name="_useHypertree" private="true" type="boolean"><Description><![CDATA[Whether to use the hypertree listener implementation or the enriched Data implementation.]]></Description><Summary><![CDATA[Whether to use the hypertree listener implementation or the enriched Data implementation.]]></Summary></Member><Member name="_geoFenceLatitudeParam" private="true" type="string"><Description><![CDATA[Parameter to use for latitude on incoming enriched Data when not using hypertree.]]></Description><Summary><![CDATA[Parameter to use for latitude on incoming enriched Data when not using hypertree.]]></Summary></Member><Member name="_geoFenceLongitudeParam" private="true" type="string"><Description><![CDATA[Parameter to use for longitude on incoming enriched Data when not using hypertree.]]></Description><Summary><![CDATA[Parameter to use for longitude on incoming enriched Data when not using hypertree.]]></Summary></Member><Member name="_geoFenceLatitude" private="true" type="decimal"><Description><![CDATA[Local cached configuration parameter for the GeoFence latitude, when this value is fixed for the analytic instance. NaN otherwise.]]></Description><Summary><![CDATA[Local cached configuration parameter for the GeoFence latitude, when this value is fixed for the analytic instance. NaN otherwise.]]></Summary></Member><Member name="_geoFenceLongitude" private="true" type="decimal"><Description><![CDATA[Local cached configuration parameter for the GeoFence longitude, when this value is fixed for the analytic instance. NaN otherwise.]]></Description><Summary><![CDATA[Local cached configuration parameter for the GeoFence longitude, when this value is fixed for the analytic instance. NaN otherwise.]]></Summary></Member><Member name="_geoLocationPrimary" private="true" type="location"><Description><![CDATA[The primary geoLocation based off the coordinates of the geoFence.]]></Description><Summary><![CDATA[The primary geoLocation based off the coordinates of the geoFence.]]></Summary></Member><Member name="_geoLocationDateline" private="true" type="location"><Description><![CDATA[A secondary geoLocation to cover the case when the geoFence crosses the dateline. This location will be offset either + or - 360 degress from the primary location in longitude.]]></Description><Summary><![CDATA[A secondary geoLocation to cover the case when the geoFence crosses the dateline. This location will be offset either + or - 360 degress from the primary location in longitude.]]></Summary></Member><Member name="_crossesDateline" private="true" type="boolean"><Description><![CDATA[Whether the geoFence crosses the dateline.]]></Description><Summary><![CDATA[Whether the geoFence crosses the dateline.]]></Summary></Member><Member name="_geoFenceOffset" private="true" type="decimal"><Description><![CDATA[GeoFence offset in metres.]]></Description><Summary><![CDATA[GeoFence offset in metres.]]></Summary></Member><Member name="_geoFenceRadius" private="true" type="decimal"><Description><![CDATA[GeoFence radius in metres.]]></Description><Summary><![CDATA[GeoFence radius in metres.]]></Summary></Member><Member name="_geoFencePolygonStringSeq" private="true" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[String form of geoFence polygon. Required for longer storage when using Data lat/long.]]></Description><Summary><![CDATA[String form of geoFence polygon. Required for longer storage when using Data lat/long.]]></Summary></Member><Member name="_geoFencePolygon" package="com.industry.analytics.geolocation" private="true" type="Polygon"><Description><![CDATA[GeoFence polygon.]]></Description><Summary><![CDATA[GeoFence polygon.]]></Summary></Member><Member name="_useCartesianCoords" private="true" type="boolean"><Description><![CDATA[Whether we shoud use cartesian coordinates or not.]]></Description><Summary><![CDATA[Whether we shoud use cartesian coordinates or not.]]></Summary></Member><Member name="_realtimeDwell" private="true" type="boolean"><Description><![CDATA[Whether we should be using a wait listener or Data timestamp for determining the length of dwell.]]></Description><Summary><![CDATA[Whether we should be using a wait listener or Data timestamp for determining the length of dwell.]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="_processSignificantData" private="true" staticNature=""><Description><![CDATA[Deals with Data events found to be inside of the geoFence location boundary. Determines, based on the type of geoFence in use, whether the Data is really inside or outside the geoFence.]]></Description><Summary><![CDATA[Deals with Data events found to be inside of the geoFence location boundary. Determines, based on the type of geoFence in use, whether the Data is really inside or outside the geoFence.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[the Data being processed.]]></Description></Parameter><Parameter name="geoFenceLatitude" type="decimal"><Description><![CDATA[The latitude of the geoFence.]]></Description></Parameter><Parameter name="geoFenceLongitude" type="decimal"><Description><![CDATA[The longitude of the geoFence.]]></Description></Parameter></Parameters></Action><Action name="_parseDecimal" private="true" staticNature="static "><Description><![CDATA[Parse a decimal from a string with error checking.]]></Description><Summary><![CDATA[Parse a decimal from a string with error checking.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[The decimal value or NaN if parsing fails.]]></Description></Returns><Parameters><Parameter name="value" type="string"><Description><![CDATA[The string to be parsed as a decimal.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This action should not be called directly by the Users application.

 This is the internal action that sets up the set of listeners for the different conditions that the GeoFence Analytic supports.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This action should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="_calculateGeoLocation" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="geoFenceLatitude" type="decimal"/><Parameter name="geoFenceLongitude" type="decimal"/></Parameters></Action><Action name="_toRadians" private="true" staticNature=""><Description><![CDATA[This helper action calculates the Radians for a given decimal. This is used in the Haversine calculations.]]></Description><Summary><![CDATA[This helper action calculates the Radians for a given decimal. This is used in the Haversine calculations.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" type="decimal"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="_processInsideData" private="true" staticNature=""><Description><![CDATA[Deals with Data events found to be inside of the geoFenced area.]]></Description><Summary><![CDATA[Deals with Data events found to be inside of the geoFenced area.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[the Data being processed.]]></Description></Parameter></Parameters></Action><Action name="_setupGeoFenceHandler" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This action should not be called directly by the Users application.

 This is the internal action that sets up the set of listeners for the different conditions that the GeoFence Analytic supports.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This action should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Data"/></Listens><Spawns/></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_processOutsideData" private="true" staticNature=""><Description><![CDATA[Deals with Data events found to be outside of the geoFenced area.]]></Description><Summary><![CDATA[Deals with Data events found to be outside of the geoFenced area.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[the Data being processed.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="Polygon" private="true"><Description><![CDATA[Event for creating and testing a polygon geofence. Algorithm from allenryderflex.com/polygon/]]></Description><Summary><![CDATA[Event for creating and testing a polygon geofence. Algorithm from allenryderflex.com/polygon/]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_vertices" type="sequence"><Parameters><Parameter package="com.industry.analytics.geolocation" type="Point"/></Parameters></Member><Member name="_constants" type="sequence"><Parameters><Parameter type="decimal"/></Parameters></Member><Member name="_multiples" type="sequence"><Parameters><Parameter type="decimal"/></Parameters></Member><Member name="_boundingBox" type="location"/><Member name="_offset" type="decimal"/><Member name="_crossesDateline" type="boolean"/><Member name="_useCartesianCoords" type="boolean"/><Action name="_parseVertices" private="true" staticNature="static "><Description><![CDATA[Parse a sequence of string vertices in to points, returning the resulting Polygon.]]></Description><Summary><![CDATA[Parse a sequence of string vertices in to points, returning the resulting Polygon.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics.geolocation" type="Polygon"><Description><![CDATA[A Polygon event created from the incoming data.]]></Description></Returns><Parameters><Parameter name="sVertices" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[sequence<string> of polygon vertices,]]></Description></Parameter></Parameters></Action><Action name="getLocation" staticNature=""><Description><![CDATA[Returns the horizontal quadrilateral bounding box that contains the polygon. For use with the basic hypertree listeners and the first check in processData.]]></Description><Summary><![CDATA[Returns the horizontal quadrilateral bounding box that contains the polygon. For use with the basic hypertree listeners and the first check in processData.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="location"><Description><![CDATA[A location event containing the outer bounds of the polygon aligned with the x-axis.]]></Description></Returns></Action><Action name="isValid" staticNature=""><Description><![CDATA[Checks whether the Polygon is in a valid state for use.]]></Description><Summary><![CDATA[Checks whether the Polygon is in a valid state for use.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean result for validity.]]></Description></Returns></Action><Action name="isPointInPolygon" staticNature=""><Description><![CDATA[Checks whether the provided point is inside the polygon.]]></Description><Summary><![CDATA[Checks whether the provided point is inside the polygon.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[Whether the point is inside the polygon (true) or outside (false).]]></Description></Returns><Parameters><Parameter name="x" type="decimal"><Description><![CDATA[Longitude or cartesian x coordinate,]]></Description></Parameter><Parameter name="y" type="decimal"><Description><![CDATA[Latitude or cartesian y coordinate.]]></Description></Parameter></Parameters></Action><Action name="initAbsolute" staticNature="static "><Description><![CDATA[Creates a Polygon event based entirely on the vertex points provided.]]></Description><Summary><![CDATA[Creates a Polygon event based entirely on the vertex points provided.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics.geolocation" type="Polygon"><Description><![CDATA[A Polygon event created from the incoming data.]]></Description></Returns><Parameters><Parameter name="sVertices" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[sequence<string> of polygon vertices,]]></Description></Parameter><Parameter name="useCartesianCoords" type="boolean"><Description><![CDATA[Whether the vertices are cartesian or based on lat/long.]]></Description></Parameter></Parameters></Action><Action name="initRelative" staticNature="static "><Description><![CDATA[Creates a Polygon event based on the vertex points provided relative to a fixed point.]]></Description><Summary><![CDATA[Creates a Polygon event based on the vertex points provided relative to a fixed point.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics.geolocation" type="Polygon"><Description><![CDATA[A Polygon event created from the incoming data.]]></Description></Returns><Parameters><Parameter name="latitude" type="decimal"><Description><![CDATA[Latitide, or cartesian y, value of polygon fixed point.]]></Description></Parameter><Parameter name="longitude" type="decimal"><Description><![CDATA[Longitude, or cartesian x, value of polygon fixed point.]]></Description></Parameter><Parameter name="sVertices" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[sequence<string> of polygon vertices,]]></Description></Parameter><Parameter name="useCartesianCoords" type="boolean"><Description><![CDATA[Whether the vertices are cartesian or based on lat/long.]]></Description></Parameter></Parameters></Action><Action name="_preProcess" private="true" staticNature=""><Description><![CDATA[Do the pre=processing possible up front for checking whether a point is within the polygon.]]></Description><Summary><![CDATA[Do the pre=processing possible up front for checking whether a point is within the polygon.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="Distance"><Description><![CDATA[The Distance Analytic computation generates a Data containing a Distance calculation for each input Data received from a point. The Distance is calculated by comparing a fixed location point with recent lacation Data event.

 The distance is calculated using Haversine formula. </br> a = square(sin(((lat2-lat1)in radians)/2)) + cos(Lat1 in radians) * cos(Lat2 in radians) * square(sin(((lon2-lon1) in radians)/2))</br> c = 2* atan2(sqrt(a), sqrt(1-a))</br> d = radius of earth * c </br>

 <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Computed type are generated.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>latitude</b></td><td>Defines the latitude of fixed point.</td> <td><font face="courier" size="-1">Between -90.0 and +90.0 </font> </td><td>Decimal</td><td>True</td><td> </td></tr> <tr><td><b>longitude</b></td><td>Defines the longitude of fixed point.</td> <td><font face="courier" size="-1">Between -180.0 and +180.0 </font> </td><td>Decimal</td><td>True</td><td> </td></tr> <tr><td><b>DistanceUnits</b></td><td>Defines the units to use for calculating Distance.</td> <td>Valid values are <font face="courier" size="-1"> KMS</font> or <font face="courier" size="-1">MILES</font></td><td>String</td><td>False</td><td><font face="courier" size="-1">MILES</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
//Define a Distance Analytic which takes Data events on the channel "Input"  
//and calculate the Distance in Miles. It publishes
//a Data event with the calculated value of Distance on the output channel "Output" after receiving every Data event. 
send com.industry.analytics.Analytic("Distance", ["Input"], ["Output"], {"latitude":"52.087653486", "longitude":"0.7462948756"} ) to "";

//Define a Distance Analytic which takes Data events on the channel "Input"  
//and calculate the moving Distance in KM. It publishes
//a Data event with the calculated value of Distance on the output channel "Output" after receiving every Data event. 
send com.industry.analytics.Analytic("Distance", ["Input"], ["Output"], {"latitude":"52.087653486", "longitude":"0.7462948756","distanceUnits": "KMPH"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Distance Analytic computation generates a Data containing a Distance calculation for each input Data received from a point. The Distance is calculated by comparing a fixed location point with recent lacation Data event.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Distance&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="LATITUDE" type="string" typeValue="&quot;latitude&quot;"><Description><![CDATA[This constant defines the name of parameter latitude.]]></Description><Summary><![CDATA[This constant defines the name of parameter latitude.]]></Summary></Member><Member constant="true" name="LONGITUDE" type="string" typeValue="&quot;longitude&quot;"><Description><![CDATA[This constant defines the name of parameter longitude.]]></Description><Summary><![CDATA[This constant defines the name of parameter longitude.]]></Summary></Member><Member constant="true" name="DISTANCE_UNIT" type="string" typeValue="&quot;distanceUnit&quot;"><Description><![CDATA[This constant defines the name of parameter distanceUnits.]]></Description><Summary><![CDATA[This constant defines the name of parameter distanceUnits.]]></Summary></Member><Member name="_latitude" private="true" type="decimal"><Description><![CDATA[Local cache defining the latitude parameter value]]></Description><Summary><![CDATA[Local cache defining the latitude parameter value]]></Summary></Member><Member name="_longitude" private="true" type="decimal"><Description><![CDATA[Local cache defining the longitude parameter value]]></Description><Summary><![CDATA[Local cache defining the longitude parameter value]]></Summary></Member><Member name="_distanceUnits" private="true" type="string"><Description><![CDATA[Local cache to save distanceUnits parameter value]]></Description><Summary><![CDATA[Local cache to save distanceUnits parameter value]]></Summary></Member><Member constant="true" name="KMS" private="true" type="string" typeValue="&quot;KMS&quot;"><Description><![CDATA[Constant defining the value of distance units in Kilometres]]></Description><Summary><![CDATA[Constant defining the value of distance units in Kilometres]]></Summary></Member><Member constant="true" name="MILES" private="true" type="string" typeValue="&quot;MILES&quot;"><Description><![CDATA[Constant defining the value of distance units in Miles]]></Description><Summary><![CDATA[Constant defining the value of distance units in Miles]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="geoUtil" package="com.industry.analytics" type="GeoUtil"/><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="Exit" private="true"><Description><![CDATA[Event for killing the realtime dwell listener when an source exits the geoFence. Necessary as the exit Data may not be enabled and is sent to the wrong channel in any case.]]></Description><Summary><![CDATA[Event for killing the realtime dwell listener when an source exits the geoFence. Necessary as the exit Data may not be enabled and is sent to the wrong channel in any case.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="sourceId" type="string"/></Type><Type category="Event" name="Location" private="true"><Description><![CDATA[Event to save location data with timestamp]]></Description><Summary><![CDATA[Event to save location data with timestamp]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="latitude" type="decimal"/><Member name="longitude" type="decimal"/><Member name="timestamp" type="decimal"/><Action name="reset" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Monitor" name="InternGeofence" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Geofence Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Geofence Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternGeofence" package="com.industry.analytics.geolocation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="GeoFenceService" private="true"><Description><![CDATA[The GeoFenceService monitor listens for requests to create a new GeoFence Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The GeoFenceService monitor listens for requests to create a new GeoFence Analytic object, and creates the Analytic in a new unique context.]]></Summary><See reference="com.industry.analytics.geofence.GeoFence"><Description><![CDATA[The implementation of the GeoFence Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternSpeed" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Distance Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Distance Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternSpeed" package="com.industry.analytics.geolocation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="DistanceService" private="true"><Description><![CDATA[The DistanceService monitor listens for requests to create a new Distance Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The DistanceService monitor listens for requests to create a new Distance Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.geolocation" type="Distance"><Description><![CDATA[The implementation of the Distance Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternDistance" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Distance Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Distance Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternDistance" package="com.industry.analytics.geolocation" type="StayAlive"/></Listens></Type><Type category="Monitor" name="SpeedService" private="true"><Description><![CDATA[The SpeedService monitor listens for requests to create a new Speed Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The SpeedService monitor listens for requests to create a new Speed Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.geolocation" type="Speed"><Description><![CDATA[The implementation of the Speed Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type></Package><Package depth="../../../" display="com.industry.analytics" name="com.industry.analytics"><Type category="Event" name="ClearCache" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="tableName" type="string"/></Type><Type category="Event" name="AnalyticInterface"><Description><![CDATA[The AnalyticObject event is used to create instances of the AnalyticInterface object that can be used to manage and implement an instance of a Analytic.

 This object should not be used directly, and should be created using the <font face="courier" size="-1">com.industry.analytics.AnalyticObject#init()</font> action.]]></Description><Summary><![CDATA[The AnalyticObject event is used to create instances of the AnalyticInterface object that can be used to manage and implement an instance of a Analytic.]]></Summary><See action="init" package="com.industry.analytics" type="AnalyticObject"><Description><![CDATA[action  This action is used to create an instance of the AnalyticInterface]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="getInputFromChannel" type="action"><Parameters><Parameter type="boolean"/></Parameters><Description><![CDATA[This action enables the Analytic instance to listen for the set of Data events associated with the set defined in the Analytics <font face="courier" size="-1">inputDataNames</font> configuration parameter that was used to create the new AnalyticObject.

 <dl><dt><b>Parameters:</b></dt> <dd>flag - This Boolean flag indicates whether or not to listen to in the incoming Data events.</dd> </dl>]]></Description><Summary><![CDATA[This action enables the Analytic instance to listen for the set of Data events associated with the set defined in the Analytics <font face="courier" size="-1">inputDataNames</font> configuration parameter that was used to create the new AnalyticObject.]]></Summary></Member><Member name="addOutputConnection" type="action"><Parameters><Parameter type="string"/><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters><Description><![CDATA[This action defines a specific action callback that will be called when the Analytic generates a new Data event.

 <dl><dt><b>Parameters:</b></dt> <dd>outputDataName - The name of the output Data that the action callback is associated with.</dd> <dd>callback          - The user application defined action callback that will be called when the Analytic generates a Data event.</dd> </dl>]]></Description><Summary><![CDATA[This action defines a specific action callback that will be called when the Analytic generates a new Data event.]]></Summary></Member><Member name="reset" type="action"><Parameters/><Description><![CDATA[This action enables the Analytic instance to reset its state.]]></Description><Summary><![CDATA[This action enables the Analytic instance to reset its state.]]></Summary></Member><Member name="start" type="action"><Parameters/><Description><![CDATA[This action enables the Analytic instance to start listening to, and processing incoming Data events.]]></Description><Summary><![CDATA[This action enables the Analytic instance to start listening to, and processing incoming Data events.]]></Summary></Member><Member name="stop" type="action"><Parameters/><Description><![CDATA[This action stops the Analytic instance from listening to, and processing any further incoming Data events.]]></Description><Summary><![CDATA[This action stops the Analytic instance from listening to, and processing any further incoming Data events.]]></Summary></Member><Member name="_processData" private="true" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[This action calls the user-defined action callback that was provided when creating the AnalyticObject instance. This action processes the provided Data event that was received, and performs any calculation/manipulation that is required.

 <dl><dt><b>Parameters:</b></dt> <dd>Data - The Data event that was received by the Analytic.</dd> </dl>]]></Description><Summary><![CDATA[This action calls the user-defined action callback that was provided when creating the AnalyticObject instance. This action processes the provided Data event that was received, and performs any calculation/manipulation that is required.]]></Summary></Member><Member name="_processDataStream" private="true" type="action"><Parameters><Parameter type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters><Description><![CDATA[This action calls the user-defined action callback that was provided when creating the AnalyticObject instance. This action processes the provided Data events that were received and treated as a coherent set, and performs any calculation/manipulation that is required.

 <dl><dt><b>Parameters:</b></dt> <dd>Data - The Data event that was received by the Analytic.</dd> </dl>]]></Description><Summary><![CDATA[This action calls the user-defined action callback that was provided when creating the AnalyticObject instance. This action processes the provided Data events that were received and treated as a coherent set, and performs any calculation/manipulation that is required.]]></Summary></Member><Member name="sendData" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[This action sends the specified Data event to the output. The method of sending the Data depends on the Analytics configuration, and whether one or more action callbacks have been added.

 <dl><dt><b>Parameters:</b></dt> <dd>Data - The Data event that it to be sent by the Analytic.</dd> </dl>]]></Description><Summary><![CDATA[This action sends the specified Data event to the output. The method of sending the Data depends on the Analytics configuration, and whether one or more action callbacks have been added.]]></Summary></Member><Action name="processDataStream" staticNature=""><Description><![CDATA[This action calls the optional user-defined action callback that was provided when creating the AnalyticObject instance. This action processes the provided Data events that were received and treated as a coherent set, and performs any calculation/manipulation that is required.

 <dl><dt><b>Parameters:</b></dt> <dd>datastream - The Data event that was received by the Analytic.</dd> </dl>]]></Description><Summary><![CDATA[This action calls the optional user-defined action callback that was provided when creating the AnalyticObject instance. This action processes the provided Data events that were received and treated as a coherent set, and performs any calculation/manipulation that is required.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="datastream" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters></Action><Action name="processData" staticNature=""><Description><![CDATA[This action calls the optional user-defined action callback that was provided when creating the AnalyticObject instance. This action processes the provided Data event that was received, and performs any calculation/manipulation that is required.

 <dl><dt><b>Parameters:</b></dt> <dd>data - The Data event that was received by the Analytic.</dd> </dl>]]></Description><Summary><![CDATA[This action calls the optional user-defined action callback that was provided when creating the AnalyticObject instance. This action processes the provided Data event that was received, and performs any calculation/manipulation that is required.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="data" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Event" name="CurrentVersion"><Description><![CDATA[This event is sent from the Versioning Service in response to the the CheckVersion event that requests the current version and whether the version provided in the request is compatible with this version of the Industry Analytics Kit.]]></Description><Summary><![CDATA[This event is sent from the Versioning Service in response to the the CheckVersion event that requests the current version and whether the version provided in the request is compatible with this version of the Industry Analytics Kit.]]></Summary><See package="com.industry.analytics" type="CheckVersion"><Description><![CDATA[This event is sent to the VersioningService to request the version compatibility check.]]></Description></See><See reference="com.industry.analytics.Constants.MANAGEMENT_CHANNEL"><Description><![CDATA[The constant that defines the name of the Analytics Management Channel]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="currentVersion" type="string"><Description><![CDATA[This parameter defines the current version of the Industry Analytics Kit.]]></Description><Summary><![CDATA[This parameter defines the current version of the Industry Analytics Kit.]]></Summary></Member><Member name="compatible" type="boolean"><Description><![CDATA[This boolean parameter indicates whether or not version provided in the CheckVersion request event was compatible with the current version of the Industry Analytics Kit.]]></Description><Summary><![CDATA[This boolean parameter indicates whether or not version provided in the CheckVersion request event was compatible with the current version of the Industry Analytics Kit.]]></Summary></Member></Type><Type category="Event" name="EnableDataReflector"><Description><![CDATA[This event enables the Data reflector so that any Data events that received on the main context, are sent to the Data context (defined by the Data events <font face="courier" size="-1">name</font> parameter)]]></Description><Summary><![CDATA[This event enables the Data reflector so that any Data events that received on the main context, are sent to the Data context (defined by the Data events <font face="courier" size="-1">name</font> parameter)]]></Summary><See package="com.industry.analytics" type="Data"><Description><![CDATA[The Data event]]></Description></See><See package="com.industry.analytics" type="Reflector"><Description><![CDATA[The Data Reflector monitor]]></Description></See><See package="com.industry.analytics" type="DisableDataReflector"><Description><![CDATA[The event to disable the Data event reflector]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Type><Type category="Event" name="DataSourceParam" private="true"><Description><![CDATA[This object is currently not used.]]></Description><Summary><![CDATA[This object is currently not used.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="TABLE_NAME" type="string" typeValue="&quot;DataSourceParams&quot;"><Description><![CDATA[This constant defines the name of the MemoryStore table that is used to persist the DataSource data for the configured Industry Analytics Kit]]></Description><Summary><![CDATA[This constant defines the name of the MemoryStore table that is used to persist the DataSource data for the configured Industry Analytics Kit]]></Summary></Member><Member name="id" type="string"/><Member name="name" type="string"/><Member name="value" type="string" wildcard="true"/><Action name="getKey" private="true" staticNature=""><Description><![CDATA[This helper action generates a key value for the a unique row in the MemoryStore table for storing/retrieving information about a specific DataSource.]]></Description><Summary><![CDATA[This helper action generates a key value for the a unique row in the MemoryStore table for storing/retrieving information about a specific DataSource.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"><Description><![CDATA[A string containing a unique key value for the current DataSource.]]></Description></Returns></Action><Action name="populateFromRow" private="true" staticNature=""><Description><![CDATA[This helper action populates the current DataSourceParam object instance with the information in the specified MemoryStore row.

 <b>Note:</b> This action will overwrite any previous values that were defined in this objects instance.]]></Description><Summary><![CDATA[This helper action populates the current DataSourceParam object instance with the information in the specified MemoryStore row.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="row" type="com.apama.memorystore.Row"><Description><![CDATA[The MemoryStore row to be used for populating the current DataSourceParam]]></Description></Parameter></Parameters></Action><Action name="getRow" private="true" staticNature=""><Description><![CDATA[This helper action populates a MemoryStore row from the specified table with the current set of DataSourceParam.]]></Description><Summary><![CDATA[This helper action populates a MemoryStore row from the specified table with the current set of DataSourceParam.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Row"><Description><![CDATA[A string containing a unique key value for the current DataSourceParam.]]></Description></Returns><Parameters><Parameter name="t" type="com.apama.memorystore.Table"><Description><![CDATA[The MemoryStore table used for storing DataSources]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="SourceIdsResponse"><Description><![CDATA[This event is sent in response to the to the <font face="courier" size="-1">com.industry.analytics.DataSourceIdsRequest</font> on the DataSource Service channel (I.E. "DATASOURCE_MGMT_CHANNEL") which requests the set of associated DataSources for the one specified. Note that the entire hierachy of associated child DataSources are returned in the response, not just the direct children of a specified DataSource.]]></Description><Summary><![CDATA[This event is sent in response to the to the <font face="courier" size="-1">com.industry.analytics.DataSourceIdsRequest</font> on the DataSource Service channel (I.E. "DATASOURCE_MGMT_CHANNEL") which requests the set of associated DataSources for the one specified. Note that the entire hierachy of associated child DataSources are returned in the response, not just the direct children of a specified DataSource.]]></Summary><See package="com.industry.analytics" type="SourceIdsRequest"><Description><![CDATA[The request event that this event is sent in response to.]]></Description></See><See package="com.industry.analytics" type="DataSource"><Description><![CDATA[The definition of an DataSource object.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="sourceId" type="string"><Description><![CDATA[The unique identifier of the DataSource that the set of associated DataSources was originally requested for.]]></Description><Summary><![CDATA[The unique identifier of the DataSource that the set of associated DataSources was originally requested for.]]></Summary></Member><Member name="sourceIds" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[A sequence containing the set of associated DataSource Ids.]]></Description><Summary><![CDATA[A sequence containing the set of associated DataSource Ids.]]></Summary></Member></Type><Type category="Event" name="TimeWeightedMovingAverage"><Description><![CDATA[This event handles the storage and calculations for a time weighted moving average.

 The following formulas are implemented:

 Standard formulation: ma_n = a * x_n + (1 - a) * ma_n-1 = ma_n-1 + a * (x_n - ma_n-1) a = (1 - e^-u) u = (t_n - t_n-1) / T

 Re-arrange for efficiency: ma_n = (1 - a) * x_n + a * ma_n-1 = x_n + a * (ma_n-1 - x_n) a = e^-u u = (t_n - t_n-1) / T

 Note: If there are multiple values (x_n) for a particular timestamp (t_n) then the average is used Note: If t_n < t_n-1 then the value is ignored]]></Description><Summary><![CDATA[This event handles the storage and calculations for a time weighted moving average.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_eMa" private="true" type="decimal"><Description><![CDATA[Current Moving average.]]></Description><Summary><![CDATA[Current Moving average.]]></Summary></Member><Member name="_eMa_tn_1" private="true" type="optional"><Parameters><Parameter type="decimal"/></Parameters><Description><![CDATA[Moving average for the previous timestamp.]]></Description><Summary><![CDATA[Moving average for the previous timestamp.]]></Summary></Member><Member name="_tn_1" private="true" type="decimal"><Description><![CDATA[The previous timestamp.]]></Description><Summary><![CDATA[The previous timestamp.]]></Summary></Member><Member name="_tn" private="true" type="decimal"><Description><![CDATA[The current timestamp.]]></Description><Summary><![CDATA[The current timestamp.]]></Summary></Member><Member name="_sum_tn" private="true" type="decimal"><Description><![CDATA[The sum of the values at the current timestamp.]]></Description><Summary><![CDATA[The sum of the values at the current timestamp.]]></Summary></Member><Member name="_count_tn" private="true" type="decimal"><Description><![CDATA[The count of the values at the current timestamp.]]></Description><Summary><![CDATA[The count of the values at the current timestamp.]]></Summary></Member><Member name="_timeWindow" private="true" type="decimal"><Description><![CDATA[Time window to be used for the time weighting.]]></Description><Summary><![CDATA[Time window to be used for the time weighting.]]></Summary></Member><Member name="_a" private="true" type="decimal"><Description><![CDATA[The value of a, an intermediate value in the above formulas. Required by subsequent calculations, such as the variance.]]></Description><Summary><![CDATA[The value of a, an intermediate value in the above formulas. Required by subsequent calculations, such as the variance.]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[Call this action immediately after creating a new instance of this event. Initialises the time weighted moving average.]]></Description><Summary><![CDATA[Call this action immediately after creating a new instance of this event. Initialises the time weighted moving average.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="decimal"><Description><![CDATA[The first decimal value in the set of data to be averaged.]]></Description></Parameter><Parameter name="timestamp" type="decimal"><Description><![CDATA[The decimal timestamp when the first value was generated.]]></Description></Parameter><Parameter name="timeWindow" type="decimal"><Description><![CDATA[The time window for the weight: T in the above formulas.]]></Description></Parameter></Parameters></Action><Action name="a" staticNature=""><Description><![CDATA[Returns the intermediate value a from the above formulas. Required by the variance calculation, for example.]]></Description><Summary><![CDATA[Returns the intermediate value a from the above formulas. Required by the variance calculation, for example.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Decimal value of a.]]></Description></Returns></Action><Action name="currentSum" staticNature=""><Description><![CDATA[Get the sum of the values at the current timestamp (Used by variance calculation)]]></Description><Summary><![CDATA[Get the sum of the values at the current timestamp (Used by variance calculation)]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[The sum of the values as a decimal]]></Description></Returns></Action><Action name="currentTimestamp" staticNature=""><Description><![CDATA[Get the timestamp of the most recent update to the average]]></Description><Summary><![CDATA[Get the timestamp of the most recent update to the average]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Timestamp as a decimal]]></Description></Returns></Action><Action name="currentCount" staticNature=""><Description><![CDATA[Get the count of the values at the current timestamp (Used by variance calculation)]]></Description><Summary><![CDATA[Get the count of the values at the current timestamp (Used by variance calculation)]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[The count of the values as a decimal]]></Description></Returns></Action><Action name="eMa" staticNature=""><Description><![CDATA[Returns the current moving average.]]></Description><Summary><![CDATA[Returns the current moving average.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Moving average as a decimal value.]]></Description></Returns></Action><Action name="create" staticNature="static "><Description><![CDATA[Creates a new instance of the Time Weighted Moving Average, automaticallying initialising.]]></Description><Summary><![CDATA[Creates a new instance of the Time Weighted Moving Average, automaticallying initialising.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="TimeWeightedMovingAverage"/><Parameters><Parameter name="value" type="decimal"><Description><![CDATA[The first decimal value in the set of data to be averaged.]]></Description></Parameter><Parameter name="timestamp" type="decimal"><Description><![CDATA[The decimal timestamp when the first value was generated.]]></Description></Parameter><Parameter name="timeWindow" type="decimal"><Description><![CDATA[The time window for the weight: T in the above formulas.]]></Description></Parameter></Parameters></Action><Action name="previousEMA" staticNature=""><Description><![CDATA[Get the moving average for the previous timestamp (This may differ from the previously calculated eMa if there were multiple values for the same tiemstamp)]]></Description><Summary><![CDATA[Get the moving average for the previous timestamp (This may differ from the previously calculated eMa if there were multiple values for the same tiemstamp)]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="optional"><Parameters><Parameter type="decimal"/></Parameters><Description><![CDATA[Moving average as a decimal value.]]></Description></Returns></Action><Action name="update" staticNature=""><Description><![CDATA[Updates the moving average with a new data point.]]></Description><Summary><![CDATA[Updates the moving average with a new data point.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="decimal"><Description><![CDATA[The decimal value to be added to the moving average.]]></Description></Parameter><Parameter name="timestamp" type="decimal"><Description><![CDATA[The decimal timestamp when the value was generated.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="FFT"><Description><![CDATA[This event provides functionality to calculate Fast-Fourier Transformations using the Cooley-Tukey algorithm. Fourier analysis converts data from a time-domain to a representation in the frequency domain (and vice versa).]]></Description><Summary><![CDATA[This event provides functionality to calculate Fast-Fourier Transformations using the Cooley-Tukey algorithm. Fourier analysis converts data from a time-domain to a representation in the frequency domain (and vice versa).]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Action name="getAmplitudes" staticNature="static "><Description><![CDATA[Get the set of amplitude values from a previously calculated set of FFT results]]></Description><Summary><![CDATA[Get the set of amplitude values from a previously calculated set of FFT results]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="decimal"/></Parameters></Returns><Parameters><Parameter name="fftResult" type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Parameter></Parameters></Action><Action name="fft" staticNature="static "><Description><![CDATA[Calculate the FFT based on simple numbers]]></Description><Summary><![CDATA[Calculate the FFT based on simple numbers]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Returns><Parameters><Parameter name="buffer" type="sequence"><Parameters><Parameter type="decimal"/></Parameters></Parameter></Parameters></Action><Action name="getLargestFrequency" staticNature="static "><Description><![CDATA[Get the frequency with the highest amplitude from a previously calculated set of FFT results]]></Description><Summary><![CDATA[Get the frequency with the highest amplitude from a previously calculated set of FFT results]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/><Parameters><Parameter name="sampleSize" type="integer"/><Parameter name="fftResult" type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Parameter></Parameters></Action><Action name="getFrequencies" staticNature="static "><Description><![CDATA[Get the set of frequency values from a previously calculated set of FFT results]]></Description><Summary><![CDATA[Get the set of frequency values from a previously calculated set of FFT results]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="integer"/></Parameters></Returns><Parameters><Parameter name="sampleSize" type="integer"/><Parameter name="fftResult" type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Parameter></Parameters></Action><Action name="ifft" staticNature="static "><Description><![CDATA[This action calculates the inverse FFT]]></Description><Summary><![CDATA[This action calculates the inverse FFT]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Returns><Parameters><Parameter name="amplitudes" type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Parameter></Parameters></Action><Action name="getAmplitudesAndFrequencies" staticNature="static "><Description><![CDATA[Get the set of amplitude and frequency pairs from a previously calculated set of FFT results]]></Description><Summary><![CDATA[Get the set of amplitude and frequency pairs from a previously calculated set of FFT results]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter package="com.industry.analytics" type="AmplitudeFrequency"/></Parameters></Returns><Parameters><Parameter name="sampleSize" type="integer"/><Parameter name="fftResult" type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Parameter></Parameters></Action><Action name="cfft" staticNature="static "><Description><![CDATA[Calculate the FFT based on complex numbers]]></Description><Summary><![CDATA[Calculate the FFT based on complex numbers]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Returns><Parameters><Parameter name="buffer" type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Parameter></Parameters></Action><Action name="getTopNAmplitudesAndFrequencies" staticNature="static "><Description><![CDATA[Get the defined number of highest amplitude and frequency pairs from a previously calculated set of FFT results]]></Description><Summary><![CDATA[Get the defined number of highest amplitude and frequency pairs from a previously calculated set of FFT results]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter package="com.industry.analytics" type="AmplitudeFrequency"/></Parameters></Returns><Parameters><Parameter name="sampleSize" type="integer"/><Parameter name="fftResult" type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Parameter><Parameter name="numToRet" type="integer"/></Parameters></Action></Type><Type category="Event" name="StoreProxy" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_store" type="com.apama.memorystore.Store"/><Member name="_valid" type="boolean"/><Action name="getStore" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Store"/></Action><Action name="isValid" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/></Action></Type><Type category="Event" name="DataDetails"><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="name" type="string"/><Member name="description" type="string"/><Member name="units" type="string"/><Member name="paramNamesAndTypes" type="dictionary" wildcard="true"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Member></Type><Type category="Event" name="TimeWeightedBollinger"><Description><![CDATA[This event handles the storage and calculations for time weighted bollinger bands. Internally the TimeWeightedVariance event is used.

 The following formulas are implemented:

 Moving average: Standard formulation: ma_n = a * x_n + (1 - a) * ma_n-1 = ma_n-1 + a * (x_n - ma_n-1) a = (1 - e^-u) u = (t_n - t_n-1) / T

 Re-arrange for efficiency: ma_n = (1 - a) * x_n + a * ma_n-1 = x_n + a * (ma_n-1 - x_n) a = e^-u u = (t_n - t_n-1) / T

 Variance: S_n  = a * S_n-1 + (1 - a)(x_n - ma_n)(x_n - ma_n-1) = a * (S_n-1 + (1 - a)(x_n - ma_n-1)^2)

 Standard deviation: StDev = S_n^0.5]]></Description><Summary><![CDATA[This event handles the storage and calculations for time weighted bollinger bands. Internally the TimeWeightedVariance event is used.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_twv" package="com.industry.analytics" private="true" type="TimeWeightedVariance"><Description><![CDATA[TimeWeightedVariance event.]]></Description><Summary><![CDATA[TimeWeightedVariance event.]]></Summary></Member><Member name="_standardDeviationMultiple" private="true" type="decimal"><Description><![CDATA[Multiple of standard deviation to add and subtract from the moving average to create the Bollinger bands.]]></Description><Summary><![CDATA[Multiple of standard deviation to add and subtract from the moving average to create the Bollinger bands.]]></Summary></Member><Member name="_eLowerBollinger" private="true" type="decimal"><Description><![CDATA[Lower Bollinger band value.]]></Description><Summary><![CDATA[Lower Bollinger band value.]]></Summary></Member><Member name="_eUpperBollinger" private="true" type="decimal"><Description><![CDATA[Upper Bollinger band value.]]></Description><Summary><![CDATA[Upper Bollinger band value.]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[Call this action immediately after creating a new instance of this event. Initialises the time weighted variance.]]></Description><Summary><![CDATA[Call this action immediately after creating a new instance of this event. Initialises the time weighted variance.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="decimal"><Description><![CDATA[The first decimal value in the set of data to be analysed.]]></Description></Parameter><Parameter name="timestamp" type="decimal"><Description><![CDATA[The decimal timestamp when the first value was generated.]]></Description></Parameter><Parameter name="timeWindow" type="decimal"><Description><![CDATA[The time window for the weight: T in the above formulas.]]></Description></Parameter><Parameter name="standardDeviationMultiple" type="decimal"><Description><![CDATA[The multiple to be used on the standard deviation for deriving the upper and lower Bollinger bands.]]></Description></Parameter></Parameters></Action><Action name="eMa" staticNature=""><Description><![CDATA[Returns the current moving average.]]></Description><Summary><![CDATA[Returns the current moving average.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Moving average as a decimal value.]]></Description></Returns></Action><Action name="eUpperBollinger" staticNature=""><Description><![CDATA[Returns the current upper Bollinger value.]]></Description><Summary><![CDATA[Returns the current upper Bollinger value.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Upper Bollinger value as a decimal value.]]></Description></Returns></Action><Action name="update" staticNature=""><Description><![CDATA[Updates the bollinger bands with a new data point.]]></Description><Summary><![CDATA[Updates the bollinger bands with a new data point.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="decimal"><Description><![CDATA[The decimal value to be added to the analysis.]]></Description></Parameter><Parameter name="timestamp" type="decimal"><Description><![CDATA[The decimal timestamp when the value was generated.]]></Description></Parameter></Parameters></Action><Action name="eLowerBollinger" staticNature=""><Description><![CDATA[Returns the current lower Bollinger value.]]></Description><Summary><![CDATA[Returns the current lower Bollinger value.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Lower Bollinger value as a decimal value.]]></Description></Returns></Action><Action name="eVar" staticNature=""><Description><![CDATA[Returns the current variance.]]></Description><Summary><![CDATA[Returns the current variance.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Variance as a decimal value.]]></Description></Returns></Action><Action name="eStDev" staticNature=""><Description><![CDATA[Returns the current standard deviation.]]></Description><Summary><![CDATA[Returns the current standard deviation.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Standard deviation as a decimal value.]]></Description></Returns></Action></Type><Type category="Event" name="TimeWeightedVariance"><Description><![CDATA[This event handles the storage and calculations for a time weighted variance. Internally the TimeWeightedMovingAverage event is used.

 The following formulas are implemented:

 Moving average: Standard formulation: ma_n = a * x_n + (1 - a) * ma_n-1 = ma_n-1 + a * (x_n - ma_n-1) a = (1 - e^-u) u = (t_n - t_n-1) / T

 Re-arrange for efficiency: ma_n = (1 - a) * x_n + a * ma_n-1 = x_n + a * (ma_n-1 - x_n) a = e^-u u = (t_n - t_n-1) / T

 Variance: S_n  = a * S_n-1 + (1 - a)(x_n - ma_n)(x_n - ma_n-1) = a * (S_n-1 + (1 - a)(x_n - ma_n-1)^2)

 Standard deviation: StDev = S_n^0.5

 Note: If there are multiple values (x_n) for a particular timestamp (t_n) then the average is used Note: If t_n < t_n-1 then the value is ignored]]></Description><Summary><![CDATA[This event handles the storage and calculations for a time weighted variance. Internally the TimeWeightedMovingAverage event is used.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_twma" package="com.industry.analytics" private="true" type="TimeWeightedMovingAverage"><Description><![CDATA[TimeWeightedMovingAverage event.]]></Description><Summary><![CDATA[TimeWeightedMovingAverage event.]]></Summary></Member><Member name="_eVar" private="true" type="decimal"><Description><![CDATA[Variance.]]></Description><Summary><![CDATA[Variance.]]></Summary></Member><Member name="_eVar_tn_1" private="true" type="decimal"><Description><![CDATA[Variance for previous timestamp]]></Description><Summary><![CDATA[Variance for previous timestamp]]></Summary></Member><Member name="_eStDev" private="true" type="decimal"><Description><![CDATA[Standard deviation.]]></Description><Summary><![CDATA[Standard deviation.]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[Call this action immediately after creating a new instance of this event. Initialises the time weighted variance.]]></Description><Summary><![CDATA[Call this action immediately after creating a new instance of this event. Initialises the time weighted variance.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="decimal"><Description><![CDATA[The first decimal value in the set of data to be analysed.]]></Description></Parameter><Parameter name="timestamp" type="decimal"><Description><![CDATA[The decimal timestamp when the first value was generated.]]></Description></Parameter><Parameter name="timeWindow" type="decimal"><Description><![CDATA[The time window for the weight: T in the above formulas.]]></Description></Parameter></Parameters></Action><Action name="eMa" staticNature=""><Description><![CDATA[Returns the current moving average.]]></Description><Summary><![CDATA[Returns the current moving average.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Moving average as a decimal value.]]></Description></Returns></Action><Action name="update" staticNature=""><Description><![CDATA[Updates the variance with a new data point.]]></Description><Summary><![CDATA[Updates the variance with a new data point.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="decimal"><Description><![CDATA[The decimal value to be added to the variance.]]></Description></Parameter><Parameter name="timestamp" type="decimal"><Description><![CDATA[The decimal timestamp when the value was generated.]]></Description></Parameter></Parameters></Action><Action name="eVar" staticNature=""><Description><![CDATA[Returns the current variance.]]></Description><Summary><![CDATA[Returns the current variance.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Variance as a decimal value.]]></Description></Returns></Action><Action name="eStDev" staticNature=""><Description><![CDATA[Returns the current standard deviation.]]></Description><Summary><![CDATA[Returns the current standard deviation.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[Standard deviation as a decimal value.]]></Description></Returns></Action></Type><Type category="Event" name="AmplitudeFrequency"><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="frequency" type="integer"/><Member name="amplitude" type="decimal"/></Type><Type category="Event" name="AnalyticObject"><Description><![CDATA[The AnalyticObject event defines the base functionality that is common across all Analytic implementations.  This object provides functionality to setup any listeners that are required, and to send generated Data events to the set of places required.

 User-defined implementations of a Analytic should use the AnalyticInterface instance that is returned from the #init() action to control/manage the base functionality of a Analytic.]]></Description><Summary><![CDATA[The AnalyticObject event defines the base functionality that is common across all Analytic implementations.  This object provides functionality to setup any listeners that are required, and to send generated Data events to the set of places required.]]></Summary><See package="com.industry.analytics" type="Data"><Description><![CDATA[The Data event that Analytics process]]></Description></See><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that should used to control/manage the Analytic implementations base functionality.]]></Description></See><Routes/><Emits/><Enqueues/><Sends><Reference package="com.industry.analytics" type="Data"/></Sends><Listens><Reference package="com.industry.analytics" type="AnalyticManagement"/><Reference package="com.industry.analytics" type="Data"/></Listens><Spawns/><Member constant="true" name="QUERY_CHANNEL" private="true" type="string" typeValue="&quot;com.apama.queries&quot;"><Description><![CDATA[This constant defines the name of the channel that is used by Apama Queries.]]></Description><Summary><![CDATA[This constant defines the name of the channel that is used by Apama Queries.]]></Summary></Member><Member constant="true" name="SEND_TO_CHANNEL" private="true" type="string" typeValue="&quot;sendResultToChannel&quot;"><Description><![CDATA[This constant defines the configuration parameter name that is can be provided in set of Analytic <font face="courier" size="-1">params</font>. This boolean flag defines whether or not the Analytic instance will send all generated Data events to a channel defined by the Data name.  This is not mutually exclusive to the <font face="courier" size="-1">"sendResultToQueryChannel"</font> configuration param.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that is can be provided in set of Analytic <font face="courier" size="-1">params</font>. This boolean flag defines whether or not the Analytic instance will send all generated Data events to a channel defined by the Data name.  This is not mutually exclusive to the <font face="courier" size="-1">"sendResultToQueryChannel"</font> configuration param.]]></Summary></Member><Member constant="true" name="SEND_TO_QUERY_CHANNEL" private="true" type="string" typeValue="&quot;sendResultToQueryChannel&quot;"><Description><![CDATA[This constant defines the configuration parameter name that is can be provided in set of Analytic <font face="courier" size="-1">params</font>. This boolean flag defines whether or not the Analytic instance will send all generated Data events to the channel defined for handling Apama Queries (I.E. "com.apama.queries"). This is not mutually exclusive to the <font face="courier" size="-1">"sendResultToChannel"</font> configuration param.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that is can be provided in set of Analytic <font face="courier" size="-1">params</font>. This boolean flag defines whether or not the Analytic instance will send all generated Data events to the channel defined for handling Apama Queries (I.E. "com.apama.queries"). This is not mutually exclusive to the <font face="courier" size="-1">"sendResultToChannel"</font> configuration param.]]></Summary></Member><Member name="_id" private="true" type="integer"><Description><![CDATA[This is an internally generated unique identifier for the AnalyticObject. Used for the KillListener event, for example.]]></Description><Summary><![CDATA[This is an internally generated unique identifier for the AnalyticObject. Used for the KillListener event, for example.]]></Summary></Member><Member name="_managementId" type="string"><Description><![CDATA[This is an external id, provided as a param within the Analytic event for picking up the relevant AnalyticManagement events. This is not necessarily unique, allowing a chain of Analytics to all respond to the same management event.]]></Description><Summary><![CDATA[This is an external id, provided as a param within the Analytic event for picking up the relevant AnalyticManagement events. This is not necessarily unique, allowing a chain of Analytics to all respond to the same management event.]]></Summary></Member><Member name="_started" private="true" type="boolean"><Description><![CDATA[This boolean flag indicates whether or not the Analytic is currently started or not.]]></Description><Summary><![CDATA[This boolean flag indicates whether or not the Analytic is currently started or not.]]></Summary></Member><Member name="_getInputFromChannel" private="true" type="boolean"><Description><![CDATA[This boolean flag indicates whether or not the Analytic is listening to events being sent on the Data events input channel.]]></Description><Summary><![CDATA[This boolean flag indicates whether or not the Analytic is listening to events being sent on the Data events input channel.]]></Summary></Member><Member name="_sendResultToChannel" private="true" type="boolean"><Description><![CDATA[This boolean flag indicates whether or not the Analytic will send all generated Data events to a channel defined by the Data name.]]></Description><Summary><![CDATA[This boolean flag indicates whether or not the Analytic will send all generated Data events to a channel defined by the Data name.]]></Summary></Member><Member name="_sendResultToQueryChannel" private="true" type="boolean"><Description><![CDATA[This boolean flag indicates whether or not the Analytic will send all generated Data events to the channel defined for handling Apama Queries (I.E. "com.apama.queries").]]></Description><Summary><![CDATA[This boolean flag indicates whether or not the Analytic will send all generated Data events to the channel defined for handling Apama Queries (I.E. "com.apama.queries").]]></Summary></Member><Member name="_sendCallbacks" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters></Parameter></Parameters><Description><![CDATA[A local cache of callback actions that have been defined for a specific input Data, keyed by the input Data name.]]></Description><Summary><![CDATA[A local cache of callback actions that have been defined for a specific input Data, keyed by the input Data name.]]></Summary></Member><Member name="_currentDataStreams" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[A local cache of the last received Data from each input channel.]]></Description><Summary><![CDATA[A local cache of the last received Data from each input channel.]]></Summary></Member><Member name="_synchronousDataStream" private="true" type="boolean"><Description><![CDATA[Whether processDataStream should be called synchronously or not.]]></Description><Summary><![CDATA[Whether processDataStream should be called synchronously or not.]]></Summary></Member><Member name="_reset" private="true" type="action"><Parameters/><Description><![CDATA[Action to call when Analytic needs reseting.]]></Description><Summary><![CDATA[Action to call when Analytic needs reseting.]]></Summary></Member><Member name="_onDelete" private="true" type="action"><Parameters/><Description><![CDATA[Action to call when Analytic is deleted for any tidy up specific to a Tranform.]]></Description><Summary><![CDATA[Action to call when Analytic is deleted for any tidy up specific to a Tranform.]]></Summary></Member><Member name="_config" package="com.industry.analytics" private="true" type="Analytic"><Description><![CDATA[The original configuration used to create a new instance of a Analytic.]]></Description><Summary><![CDATA[The original configuration used to create a new instance of a Analytic.]]></Summary></Member><Member name="_processData" private="true" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[The cached copy of the user-defined callback action that will be called to process any incoming Data events.]]></Description><Summary><![CDATA[The cached copy of the user-defined callback action that will be called to process any incoming Data events.]]></Summary></Member><Member name="_processDataStream" private="true" type="action"><Parameters><Parameter type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters><Description><![CDATA[The cached copy of the user-defined callback action that will be called to process any incoming Data events.]]></Description><Summary><![CDATA[The cached copy of the user-defined callback action that will be called to process any incoming Data events.]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new AnalyticObject instance, and calls the user application back with an instance of the AnalyticInterface once it is complete.

 User-defined implementations of a Analytic can use the AnalyticInterface instance to control/manage the base functionality of a Analytic.

 The optional action arguments are optional in the sense that a full action need not be defined. For example, if you have no onDelete() action, you can call init with the onDelete argument as <font face="courier" size="-1">new action<></font>.]]></Description><Summary><![CDATA[This action creates a new AnalyticObject instance, and calls the user application back with an instance of the AnalyticInterface once it is complete.]]></Summary><See package="com.industry.analytics" type="Data"><Description><![CDATA[The Data event that Analytics process.]]></Description></See><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object.]]></Description></See><See package="com.industry.analytics" type="AnalyticManagement"><Description><![CDATA[The Analytic management object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that should used to control/manage the Analytic implementations base functionality.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object]]></Description></Parameter><Parameter name="processData" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[Optional. The user-defined action that processes/manipulates each and every incoming Data event.]]></Description></Parameter><Parameter name="resetCb" type="action"><Parameters/><Description><![CDATA[Optional. User-defined action to be called when a analytic instance is ordered to to be reset, triggered by an appropriate AnalyticManagement event.]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The user-defined action that is called once the AnalyticObject has been completely initialised.]]></Description></Parameter></Parameters></Action><Action name="_stopInputListeners" private="true" staticNature=""><Description><![CDATA[This action unsubscribes from any defined input channels and causes any listeners to be killed by routing the KillInputChannelListeners.]]></Description><Summary><![CDATA[This action unsubscribes from any defined input channels and causes any listeners to be killed by routing the KillInputChannelListeners.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="sendData" staticNature=""><Description><![CDATA[This action sends the specified Data event to the output. The method of sending the Data depends on the Analytics configuration, and whether one or more action callbacks have been added.]]></Description><Summary><![CDATA[This action sends the specified Data event to the output. The method of sending the Data depends on the Analytics configuration, and whether one or more action callbacks have been added.]]></Summary><Routes/><Emits/><Enqueues/><Sends><Reference package="com.industry.analytics" type="Data"/></Sends><Listens/><Spawns/><Parameters><Parameter name="dataOut" package="com.industry.analytics" type="Data"><Description><![CDATA[The Data event that it to be sent by the Analytic.]]></Description></Parameter></Parameters></Action><Action name="stop" private="true" staticNature=""><Description><![CDATA[This action stops the Analytic instance from listening to, and processing any further incoming Data events.

 This method should not be called directly, and should instead be called from the action com.industry.analytics.AnalyticInterface#stop action instead.]]></Description><Summary><![CDATA[This action stops the Analytic instance from listening to, and processing any further incoming Data events.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_startInputListener" private="true" staticNature=""><Description><![CDATA[This action subscribes to any defined input channels and creates any listener for the incoming Data events.]]></Description><Summary><![CDATA[This action subscribes to any defined input channels and creates any listener for the incoming Data events.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Data"/></Listens><Spawns/></Action><Action name="_manageAnalytic" private="true" staticNature=""><Description><![CDATA[Action to manage AnalyticManagement events. This will only happen if a valid managementId has been provided at init time.]]></Description><Summary><![CDATA[Action to manage AnalyticManagement events. This will only happen if a valid managementId has been provided at init time.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="AnalyticManagement"/></Listens><Spawns/></Action><Action name="start" private="true" staticNature=""><Description><![CDATA[This action enables the Analytic instance to start listening to, and processing incoming Data events.

 This method should not be called directly, and should instead be called from the action com.industry.analytics.AnalyticInterface#start action instead.]]></Description><Summary><![CDATA[This action enables the Analytic instance to start listening to, and processing incoming Data events.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[If a reset action has been provided during initialisation, the state of the analytic instance is reset as per this user defined function. In the general case, it is expected that this will reset the analytic instance back to it's initial startup state.]]></Description><Summary><![CDATA[If a reset action has been provided during initialisation, the state of the analytic instance is reset as per this user defined function. In the general case, it is expected that this will reset the analytic instance back to it's initial startup state.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="addOutputConnection" private="true" staticNature=""><Description><![CDATA[This action defines a specific action callback that will be called when the Analytic generates a new Data event.

 This method should not be called directly, and should instead be called from the action com.industry.analytics.AnalyticInterface#addOutputConnection action instead.]]></Description><Summary><![CDATA[This action defines a specific action callback that will be called when the Analytic generates a new Data event.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="outputDataName" type="string"><Description><![CDATA[The name of the output Data that the action callback is associated with.]]></Description></Parameter><Parameter name="callback" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[The user application defined action callback that will be called when the Analytic generates a Data event.]]></Description></Parameter></Parameters></Action><Action name="initExtended" staticNature=""><Description><![CDATA[This action creates a new AnalyticObject instance, and calls the user application back with an instance of the AnalyticInterface once it is complete. This action is the same as the <font face="courier" size="-1">init()</font> action, but allows more advanced options to be defined (such as the processDataStream and onDelete actions).

 User-defined implementations of a Analytic can use the AnalyticInterface instance to control/manage the base functionality of a Analytic.

 The optional action arguments are optional in the sense that a full action need not be defined. For example, if you have no onDelete() action, you can call init with the onDelete argument as <font face="courier" size="-1">new action<></font>.]]></Description><Summary><![CDATA[This action creates a new AnalyticObject instance, and calls the user application back with an instance of the AnalyticInterface once it is complete. This action is the same as the <font face="courier" size="-1">init()</font> action, but allows more advanced options to be defined (such as the processDataStream and onDelete actions).]]></Summary><See package="com.industry.analytics" type="Data"><Description><![CDATA[The Data event that Analytics process.]]></Description></See><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object.]]></Description></See><See package="com.industry.analytics" type="AnalyticManagement"><Description><![CDATA[The Analytic management object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that should used to control/manage the Analytic implementations base functionality.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object]]></Description></Parameter><Parameter name="processData" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[Optional. The user-defined action that processes/manipulates each and every incoming Data event.]]></Description></Parameter><Parameter name="processDataStream" type="action"><Parameters><Parameter type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter></Parameters><Description><![CDATA[Optional. The user-defined action that processes/manipulates a set of Data events coming across several input channels, so that they may be processed as a coherent group.]]></Description></Parameter><Parameter name="synchronous" type="boolean"><Description><![CDATA[Only relevant for processDataStream. If true processDataStream is only called when the set of events all have the same timestamp. If false then processDataStream is called every time a new Data is received.]]></Description></Parameter><Parameter name="resetCb" type="action"><Parameters/><Description><![CDATA[Optional. User-defined action to be called when a analytic instance is ordered to to be reset, triggered by an appropriate AnalyticManagement event.]]></Description></Parameter><Parameter name="onDelete" type="action"><Parameters/><Description><![CDATA[Optional. User-defined action to be called when a analytic instance is ordered to to be deleted, triggered by an appropriate AnalyticManagement event.]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The user-defined action that is called once the AnalyticObject has been completely initialised.]]></Description></Parameter></Parameters></Action><Action name="getConfig" staticNature=""><Description><![CDATA[This helper action returns the Analytic configuration.]]></Description><Summary><![CDATA[This helper action returns the Analytic configuration.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object.]]></Description></Returns></Action><Action name="getInputFromChannel" private="true" staticNature=""><Description><![CDATA[This action enables the Analytic instance to listen for the set of Data events associated with the set defined in the Analytics <font face="courier" size="-1">inputDataNames</font> configuration parameter that was used to create the new AnalyticObject.

 This method should not be called directly, and should instead be called from the action com.industry.analytics.AnalyticInterface#getInputFromChannel action instead.]]></Description><Summary><![CDATA[This action enables the Analytic instance to listen for the set of Data events associated with the set defined in the Analytics <font face="courier" size="-1">inputDataNames</font> configuration parameter that was used to create the new AnalyticObject.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="flag" type="boolean"><Description><![CDATA[This Boolean flag indicates whether or not to listen to in the incoming Data events.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="Analytic"><Description><![CDATA[The intent is to have a set of delivered computation Analytics which can be chained together as desired with the framework, and to allow customers to easily create their own Analytics.

 Implementations of Analytics will have to have the ability to listen for Data events, so that they can use incoming raw data, and the ability to send Data events so that queries and other components can be used if required. However, it is anticipated that in the general case one Analytic will be connected the next using an action callback interface as although this is more complex than simply listening to and sending Data events it is: <ul><li>More performant than repeatedly converting events to be sent and then back again, and</li> <li>Will remove the cascade effect which could potentially occur if analysis of an incoming event caused the production of multiple analysis events.</li></ul> The Analytic event itself is sent to the Industry Analytics Kit by applications to create a new instance of a specified Analytic with a defined set of inputs/outputs and a dictionary containing Analytic specific configuration information.

 For example: <pre>
// Gradient Analytic that receives the raw simulated data feed<br>
enqueue com.industry.analytics.Analytic("Gradient", ["DataSimulator"], ["GRADIENT"], {"bucketTimeWindow":"6.0d", "bucketCount" : "4d"});

// Two separate Threshold breach Analytics to cover both a positive and negative threshold breach<br>
enqueue com.industry.analytics.Analytic("Threshold", ["GRADIENT"], ["THRESHOLDS"], {"threshold":"1.0d", "direction" : "rising"});
enqueue com.industry.analytics.Analytic("Threshold", ["GRADIENT"], ["THRESHOLDS"], {"threshold":"-1.0d", "direction" : "falling"});
</pre> The set of Analytics that are currently distributed as part of the Industry Analytics Kit are shown in the table below:

 <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Group</th><th>Analytic Name</th><th>Description</th></tr> <tr><td>Detectors</td><td><b><a href="detectors/Corridor.html">Corridor</a></b></td><td>Reports if a data source has breached a defined threshold corridor (above or below).</td></tr> <tr><td>Detectors</td><td><b><a href="detectors/Drift.html">Drift</a></b></td><td>Monitors data against a defined baseline.</td></tr> <tr><td>Detectors</td><td><b><a href="detectors/MissingData.html">MissingData</a></b></td><td>Reports when no data received for a data source after a automatically or manually defined period.</td></tr> <tr><td>Detectors</td><td><b><a href="detectors/Spike.html">Spike</a></b></td><td>Automatically calculates a “normal” range for a value and reports when this is breached.</td></tr> <tr><td>Detectors</td><td><b><a href="detectors/Threshold.html">Threshold</a></b></td><td>Reports if a data source has breached a defined threshold (above or below).</td></tr> <tr><td>Extensions</td><td><b><a href="extensions/Prediction.html">Prediction</a></b></td><td>Feeds inputs into a Predictive model (PMML) and then streams the resulting output.</td></tr> <tr><td>Flow Manipulation</td><td><b><a href="flow_manipulation/Combiner.html">Combiner</a></b></td><td>Combines several separate feeds into single channel name without modifying the sourceId information</td></tr> <tr><td>Flow Manipulation</td><td><b><a href="flow_manipulation/Duplicator.html">Duplicator</a></b></td><td>Duplicates a specified channel to one or more channel names.</td></tr> <tr><td>Flow Manipulation</td><td><b><a href="flow_manipulation/EventRate.html">EventRate</a></b></td><td>Calculates the incoming event rate.</td></tr> <tr><td>Flow Manipulation</td><td><b><a href="flow_manipulation/Filter.html">Filter</a></b></td><td>Filter a stream based on properties of the incoming event.</td></tr> <tr><td>Flow Manipulation</td><td><b><a href="flow_manipulation/Mapper.html">Mapper</a></b></td><td>Set the value of a field on the incoming event based on the value of another field.</td></tr> <tr><td>Flow Manipulation</td><td><b><a href="flow_manipulation/Merger.html">Mapper</a></b></td><td>Merge 2 channels data into a single data on the output. Can alternatively be used to add static data to a single channel.</td></tr> <tr><td>Flow Manipulation</td><td><b><a href="flow_manipulation/Slicer.html">Sorter</a></b></td><td>Generates a new set of events, each at a defined timeperiod apart and with its original value divided by the defined number of slices.</td></tr> <tr><td>Flow Manipulation</td><td><b><a href="flow_manipulation/Sorter.html">Sorter</a></b></td><td>Reorders incoming events by timestamp to ensure events then processed in correct time order.</td></tr> <tr><td>Flow Manipulation</td><td><b><a href="flow_manipulation/Suppressor.html">Suppressor</a></b></td><td>Stops events after a trigger until a defined reset (event or time based).</td></tr> <tr><td>Flow Manipulation</td><td><b><a href="flow_manipulation/Throttler.html">Throttler</a></b></td><td>Stops repeated events.</td></tr> <tr><td>GeoLocation</td><td><b><a href="geolocation/GeoFence.html">GeoFence</a></b></td><td>Monitors provided locations against a variety of conditions and possible geoFence shapes.</td></tr> <tr><td>Retail</td><td><b><a href="retail/BasketAnalysis.html">BasketAnalysis</a></b></td><td>Basket Analysis for retail shopping basket.</td></tr> <tr><td>Retail</td><td><b><a href="retail/FootFall.html">FootFall</a></b></td><td>Number of people in a store or entering/exiting a store.</td></tr> <tr><td>Retail</td><td><b><a href="retail/SalesPerArea.html">SalesPerArea</a></b></td><td>Calculates the sale per area for a store or/and category.</td></tr> <tr><td>Retail</td><td><b><a href="retail/CategoryContribution.html">CategoryContribution</a></b></td><td>Calculates the total sale for a category.</td></tr> <tr><td>Retail</td><td><b><a href="retail/SalesPerVisitor.html">SalesPerVisitor</a></b></td><td>Calculates the total SalesPerVisitor of a store for within a timewindow.</td></tr> <tr><td>Streaming Calculations</td><td><b><a href="streaming_calculations/Average.html">Average</a></b></td><td>Time weighted moving average.</td></tr> <tr><td>Streaming Calculations</td><td><b><a href="streaming_calculations/Delta.html">Delta</a></b></td><td>Calculates the differences between two neighboring values.</td></tr> <tr><td>Streaming Calculations</td><td><b><a href="streaming_calculations/Expression.html">Expression</a></b></td><td>Calculates the result of an expression for each data event.</td></tr> <tr><td>Streaming Calculations</td><td><b><a href="streaming_calculations/Gradient.html">Gradient</a></b></td><td>The gradient of the values the stream (i.e. increasing/decreasing trends).</td></tr> <tr><td>Streaming Calculations</td><td><b><a href="streaming_calculations/MinMax.html">MinMax</a></b></td><td>Calculates the minimum and maximum values for a data stream over a defined time window.</td></tr> <tr><td>Streaming Calculations</td><td><b><a href="streaming_calculations/Mode.html">Mode</a></b></td><td>Calculates the mode value for a data stream over a defined time window.</td></tr> <tr><td>Streaming Calculations</td><td><b><a href="streaming_calculations/Spread.html">Spread</a></b></td><td>Calculates the spread between inputs and can also check against a maximum threshold.</td></tr> <tr><td>Streaming Calculations</td><td><b><a href="streaming_calculations/Sum.html">Sum</a></b></td><td>Calculates moving sum.</td></tr> <tr><td>Streaming Calculations</td><td><b><a href="streaming_calculations/Volatility.html">Volatility</a></b></td><td>The volatility (deviation in variance) of data values.</td></tr> <tr><td>Utilities</td><td><b><a href="utilities/DataViewer.html">DataViewer</a></b></td><td>Sends the incoming events to a specified dataview.</td></tr> <tr><td>Utilities</td><td><b><a href="utilities/MemoryStore.html">MemoryStore</a></b></td><td>Caches the Data events using MemoryStore, and exposes them in a dataview.</td></tr> <tr><td>Utilities</td><td><b><a href="utilities/DataSimulator.html">DataSimulator</a></b></td><td>Generates simulated data for use by the Industry Analytics Kit.</td></tr> </table>]]></Description><Summary><![CDATA[The intent is to have a set of delivered computation Analytics which can be chained together as desired with the framework, and to allow customers to easily create their own Analytics.]]></Summary><See package="com.industry.analytics" type="Data"><Description><![CDATA[The Data event that the implementation of a Analytic will act on.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="MANAGEMENT_ID" type="string" typeValue="&quot;managementId&quot;"><Description><![CDATA[This constant defines the parameter name for deriving the managementId used for management of the analytic. This parameter is optional and common to all Analytics. However, dynamic management can only happen if this parameter is defined.]]></Description><Summary><![CDATA[This constant defines the parameter name for deriving the managementId used for management of the analytic. This parameter is optional and common to all Analytics. However, dynamic management can only happen if this parameter is defined.]]></Summary></Member><Member name="name" type="string"><Description><![CDATA[Defines the name of the Analytic to construct.  Each implementation the default set of Analytics defines a string constant that should be used here.]]></Description><Summary><![CDATA[Defines the name of the Analytic to construct.  Each implementation the default set of Analytics defines a string constant that should be used here.]]></Summary></Member><Member name="inputDataNames" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[This sequence defines one or more Data stream names that this Analytic will use as an input source.]]></Description><Summary><![CDATA[This sequence defines one or more Data stream names that this Analytic will use as an input source.]]></Summary><See reference="com.industry.analytics.Data#name"><Description><![CDATA[The name of a unique Data stream]]></Description></See></Member><Member name="outputDataNames" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[This sequence defines one or more Data stream names that this Analytic will generate Data events on.]]></Description><Summary><![CDATA[This sequence defines one or more Data stream names that this Analytic will generate Data events on.]]></Summary><See reference="com.industry.analytics.Data#name"><Description><![CDATA[The name of a unique Data stream]]></Description></See></Member><Member name="params" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[This stringified dictionary defines the set of Analytic specific configuration parameters.

 The following generic configuration parameters are supported: <ul> <li><font face="courier" size="-1">sendResultToChannel</font> -      This boolean flag defines whether or not the Analytic will send all generated Data events to a channel defined by the Data name. This is not mutually exclusive to the <font face="courier" size="-1">sendResultToQueryChannel</font> configuration param</li> <li><font face="courier" size="-1">sendResultToQueryChannel</font> - This boolean flag defines whether or not the Analytic will send all generated Data events to the channel defined for handling Apama Queries (I.E. "com.apama.queries"). This is not mutually exclusive to the <font face="courier" size="-1">sendResultToChannel</font> configuration param</li> </ul>

 <b>NOTE:</b> Configuration parameter names are case insensitive.]]></Description><Summary><![CDATA[This stringified dictionary defines the set of Analytic specific configuration parameters.]]></Summary></Member><Action name="getDecimal" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Decimal value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Decimal value, a value of 0d is returned.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Decimal value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Decimal value, a value of 0d is returned.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[The value of the requested configuration parameter as a Decimal. Or a value of 0.0d if the configuration parameter was not found or was invalid.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter></Parameters></Action><Action name="getOrInteger" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Integer value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Integer value, the default parameter value specified is returned instead.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Integer value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Integer value, the default parameter value specified is returned instead.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"><Description><![CDATA[The value of the requested configuration parameter as an Integer, or the provided default value if the configuration parameter was not found, or was not a valid Integer.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter><Parameter name="def" type="integer"><Description><![CDATA[The default value to return if the configuration parameter was not found, or not valid.]]></Description></Parameter></Parameters></Action><Action name="getInteger" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Integer value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Integer value, a value of 0 is returned.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Integer value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Integer value, a value of 0 is returned.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"><Description><![CDATA[The value of the requested configuration parameter as an Integer. Or a value of 0 if the configuration parameter was not found or was invalid.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter></Parameters></Action><Action name="getFloat" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Float value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Float value, a value of 0.0 is returned.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Float value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Float value, a value of 0.0 is returned.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"><Description><![CDATA[The value of the requested configuration parameter as a Float. Or a value of 0.0 if the configuration parameter was not found or was invalid.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter></Parameters></Action><Action name="getString" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. If the specified key is not in the set of configuration parameters, an empty string is returned.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. If the specified key is not in the set of configuration parameters, an empty string is returned.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"><Description><![CDATA[The value of the requested configuration parameter as a String. Or an empty String if the configuration parameter was not found.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter></Parameters></Action><Action name="getOrSequenceString" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key as a sequence of strings.  The stringified configuration parameter is tested to see if it is a valid sequence of strings before returning it.  If the specified key is not in the set of configuration parameters, or was not a valid sequence type, the default parameter value specified is returned instead.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key as a sequence of strings.  The stringified configuration parameter is tested to see if it is a valid sequence of strings before returning it.  If the specified key is not in the set of configuration parameters, or was not a valid sequence type, the default parameter value specified is returned instead.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The value of the requested configuration parameter as a sequence of strings, or the provided default value if the configuration parameter was not found or was not a valid sequence&lt;string&gt;]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter><Parameter name="def" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The default value to return if the configuration parameter was not found.]]></Description></Parameter></Parameters></Action><Action name="getDictionaryAsString" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key as a stringified dictionary. If the specified key is not in the set of configuration parameters, a stringified empty dictionary is returned.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key as a stringified dictionary. If the specified key is not in the set of configuration parameters, a stringified empty dictionary is returned.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"><Description><![CDATA[The value of the requested configuration parameter as a stringified dictionary. Or an empty stringified dictionary if the configuration parameter was not found.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter></Parameters></Action><Action name="getOrFloat" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Float value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Float value, the default parameter value specified is returned instead.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Float value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Float value, the default parameter value specified is returned instead.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"><Description><![CDATA[The value of the requested configuration parameter as a Float, or the provided default value if the configuration parameter was not found, or was not a valid Float.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter><Parameter name="def" type="float"><Description><![CDATA[The default value to return if the configuration parameter was not found, or not valid.]]></Description></Parameter></Parameters></Action><Action name="getSequenceAsString" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key as a stringified sequence. If the specified key is not in the set of configuration parameters, a stringified empty sequence is returned.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key as a stringified sequence. If the specified key is not in the set of configuration parameters, a stringified empty sequence is returned.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"><Description><![CDATA[The value of the requested configuration parameter as a stringified sequence. Or an empty stringified sequence if the configuration parameter was not found.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter></Parameters></Action><Action name="validateParams" staticNature=""><Description><![CDATA[This helper action is typically used by implementations of a Analytic to perform a basic validation of the set of Analytic configuration parameters provided.  It checks that the name of the Analytic is correct, that the input/output Data channels are correct, and also checks that the values of specified parameters are of the correct data type, and also checks that any mandatory fields are defined. Any Analytic specific validation will be handled by the Analytic implementation itself.]]></Description><Summary><![CDATA[This helper action is typically used by implementations of a Analytic to perform a basic validation of the set of Analytic configuration parameters provided.  It checks that the name of the Analytic is correct, that the input/output Data channels are correct, and also checks that the values of specified parameters are of the correct data type, and also checks that any mandatory fields are defined. Any Analytic specific validation will be handled by the Analytic implementation itself.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters that validation is being performed on]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the validation passed or failed.]]></Description></Returns><Parameters><Parameter name="analyticName" type="string"><Description><![CDATA[The name of the Analytic being validated.]]></Description></Parameter><Parameter name="numInputDataChannels" type="integer"><Description><![CDATA[The number of input data channels that are expected/required.]]></Description></Parameter><Parameter name="numOutputDataChannels" type="integer"><Description><![CDATA[The number of output data channels that are expected/required.]]></Description></Parameter><Parameter name="names" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The set of configuration parameter names that are to be validated Note that this must be defined in the same order as the #types parameter.]]></Description></Parameter><Parameter name="types" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The set of configuration parameter types that are used in the validation. Note that this must be defined in the same order as the #names parameter.]]></Description></Parameter><Parameter name="mandatory" type="sequence"><Parameters><Parameter type="boolean"/></Parameters><Description><![CDATA[The set of configuration parameter names that must be defined in the set of configuration parameters, otherwise validation will fail.]]></Description></Parameter></Parameters></Action><Action name="getOrString" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. If the specified key is not in the set of configuration parameters, the default parameter value specified is returned instead.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. If the specified key is not in the set of configuration parameters, the default parameter value specified is returned instead.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"><Description><![CDATA[The value of the requested configuration parameter as a string, or the provided default value if the configuration parameter was not found.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter><Parameter name="def" type="string"><Description><![CDATA[The default value to return if the configuration parameter was not found.]]></Description></Parameter></Parameters></Action><Action name="getSequenceString" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key as a sequence of strings.  The stringified configuration parameter is tested to see if it is a valid sequence of strings before returning it.  If the specified key is not in the set of configuration parameters, or was not a valid sequence type, an empty sequence of strings is returned.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key as a sequence of strings.  The stringified configuration parameter is tested to see if it is a valid sequence of strings before returning it.  If the specified key is not in the set of configuration parameters, or was not a valid sequence type, an empty sequence of strings is returned.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The value of the requested configuration parameter as a sequence of strings. Or an empty sequence if the configuration parameter was not found, or was invalid.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter></Parameters></Action><Action name="getManagementId" staticNature=""><Description><![CDATA[This action returns the analyticId provided in the params of the Analytic event. If the param is not present then an empty string is returned. If ann empty or whitespace only string is explicitly provided, then a warning is logged and an empty string is returned. All ids will be trimmed of white space at the beginning and end. An empty string means no management operations will be available for the Analytic instance being created from this Analytic event.]]></Description><Summary><![CDATA[This action returns the analyticId provided in the params of the Analytic event. If the param is not present then an empty string is returned. If ann empty or whitespace only string is explicitly provided, then a warning is logged and an empty string is returned. All ids will be trimmed of white space at the beginning and end. An empty string means no management operations will be available for the Analytic instance being created from this Analytic event.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/></Action><Action name="hasParam" staticNature=""><Description><![CDATA[This helper action returns a Boolean indicating whether not a specified parameter name exists in the set of Analytic configuration parameters.]]></Description><Summary><![CDATA[This helper action returns a Boolean indicating whether not a specified parameter name exists in the set of Analytic configuration parameters.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="name" type="string"/></Parameters></Action><Action name="getBoolean" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Boolean value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Boolean value, a value of False is returned.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Boolean value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Boolean value, a value of False is returned.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[The value of the requested configuration parameter as a Boolean. Or a value of False if the configuration parameter was not found or was invalid.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter></Parameters></Action><Action name="getOrBoolean" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Boolean value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Boolean value, the default parameter value specified is returned instead.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Boolean value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Boolean value, the default parameter value specified is returned instead.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[The value of the requested configuration parameter as a Boolean, or the provided default value if the configuration parameter was not found, or was not a valid Boolean.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter><Parameter name="def" type="boolean"><Description><![CDATA[The default value to return if the configuration parameter was not found, or not valid.]]></Description></Parameter></Parameters></Action><Action name="getOrDecimal" staticNature=""><Description><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Decimal value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Decimal value, the default parameter value specified is returned instead.]]></Description><Summary><![CDATA[This helper action returns the configuration parameter item that corresponds to the specified key. The stringified configuration parameter is tested to see if it is a valid Decimal value before returning it. If the specified key is not in the set of configuration parameters, or if the parameter requested was not a valid Decimal value, the default parameter value specified is returned instead.]]></Summary><See field="params" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The set of configuration parameters for the Analytic instance]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[The value of the requested configuration parameter as a Decimal, or the provided default value if the configuration parameter was not found, or was not a valid Decimal.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[The name of the configuration parameter to get the value for.]]></Description></Parameter><Parameter name="def" type="decimal"><Description><![CDATA[The default value to return if the configuration parameter was not found, or not valid.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="DisableDataReflector"><Description><![CDATA[This event disables the Data reflector (if it was enabled previously) so that any Data events that received on the main context, are no longer sent to the Data context (defined by the Data events <font face="courier" size="-1">name</font> parameter)]]></Description><Summary><![CDATA[This event disables the Data reflector (if it was enabled previously) so that any Data events that received on the main context, are no longer sent to the Data context (defined by the Data events <font face="courier" size="-1">name</font> parameter)]]></Summary><See package="com.industry.analytics" type="Data"><Description><![CDATA[The Data event]]></Description></See><See package="com.industry.analytics" type="Reflector"><Description><![CDATA[The Data Reflector monitor]]></Description></See><See package="com.industry.analytics" type="EnableDataReflector"><Description><![CDATA[The event to enable the Data event reflector]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Type><Type category="Event" name="Constants"><Description><![CDATA[The Constants event object defines the set of commonly used strings that are used in the Industry Analytics Kit which may be useful for User Applications to use.]]></Description><Summary><![CDATA[The Constants event object defines the set of commonly used strings that are used in the Industry Analytics Kit which may be useful for User Applications to use.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="MANAGEMENT_CHANNEL" type="string" typeValue="&quot;ANALYTICS_MANAGEMENT_CHANNEL&quot;"><Description><![CDATA[This constant defines the name of the channel that is used by the Industry Analytics Kit for management events.]]></Description><Summary><![CDATA[This constant defines the name of the channel that is used by the Industry Analytics Kit for management events.]]></Summary></Member><Member constant="true" name="DELETE" type="string" typeValue="&quot;DELETE&quot;"><Description><![CDATA[Constant defining the Analytic Management DELETE command.]]></Description><Summary><![CDATA[Constant defining the Analytic Management DELETE command.]]></Summary></Member><Member constant="true" name="RESET" type="string" typeValue="&quot;RESET&quot;"><Description><![CDATA[Constant defining the Analytic Management RESET command.]]></Description><Summary><![CDATA[Constant defining the Analytic Management RESET command.]]></Summary></Member><Member constant="true" name="START" type="string" typeValue="&quot;START&quot;"><Description><![CDATA[Constant defining the Analytic Management START command.]]></Description><Summary><![CDATA[Constant defining the Analytic Management START command.]]></Summary></Member><Member constant="true" name="STOP" type="string" typeValue="&quot;STOP&quot;"><Description><![CDATA[Constant defining the Analytic Management STOP command.]]></Description><Summary><![CDATA[Constant defining the Analytic Management STOP command.]]></Summary></Member><Member constant="true" name="ALERT_CHANNEL" type="string" typeValue="&quot;ALERT_CHANNEL&quot;"><Description><![CDATA[The constant string that defines the name of the Alert handling channel.]]></Description><Summary><![CDATA[The constant string that defines the name of the Alert handling channel.]]></Summary></Member><Member constant="true" name="DATASOURCE_MGMT_CHANNEL" type="string" typeValue="&quot;DATASOURCE_MGMT_CHANNEL&quot;"><Description><![CDATA[The constant string that defines the name of the Data Source handling channel.]]></Description><Summary><![CDATA[The constant string that defines the name of the Data Source handling channel.]]></Summary></Member><Member constant="true" name="BOOLEAN" type="string" typeValue="&quot;boolean&quot;"><Description><![CDATA[The constant string that defines the Boolean data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Description><Summary><![CDATA[The constant string that defines the Boolean data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Summary></Member><Member constant="true" name="DECIMAL" type="string" typeValue="&quot;decimal&quot;"><Description><![CDATA[The constant string that defines the Decimal data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Description><Summary><![CDATA[The constant string that defines the Decimal data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Summary></Member><Member constant="true" name="FLOAT" type="string" typeValue="&quot;float&quot;"><Description><![CDATA[The constant string that defines the Float data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Description><Summary><![CDATA[The constant string that defines the Float data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Summary></Member><Member constant="true" name="INTEGER" type="string" typeValue="&quot;integer&quot;"><Description><![CDATA[The constant string that defines the Integer data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Description><Summary><![CDATA[The constant string that defines the Integer data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Summary></Member><Member constant="true" name="STRING" type="string" typeValue="&quot;string&quot;"><Description><![CDATA[The constant string that defines the Stringn data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Description><Summary><![CDATA[The constant string that defines the Stringn data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Summary></Member><Member constant="true" name="SEQUENCE_STRING" type="string" typeValue="&quot;sequence&lt;string&gt;&quot;"><Description><![CDATA[The constant string that defines the Sequence of Strings data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Description><Summary><![CDATA[The constant string that defines the Sequence of Strings data type for configuration parameters (such as in the <font face="courier" size="-1">params</font> data in a Data or Analytic event)]]></Summary></Member><Member constant="true" name="SPACER" type="string" typeValue="&quot;_&quot;"><Description><![CDATA[This constant string is used to separate parameters used to construct a row key in MemoryStore.]]></Description><Summary><![CDATA[This constant string is used to separate parameters used to construct a row key in MemoryStore.]]></Summary></Member><Member constant="true" name="STORE" type="string" typeValue="&quot;INDUSTRY_ANALYTICS&quot;"><Description><![CDATA[This constant string defines the name of the Store used in MemoryStore.]]></Description><Summary><![CDATA[This constant string defines the name of the Store used in MemoryStore.]]></Summary></Member><Member constant="true" name="ANOMALY_SOURCE" type="string" typeValue="&quot;anomalySource&quot;"><Description><![CDATA[This constant string is added to anomaly data events to indicate the Analytic that generated it]]></Description><Summary><![CDATA[This constant string is added to anomaly data events to indicate the Analytic that generated it]]></Summary></Member><Member constant="true" name="DVALUE" type="string" typeValue="&quot;dvalue&quot;"/><Member constant="true" name="SVALUE" type="string" typeValue="&quot;svalue&quot;"/><Member constant="true" name="XVALUE" type="string" typeValue="&quot;xvalue&quot;"/><Member constant="true" name="YVALUE" type="string" typeValue="&quot;yvalue&quot;"/><Member constant="true" name="ZVALUE" type="string" typeValue="&quot;zvalue&quot;"/><Member constant="true" name="TYPE" type="string" typeValue="&quot;type&quot;"/><Member constant="true" name="PARAM" type="string" typeValue="&quot;param&quot;"/></Type><Type category="Event" name="Data"><Description><![CDATA[The Data event is a normalized event structure which is used within the framework for passing around values. Events coming into the Correlator from external sources will need to be converted prior to use within the framework. The structure of the event that carries both incoming (raw) data and the computed data within a Analytic network.]]></Description><Summary><![CDATA[The Data event is a normalized event structure which is used within the framework for passing around values. Events coming into the Correlator from external sources will need to be converted prior to use within the framework. The structure of the event that carries both incoming (raw) data and the computed data within a Analytic network.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="streamName" type="string"><Description><![CDATA[The name of the Data stream.]]></Description><Summary><![CDATA[The name of the Data stream.]]></Summary></Member><Member name="type" type="string"><Description><![CDATA[The enumerated type that states what type the Data is. This should be set to one of the values defined in the com.industry.analytics.DataConstants event.]]></Description><Summary><![CDATA[The enumerated type that states what type the Data is. This should be set to one of the values defined in the com.industry.analytics.DataConstants event.]]></Summary><See package="com.industry.analytics" type="DataConstants"><Description><![CDATA[The set of constants that define the types of Data events available]]></Description></See></Member><Member name="sourceId" type="string"><Description><![CDATA[The unique identifier of the source of the Data. This may be a sensor or a higher level entity for an aggregated Data stream.]]></Description><Summary><![CDATA[The unique identifier of the source of the Data. This may be a sensor or a higher level entity for an aggregated Data stream.]]></Summary></Member><Member name="timestamp" type="decimal"><Description><![CDATA[The timestamp the Data was generated, represented as the number of seconds since the epoch (1st January 1970).]]></Description><Summary><![CDATA[The timestamp the Data was generated, represented as the number of seconds since the epoch (1st January 1970).]]></Summary></Member><Member name="dValue" type="decimal"><Description><![CDATA[The value of the Data as a decimal.]]></Description><Summary><![CDATA[The value of the Data as a decimal.]]></Summary></Member><Member name="sValue" type="string"><Description><![CDATA[The value of the Data as a string.]]></Description><Summary><![CDATA[The value of the Data as a string.]]></Summary></Member><Member name="xValue" type="float"><Description><![CDATA[The value of a float]]></Description><Summary><![CDATA[The value of a float]]></Summary></Member><Member name="yValue" type="float"><Description><![CDATA[The value of a float]]></Description><Summary><![CDATA[The value of a float]]></Summary></Member><Member name="zValue" type="float"><Description><![CDATA[The value of a float]]></Description><Summary><![CDATA[The value of a float]]></Summary></Member><Member name="params" type="dictionary" wildcard="true"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[This stringified dictionary is available to hold any other data associated with the Data.]]></Description><Summary><![CDATA[This stringified dictionary is available to hold any other data associated with the Data.]]></Summary></Member><Action name="init" staticNature="static "><Description><![CDATA[This static action initialises a new Data for a given channel and sourceId.]]></Description><Summary><![CDATA[This static action initialises a new Data for a given channel and sourceId.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="Data"><Description><![CDATA[The new Data event.]]></Description></Returns><Parameters><Parameter name="name" type="string"><Description><![CDATA[Channel name for the event.]]></Description></Parameter><Parameter name="type" type="string"><Description><![CDATA[Whether the event is raw, computed or an anomaly.]]></Description></Parameter><Parameter name="sourceId" type="string"><Description><![CDATA[The sourceId for the event.]]></Description></Parameter></Parameters></Action><Action name="getKey" private="true" staticNature=""><Description><![CDATA[This private action creates a unique MemoryStore Row key for the Data event, in order to store the Data data in MemoryStore.

 See the relevant SoftwareAG Apama documentation for further details on the MemoryStore interface.]]></Description><Summary><![CDATA[This private action creates a unique MemoryStore Row key for the Data event, in order to store the Data data in MemoryStore.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/></Action><Action name="intern" private="true" staticNature=""><Description><![CDATA[This private action interns the strings for the Data event in order to improve performance when handling strings.]]></Description><Summary><![CDATA[This private action interns the strings for the Data event in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="populateFromRow" private="true" staticNature=""><Description><![CDATA[This private action retrieves Data information from the provided MemoryStore row.  This is used to populate the current Data event.  Any data that was in the Data event prior to calling this action will be overwritten.

 See the relevant SoftwareAG Apama documentation for further details on the MemoryStore interface.]]></Description><Summary><![CDATA[This private action retrieves Data information from the provided MemoryStore row.  This is used to populate the current Data event.  Any data that was in the Data event prior to calling this action will be overwritten.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="row" type="com.apama.memorystore.Row"/></Parameters></Action><Action name="getKeyFields" private="true" staticNature="static "><Description><![CDATA[This private action returns the key fields for the Data event. These can be used with the dataviews.

 See the relevant SoftwareAG Apama documentation for further details on the DataView interface.]]></Description><Summary><![CDATA[This private action returns the key fields for the Data event. These can be used with the dataviews.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="string"/></Parameters></Returns></Action><Action name="getRow" private="true" staticNature=""><Description><![CDATA[This private action returns a filled in MemoryStore Row using the specified MemoryStore Table, based on the information provided in the current Data event instance.  This is used to store the Data data in MemoryStore.

 See the relevant SoftwareAG Apama documentation for further details on the MemoryStore interface.]]></Description><Summary><![CDATA[This private action returns a filled in MemoryStore Row using the specified MemoryStore Table, based on the information provided in the current Data event instance.  This is used to store the Data data in MemoryStore.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Row"/><Parameters><Parameter name="t" type="com.apama.memorystore.Table"/></Parameters></Action></Type><Type category="Event" name="GeoUtil"><Description><![CDATA[This event provides common geolocation calculations and constant values.]]></Description><Summary><![CDATA[This event provides common geolocation calculations and constant values.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="EARTH_RADIUS_KMS" private="true" type="decimal" typeValue="6371.0d"><Description><![CDATA[Constant to save the value of Earth's radius in KMS]]></Description><Summary><![CDATA[Constant to save the value of Earth's radius in KMS]]></Summary></Member><Member constant="true" name="EARTH_RADIUS_MILES" private="true" type="decimal" typeValue="3959.0d"><Description><![CDATA[Constant to save the value of Earth's radius in MILES]]></Description><Summary><![CDATA[Constant to save the value of Earth's radius in MILES]]></Summary></Member><Action name="haversineDistanceInMiles" staticNature=""><Description><![CDATA[This action implements the Haversine calculation to determine the distance (in miles) between two GPS coordinates.]]></Description><Summary><![CDATA[This action implements the Haversine calculation to determine the distance (in miles) between two GPS coordinates.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[The distance in miles between the two GPS locations]]></Description></Returns><Parameters><Parameter name="lat1" type="decimal"><Description><![CDATA[The latitude coordinate of the first location]]></Description></Parameter><Parameter name="lon1" type="decimal"><Description><![CDATA[The longitude coordinate of the first location]]></Description></Parameter><Parameter name="lat2" type="decimal"><Description><![CDATA[The latitude coordinate of the second location]]></Description></Parameter><Parameter name="lon2" type="decimal"><Description><![CDATA[The longitude coordinate of the second location]]></Description></Parameter></Parameters></Action><Action name="haversineDistance" private="true" staticNature=""><Description><![CDATA[This action implements the Haversine calculation to determine the distance between two GPS coordinates, and the Earths radius as either Miles or Kilometres.]]></Description><Summary><![CDATA[This action implements the Haversine calculation to determine the distance between two GPS coordinates, and the Earths radius as either Miles or Kilometres.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="lat1" type="decimal"/><Parameter name="lon1" type="decimal"/><Parameter name="lat2" type="decimal"/><Parameter name="lon2" type="decimal"/><Parameter name="RADIUS" type="decimal"/></Parameters></Action><Action name="Radians" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="deg" type="decimal"/></Parameters></Action><Action name="haversineDistanceInKM" staticNature=""><Description><![CDATA[This action implements the Haversine calculation to determine the distance (in kilometres) between two GPS coordinates.]]></Description><Summary><![CDATA[This action implements the Haversine calculation to determine the distance (in kilometres) between two GPS coordinates.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"><Description><![CDATA[The distance in kilometres between the two GPS locations]]></Description></Returns><Parameters><Parameter name="lat1" type="decimal"><Description><![CDATA[The latitude coordinate of the first location]]></Description></Parameter><Parameter name="lon1" type="decimal"><Description><![CDATA[The longitude coordinate of the first location]]></Description></Parameter><Parameter name="lat2" type="decimal"><Description><![CDATA[The latitude coordinate of the second location]]></Description></Parameter><Parameter name="lon2" type="decimal"><Description><![CDATA[The longitude coordinate of the second location]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="AddDataSource"><Description><![CDATA[The com.industry.analytics.AddDataSource event requests that a DataSource should be added to the hierachy of DataSources. This is used to define the relationships/grouping of different DataSources, so that they can be later referenced as a set of DataSources or as an individual DataSource.  For example, an DataSource could be non-physical parent node which defines the set of sensors for a specific machine, this then has a set of physical devices associated with it.]]></Description><Summary><![CDATA[The com.industry.analytics.AddDataSource event requests that a DataSource should be added to the hierachy of DataSources. This is used to define the relationships/grouping of different DataSources, so that they can be later referenced as a set of DataSources or as an individual DataSource.  For example, an DataSource could be non-physical parent node which defines the set of sensors for a specific machine, this then has a set of physical devices associated with it.]]></Summary><See package="com.industry.analytics" type="DataSource"><Description><![CDATA[The DataSource event that is created using this request]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="id" type="string"><Description><![CDATA[The unique identifier for this specific DataSource.]]></Description><Summary><![CDATA[The unique identifier for this specific DataSource.]]></Summary></Member><Member name="sourceTypeId" type="string"><Description><![CDATA[The identifier for this type of DataSource. This can be used for grouping individual DataSources]]></Description><Summary><![CDATA[The identifier for this type of DataSource. This can be used for grouping individual DataSources]]></Summary></Member><Member name="name" type="string"><Description><![CDATA[The name of this DataSource. <b>Note:</b> This does not have to be a unique value.]]></Description><Summary><![CDATA[The name of this DataSource. <b>Note:</b> This does not have to be a unique value.]]></Summary></Member><Member name="description" type="string" wildcard="true"><Description><![CDATA[The description for this DataSource.]]></Description><Summary><![CDATA[The description for this DataSource.]]></Summary></Member><Member name="parentId" type="string"><Description><![CDATA[The parent sourceId associated with the current DataSource.]]></Description><Summary><![CDATA[The parent sourceId associated with the current DataSource.]]></Summary></Member><Member name="params" type="dictionary" wildcard="true"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[A set of stringified extra configuration information for this DataSource.]]></Description><Summary><![CDATA[A set of stringified extra configuration information for this DataSource.]]></Summary></Member><Action name="init" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="AddDataSource"/><Parameters><Parameter name="id" type="string"/><Parameter name="sourceTypeId" type="string"/><Parameter name="name" type="string"/><Parameter name="description" type="string"/><Parameter name="parentId" type="string"/><Parameter name="params" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Parameter></Parameters></Action></Type><Type category="Event" name="DataSource"><Description><![CDATA[The com.industry.analytics.DataSource event defines a specific DataSource that is being monitored. Each DataSource can also define the relationships/grouping of different DataSources, so that they can be later referenced as a set of DataSources or as an individual DataSource.  For example, an DataSource could be non-physical parent node which defines the set of sensors for a specific machine, this then has a set of physical devices associated with it.]]></Description><Summary><![CDATA[The com.industry.analytics.DataSource event defines a specific DataSource that is being monitored. Each DataSource can also define the relationships/grouping of different DataSources, so that they can be later referenced as a set of DataSources or as an individual DataSource.  For example, an DataSource could be non-physical parent node which defines the set of sensors for a specific machine, this then has a set of physical devices associated with it.]]></Summary><See package="com.industry.analytics" type="SourceIdsRequest"><Description><![CDATA[The request event to retrieve all DataSource data associated with a specified DataSource]]></Description></See><See package="com.industry.analytics" type="SourceIdsResponse"><Description><![CDATA[The response to a com.industry.analytics.SourceIdsRequest request.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="TABLE_NAME" type="string" typeValue="&quot;DataSource&quot;"><Description><![CDATA[This constant defines the name of the MemoryStore table that is used to persist the DataSource data for the configured Industry Analytics Kit]]></Description><Summary><![CDATA[This constant defines the name of the MemoryStore table that is used to persist the DataSource data for the configured Industry Analytics Kit]]></Summary></Member><Member name="id" type="string"><Description><![CDATA[The unique identifier for this specific DataSource.]]></Description><Summary><![CDATA[The unique identifier for this specific DataSource.]]></Summary></Member><Member name="sourceTypeId" type="string"><Description><![CDATA[The identifier for this type of DataSource. This can be used for grouping individual DataSources]]></Description><Summary><![CDATA[The identifier for this type of DataSource. This can be used for grouping individual DataSources]]></Summary></Member><Member name="name" type="string"><Description><![CDATA[The name of this DataSource. <b>Note:</b> This does not have to be a unique value.]]></Description><Summary><![CDATA[The name of this DataSource. <b>Note:</b> This does not have to be a unique value.]]></Summary></Member><Member name="description" type="string" wildcard="true"><Description><![CDATA[The description for this DataSource.]]></Description><Summary><![CDATA[The description for this DataSource.]]></Summary></Member><Member name="parentId" type="string"><Description><![CDATA[The parent sourceId associated with the current DataSource.]]></Description><Summary><![CDATA[The parent sourceId associated with the current DataSource.]]></Summary></Member><Member name="childIds" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters><Description><![CDATA[The child sourceId associated with the current DataSource.]]></Description><Summary><![CDATA[The child sourceId associated with the current DataSource.]]></Summary></Member><Member name="params" type="dictionary" wildcard="true"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[A set of stringified extra configuration information for this DataSource.]]></Description><Summary><![CDATA[A set of stringified extra configuration information for this DataSource.]]></Summary></Member><Action name="init" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="DataSource"/><Parameters><Parameter name="id" type="string"/><Parameter name="sourceTypeId" type="string"/><Parameter name="name" type="string"/><Parameter name="description" type="string"/><Parameter name="parentId" type="string"/><Parameter name="params" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Parameter></Parameters></Action><Action name="getKey" private="true" staticNature=""><Description><![CDATA[This helper action generates a key value for the a unique row in the MemoryStore table for storing/retrieving information about a specific DataSource.]]></Description><Summary><![CDATA[This helper action generates a key value for the a unique row in the MemoryStore table for storing/retrieving information about a specific DataSource.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"><Description><![CDATA[A string containing a unique key value for the current DataSource.]]></Description></Returns></Action><Action name="intern" private="true" staticNature=""><Description><![CDATA[This helper action interns the strings used by the DataSource in order to improve the performance of string manipulation in the application.]]></Description><Summary><![CDATA[This helper action interns the strings used by the DataSource in order to improve the performance of string manipulation in the application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="populateFromRow" private="true" staticNature=""><Description><![CDATA[This helper action populates the current DataSource object instance with the information in the specified MemoryStore row.

 <b>Note:</b> This action will overwrite any previous values that were defined in this objects instance.]]></Description><Summary><![CDATA[This helper action populates the current DataSource object instance with the information in the specified MemoryStore row.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="row" type="com.apama.memorystore.Row"><Description><![CDATA[The MemoryStore row to be used for populating the current DataSource]]></Description></Parameter></Parameters></Action><Action name="getRow" private="true" staticNature=""><Description><![CDATA[This helper action populates a MemoryStore row from the specified table with the current DataSources set of parameters.]]></Description><Summary><![CDATA[This helper action populates a MemoryStore row from the specified table with the current DataSources set of parameters.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Row"><Description><![CDATA[A string containing a unique key value for the current DataSource.]]></Description></Returns><Parameters><Parameter name="t" type="com.apama.memorystore.Table"><Description><![CDATA[The MemoryStore table used for storing DataSources]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="DataView" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="DATAVIEW_CHANNEL" type="string" typeValue="&quot;DATAVIEW_CHANNEL&quot;"><Description><![CDATA[This constant defines the param name for DataView messages defining where the responses should be sent.]]></Description><Summary><![CDATA[This constant defines the param name for DataView messages defining where the responses should be sent.]]></Summary></Member><Member name="_dataViewReady" type="action"><Parameters><Parameter type="boolean"/></Parameters></Member><Member name="_tableName" type="string"/><Member name="_fieldNames" type="sequence"><Parameters><Parameter type="string"/></Parameters></Member><Member name="_fieldTypes" type="sequence"><Parameters><Parameter type="string"/></Parameters></Member><Member name="_keyFields" type="sequence"><Parameters><Parameter type="string"/></Parameters></Member><Member name="_clearDataView" type="boolean"/><Action name="add" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="item" type="com.apama.dataview.DataViewAddOrUpdateItem"/></Parameters></Action><Action name="init" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="tableName" type="string"/><Parameter name="fieldNames" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter name="fieldTypes" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter name="keyFields" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter name="useDuplicate" type="boolean"/><Parameter name="dataViewReady" type="action"><Parameters><Parameter type="boolean"/></Parameters></Parameter></Parameters></Action><Action name="clear" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_setupClearDataView" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="delete" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="remove" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dvItemId" type="integer"/><Parameter name="keyFields" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter></Parameters></Action></Type><Type category="Event" name="KillInputChannelListeners" private="true"><Description><![CDATA[Internally generated event to kill any input channel listeners.]]></Description><Summary><![CDATA[Internally generated event to kill any input channel listeners.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="id" type="integer"/></Type><Type category="Event" name="Ready"><Description><![CDATA[This event is sent when the Industry Analytics Kit is ready to be used. This is used internally by the Industry Analytics Kit to create any pending Analytic requests that have been requested by the user appliication.  This is required to prevent requests to create new Analytics being sent prior to the relevant Analytic being injected into the Correlator.]]></Description><Summary><![CDATA[This event is sent when the Industry Analytics Kit is ready to be used. This is used internally by the Industry Analytics Kit to create any pending Analytic requests that have been requested by the user appliication.  This is required to prevent requests to create new Analytics being sent prior to the relevant Analytic being injected into the Correlator.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Type><Type category="Event" name="TableProxy" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_table" type="com.apama.memorystore.Table"/><Member name="_valid" type="boolean"/><Action name="getTable" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Table"/></Action><Action name="isValid" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/></Action></Type><Type category="Event" name="CheckVersion"><Description><![CDATA[Applications can send this event to the Versioning Service on the Analytics Management Channel to check that the version that they are using is compatible with this version of the Industry Analytics Kit.

 If a blank string is provided, then this will be treated as a request to get the current version of the Industry Analytics Kit.

 The VersioningService monitor will respond by sending the CurrentVersion event to the Analytics Management Channel.]]></Description><Summary><![CDATA[Applications can send this event to the Versioning Service on the Analytics Management Channel to check that the version that they are using is compatible with this version of the Industry Analytics Kit.]]></Summary><See package="com.industry.analytics" type="CurrentVersion"><Description><![CDATA[This event is sent in response to this request]]></Description></See><See reference="com.industry.analytics.Constants.MANAGEMENT_CHANNEL"><Description><![CDATA[The constant that defines the name of the Analytics Management Channel]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="version" type="string"><Description><![CDATA[This parameter defines the version of the Industry Analytics Kit that your application wants to use. If a blank string is provided, then this will be treated as a request to get the current version of the Industry Analytics Kit.]]></Description><Summary><![CDATA[This parameter defines the version of the Industry Analytics Kit that your application wants to use. If a blank string is provided, then this will be treated as a request to get the current version of the Industry Analytics Kit.]]></Summary></Member></Type><Type category="Event" name="TableReady" private="true"><Description><![CDATA[Indicates that a table is ready]]></Description><Summary><![CDATA[Indicates that a table is ready]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="storeName" type="string"/><Member name="tableName" type="string"/></Type><Type category="Event" name="KillManagementChannelListeners" private="true"><Description><![CDATA[Internally generated event to kill any management channel listeners.]]></Description><Summary><![CDATA[Internally generated event to kill any management channel listeners.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="id" type="integer"/></Type><Type category="Event" name="MemStoreUtil" private="true"><Description><![CDATA[MemStoreUtil - Provides convenience methods for managing a MemoryStore cache]]></Description><Summary><![CDATA[MemStoreUtil - Provides convenience methods for managing a MemoryStore cache]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="IN_MEMORY" type="string" typeValue="&quot;IN_MEMORY&quot;"/><Member constant="true" name="DISTRIBUTED" type="string" typeValue="&quot;DISTRIBUTED&quot;"/><Member constant="true" name="CORRELATOR_PERSISTENT" type="string" typeValue="&quot;CORRELATOR_PERSISTENT&quot;"/><Member name="_stores" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="StoreProxy"/></Parameters></Member><Member name="_tables" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="TableProxy"/></Parameters></Member><Member name="_schemas" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="SchemaProxy"/></Parameters></Member><Member name="_schema" type="com.apama.memorystore.Schema"/><Action name="getDecimal" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="row" type="com.apama.memorystore.Row"/><Parameter name="field" type="string"/></Parameters></Action><Action name="initCache" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="name" type="string"/><Parameter name="cacheType" type="string"/><Parameter name="ready" type="action"><Parameters><Parameter type="boolean"/></Parameters></Parameter></Parameters></Action><Action name="openTable" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="storeName" type="string"/><Parameter name="tableName" type="string"/><Parameter name="fields" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter name="types" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter name="exposeMem" type="boolean"/><Parameter name="exposePersisted" type="boolean"/><Parameter name="tableReady" type="action"><Parameters><Parameter type="boolean"/><Parameter type="string"/><Parameter type="string"/></Parameters></Parameter><Parameter name="memoryViewDisplayName" type="string"/><Parameter name="memoryViewDescription" type="string"/><Parameter name="persistentViewDisplayName" type="string"/><Parameter name="persistentViewDescription" type="string"/></Parameters></Action><Action name="getStore" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="StoreProxy"/><Parameters><Parameter name="name" type="string"/></Parameters></Action><Action name="hasRow" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="tableName" type="string"/><Parameter name="key" type="string"/></Parameters></Action><Action name="populateRow" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Row"/><Parameters><Parameter name="row" type="com.apama.memorystore.Row"/><Parameter name="fields" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter name="types" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter name="values" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter></Parameters></Action><Action name="getAsString" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="row" type="com.apama.memorystore.Row"/><Parameter name="field" type="string"/><Parameter name="type" type="string"/></Parameters></Action><Action name="getString" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="row" type="com.apama.memorystore.Row"/><Parameter name="field" type="string"/></Parameters></Action><Action name="getFloat" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/><Parameters><Parameter name="row" type="com.apama.memorystore.Row"/><Parameter name="field" type="string"/></Parameters></Action><Action name="getRow" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Row"/><Parameters><Parameter name="tableName" type="string"/><Parameter name="key" type="string"/></Parameters></Action><Action name="addStore" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="store" type="com.apama.memorystore.Store"/></Parameters></Action><Action name="clearTable" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="name" type="string"/></Parameters></Action><Action name="getSchema" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="SchemaProxy"/><Parameters><Parameter name="name" type="string"/></Parameters></Action><Action name="_printOldNewRow" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="oldRow" type="com.apama.memorystore.Row"/><Parameter name="newRow" type="com.apama.memorystore.Row"/><Parameter name="fields" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter name="types" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter></Parameters></Action><Action name="populateRowAndCommit" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Row"/><Parameters><Parameter name="tableName" type="string"/><Parameter name="getRow" type="action"><Parameters><Parameter type="com.apama.memorystore.Table"/></Parameters><Returns type="com.apama.memorystore.Row"/></Parameter></Parameters></Action><Action name="getTable" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="TableProxy"/><Parameters><Parameter name="tableName" type="string"/></Parameters></Action><Action name="removeRow" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="tableName" type="string"/><Parameter name="key" type="string"/></Parameters></Action><Action name="getBoolean" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="row" type="com.apama.memorystore.Row"/><Parameter name="field" type="string"/></Parameters></Action><Action name="addSchema" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="name" type="string"/><Parameter name="s" type="com.apama.memorystore.Schema"/></Parameters></Action><Action name="forceCommit" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="r" type="com.apama.memorystore.Row"/></Parameters></Action><Action name="printOldVersusNewRow" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="oldRow" type="com.apama.memorystore.Row"/><Parameter name="newRow" type="com.apama.memorystore.Row"/></Parameters></Action><Action name="addTable" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="t" type="com.apama.memorystore.Table"/></Parameters></Action><Action name="setRowValue" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="row" type="com.apama.memorystore.Row"/><Parameter name="field" type="string"/><Parameter name="type" type="string"/><Parameter name="value" type="string"/></Parameters></Action></Type><Type category="Event" name="AnalyticManagement"><Description><![CDATA[This event exists to allow dynamic management of Analytics created using the Analytic event.

 DELETE: deletes a analytic instance. RESET:  resets a analytic instance to it's initial state. START:  starts a analytic instance listening for incoming Data event. By default this also resets the instance. STOP:	stops a analytic from listening to incoming Data events.]]></Description><Summary><![CDATA[This event exists to allow dynamic management of Analytics created using the Analytic event.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="analyticId" type="string"><Description><![CDATA[The analyticId of the analytic to be altered, originally defined in the params of the Analytic event.]]></Description><Summary><![CDATA[The analyticId of the analytic to be altered, originally defined in the params of the Analytic event.]]></Summary></Member><Member name="command" type="string"><Description><![CDATA[The command to be acted upon. Legal values defined in the constants for this event.]]></Description><Summary><![CDATA[The command to be acted upon. Legal values defined in the constants for this event.]]></Summary></Member><Member name="params" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[Management params.]]></Description><Summary><![CDATA[Management params.]]></Summary></Member></Type><Type category="Event" name="SchemaProxy" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_schema" type="com.apama.memorystore.Schema"/><Member name="_valid" type="boolean"/><Action name="getFields" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="string"/></Parameters></Returns></Action><Action name="isValid" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/></Action><Action name="getTypes" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="string"/></Parameters></Returns></Action><Action name="getSchema" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Schema"/></Action></Type><Type category="Event" name="ComplexType"><Description><![CDATA[This event provides functionality to support complex number (numbers with real and imaginary components) arithmetic. This is currently used by the Fast Fourier Transformation calculations.]]></Description><Summary><![CDATA[This event provides functionality to support complex number (numbers with real and imaginary components) arithmetic. This is currently used by the Fast Fourier Transformation calculations.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="real" type="decimal"/><Member name="imaginary" type="decimal"/><Action name="add" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="ComplexType"/><Parameters><Parameter name="b" package="com.industry.analytics" type="ComplexType"/></Parameters></Action><Action name="_toString" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/></Action><Action name="init" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="ComplexType"/><Parameters><Parameter name="r" type="decimal"/><Parameter name="i" type="decimal"/></Parameters></Action><Action name="abs" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/></Action><Action name="cexp" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="ComplexType"/></Action><Action name="subtract" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="ComplexType"/><Parameters><Parameter name="b" package="com.industry.analytics" type="ComplexType"/></Parameters></Action><Action name="initFromSequence" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter package="com.industry.analytics" type="ComplexType"/></Parameters></Returns><Parameters><Parameter name="input" type="sequence"><Parameters><Parameter type="decimal"/></Parameters></Parameter></Parameters></Action><Action name="_toSimpleString" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/></Action><Action name="power" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/></Action><Action name="multiply" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics" type="ComplexType"/><Parameters><Parameter name="b" package="com.industry.analytics" type="ComplexType"/></Parameters></Action></Type><Type category="Event" name="DataConstants"><Description><![CDATA[The DataConstants event object defines a set of constant string values for the different types of Data that are supported.]]></Description><Summary><![CDATA[The DataConstants event object defines a set of constant string values for the different types of Data that are supported.]]></Summary><See field="type" package="com.industry.analytics" type="Data"><Description><![CDATA[The parameter that defines Data event objects type]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="ANOMALY" type="string" typeValue="&quot;a&quot;"><Description><![CDATA[This constant defines the Data type as being an Exception.]]></Description><Summary><![CDATA[This constant defines the Data type as being an Exception.]]></Summary></Member><Member constant="true" name="COMPUTED" type="string" typeValue="&quot;c&quot;"><Description><![CDATA[This constant defines the Data type as being a result derived from a Analytic.]]></Description><Summary><![CDATA[This constant defines the Data type as being a result derived from a Analytic.]]></Summary></Member><Member constant="true" name="RAW" type="string" typeValue="&quot;r&quot;"><Description><![CDATA[This constant defines the Data type as being data received directly from outside the Analytics.]]></Description><Summary><![CDATA[This constant defines the Data type as being data received directly from outside the Analytics.]]></Summary></Member></Type><Type category="Event" name="ClearDataView" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="tableName" type="string"/></Type><Type category="Event" name="SourceIdsRequest"><Description><![CDATA[This request should be sent to the DataSourceService channel "DATASOURCE_MGMT_CHANNEL" when requesting the set of child DataSources that are associated with the DataSource specified.  Note that the entire hierachy of associated child DataSources are returned in the response, not just the direct children of a specified DataSource.

 Applications must listen for the <font face="courier" size="-1">com.industry.analytics.DataSourceIdsResponse</font> events that are sent in response to this request on the DataSourceService channel (I.E. "DATASOURCE_MGMT_CHANNEL").]]></Description><Summary><![CDATA[This request should be sent to the DataSourceService channel "DATASOURCE_MGMT_CHANNEL" when requesting the set of child DataSources that are associated with the DataSource specified.  Note that the entire hierachy of associated child DataSources are returned in the response, not just the direct children of a specified DataSource.]]></Summary><See reference="com.industry.analytics.DataSourceIdsResponse"><Description><![CDATA[The response event to this request.]]></Description></See><See package="com.industry.analytics" type="DataSource"><Description><![CDATA[The definition of an DataSource object.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="sourceId" type="string"><Description><![CDATA[The unique identifier of the Data source to get the set of associated Data Sources for.]]></Description><Summary><![CDATA[The unique identifier of the Data source to get the set of associated Data Sources for.]]></Summary></Member><Member name="onlyLeafNodes" type="boolean"><Description><![CDATA[Boolean value indicating whether all DataSource IDs or only the leaf nodes will be returned in the request.]]></Description><Summary><![CDATA[Boolean value indicating whether all DataSource IDs or only the leaf nodes will be returned in the request.]]></Summary></Member></Type><Type category="Event" name="Cache" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_msu" package="com.industry.analytics" type="MemStoreUtil"/><Member name="_cacheReady" type="action"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters></Member><Member name="_tableName" type="string"/><Member name="_fieldNames" type="sequence"><Parameters><Parameter type="string"/></Parameters></Member><Member name="_fieldTypes" type="sequence"><Parameters><Parameter type="string"/></Parameters></Member><Member name="_exposeMemoryView" type="boolean"/><Member name="_exposePersistentView" type="boolean"/><Member name="_clearCache" type="boolean"/><Action name="_tableReady" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="isReady" type="boolean"/><Parameter name="storeName" type="string"/><Parameter name="tableName" type="string"/></Parameters></Action><Action name="add" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Row"/><Parameters><Parameter name="getRow" type="action"><Parameters><Parameter type="com.apama.memorystore.Table"/></Parameters><Returns type="com.apama.memorystore.Row"/></Parameter></Parameters></Action><Action name="init" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="tableName" type="string"/><Parameter name="fieldNames" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter name="fieldTypes" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter name="exposeMemoryView" type="boolean"/><Parameter name="exposePersistentView" type="boolean"/><Parameter name="cacheReady" type="action"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters></Parameter></Parameters></Action><Action name="_storeReady" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="isReady" type="boolean"/></Parameters></Action><Action name="getIterator" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Iterator"/></Action><Action name="get" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Row"/><Parameters><Parameter name="key" type="string"/></Parameters></Action><Action name="clearCache" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_openTable" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="remove" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="key" type="string"/></Parameters></Action></Type><Type category="Monitor" name="InternData" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Data event in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Data event in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternData" package="com.industry.analytics" type="StayAlive"/></Listens></Type><Type category="Monitor" name="VersioningService"><Description><![CDATA[The Versioning Service allows you to request the current version of the Industry Analytics Kit, and to check that the version that you are requesting is compatible with the application you are using.]]></Description><Summary><![CDATA[The Versioning Service allows you to request the current version of the Industry Analytics Kit, and to check that the version that you are requesting is compatible with the application you are using.]]></Summary><Routes/><Emits/><Enqueues/><Sends><Reference package="com.industry.analytics" type="CurrentVersion"/></Sends><Listens><Reference package="com.industry.analytics" type="CheckVersion"/></Listens></Type><Type category="Monitor" name="InternAnalytic" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Analytic events in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Analytic events in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternAnalytic" package="com.industry.analytics" type="StayAlive"/></Listens></Type><Type category="Monitor" name="Reflector"><Description><![CDATA[This monitor reflects Data events from the main context to the context defined by the Data events <font face="courier" size="-1">name</font> parameter.

 This is required in some circumstances, such as when using JMS integration, where all events arrive on the main context.

 The assumption for this monitor is that all Data events on the main context will need reflecting, as normally they would be expected to be sent to their correct channel.

 Data events are not reflected by default, as this could cause both performance and correctness problems in some cases (application dependant).]]></Description><Summary><![CDATA[This monitor reflects Data events from the main context to the context defined by the Data events <font face="courier" size="-1">name</font> parameter.]]></Summary><See package="com.industry.analytics" type="Data"><Description><![CDATA[The Data event]]></Description></See><See package="com.industry.analytics" type="EnableDataReflector"><Description><![CDATA[The event to enable the Data event reflector]]></Description></See><See package="com.industry.analytics" type="DisableDataReflector"><Description><![CDATA[The event to disable the Data event reflector]]></Description></See><Routes/><Emits/><Enqueues/><Sends><Reference package="com.industry.analytics" type="Data"/></Sends><Listens><Reference package="com.industry.analytics" type="Data"/><Reference package="com.industry.analytics" type="DisableDataReflector"/><Reference package="com.industry.analytics" type="EnableDataReflector"/></Listens></Type><Type category="Monitor" name="InternMemStoreUtil" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the MemoryStore Utilities object in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the MemoryStore Utilities object in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternMemStoreUtil" package="com.industry.analytics" type="StayAlive"/></Listens></Type><Type category="Monitor" name="InternAnalyticObject" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Analytic object in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Analytic object in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends><Reference package="com.industry.analytics" type="Analytic"/></Sends><Listens><Reference package="com.industry.analytics" type="Analytic"/><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternDataSource" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the DataSource objects in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the DataSource objects in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternDataSource" package="com.industry.analytics" type="StayAlive"/></Listens></Type><Type category="Monitor" name="InternConstants" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the common string constants in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the common string constants in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternConstants" package="com.industry.analytics" type="StayAlive"/></Listens></Type><Type category="Monitor" name="DataViewReflector"><Description><![CDATA[This monitor reflects Data events from the main context to the DATAVIEW_CHANNEL. This is required for the DataViewer analytic.

 This overcomes the limitation of the DataView Service bundle's limitation of only routing the response events on the main context.]]></Description><Summary><![CDATA[This monitor reflects Data events from the main context to the DATAVIEW_CHANNEL. This is required for the DataViewer analytic.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/></Type><Type category="Monitor" name="DataSourceService" private="true"><Description><![CDATA[The DataSourceService manages the set of DataSources for the Industry Analytics Kit and their relationships to one another (in the form of a tree heirachy).  It also allows user applications to query the set of DataSource information.]]></Description><Summary><![CDATA[The DataSourceService manages the set of DataSources for the Industry Analytics Kit and their relationships to one another (in the form of a tree heirachy).  It also allows user applications to query the set of DataSource information.]]></Summary><See package="com.industry.analytics" type="DataSource"><Description><![CDATA[The definition of an DataSource object.]]></Description></See><Routes/><Emits/><Enqueues/><Sends><Reference package="com.industry.analytics" type="SourceIdsResponse"/></Sends><Listens><Reference package="com.industry.analytics" type="AddDataSource"/><Reference package="com.industry.analytics" type="DataSource"/><Reference package="com.industry.analytics" type="SourceIdsRequest"/></Listens></Type><Type category="Monitor" name="InternDataView" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the DataViewer Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the DataViewer Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternDataView" package="com.industry.analytics" type="StayAlive"/></Listens></Type></Package><Package depth="../../../../" display="com.industry.analytics.utilities" name="com.industry.analytics.utilities"><Type category="Event" name="DumpTable" private="true"><Description><![CDATA[Sending this event to the MemoryStore Analytic causes it to log the specified MemoryStore table to the Correlator log. This should only be used for internal diagnostic/debugging purposes.]]></Description><Summary><![CDATA[Sending this event to the MemoryStore Analytic causes it to log the specified MemoryStore table to the Correlator log. This should only be used for internal diagnostic/debugging purposes.]]></Summary><See reference="com.industry.analytics.MemoryStore"><Description><![CDATA[The MemoryStore Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="tableName" type="string"><Description><![CDATA[The name of the MemoryStore table that should be printed.]]></Description><Summary><![CDATA[The name of the MemoryStore table that should be printed.]]></Summary></Member></Type><Type category="Event" name="DataSimulator"><Description><![CDATA[The Data Simulator Analytic generates a set of data for use in an Industry Analytics Kit network.

 The Data Simulator has two main modes of generating data patterns. The first is brownian motion which produces data with a random variation within a specified maximum delta. The second is a random which produces a random Data value within the defined range.

 The Data Simulator can be configured to generate events at a specified data rante. The valid data rates are number of events 'perSecond', 'perMinute' or 'perHour'. The default value for data rate unit is 60.

 The Data Simulator will generate data for one or more sources. The data for these sources are generated in a staggered fashion. Bear in mind that although the timestamps will be generated accurately, the actual output of the events will be subject to the usual limitations of time resolution within the correlator.

 Brownian:</br> if stepType = percentage then val = ((rangeUpper - rangeLower)/100))* stepValue </br> else val = stepValue </br> delta = val.rand() - val.rand() </br> if (f(n-1)+delta > rangeUpper) OR (f(n-1)+delta < rangeLower) then delta = delta * -1 </br> f(n) = f(n-1) +  delta

 Random : random := (rangeUpper - rangeLower).rand()

 <dl><dt><b>Input Data events:</b></dt> <dd>There is no input data events as simulator generates Data events and send on output channel.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the <font face="courier" size="-1">params</font> from the input Data are copied to the delta Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>simulationType</b></td><td>The Type of simulation data to be generated.</td> <td>One of <font face="courier" size="-1">"brownian", "random", "sin", "sawRising", "sawFalling", "square", "triangle"</font></td><td>String</td><td>False</td><td><font face="courier" size="-1">brownian</font></td></tr> <tr><td><b>rangeUpper</b></td><td>Defines the upper range of data value.</td> <td>> <font face="courier" size="-1">rangeLower</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">100.0d</font></td></tr> <tr><td><b>rangeLower</b></td><td>Defines the upper range of data value.</td> <td> < <font face="courier" size="-1">rangeUpper</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">0.0</font></td></tr> <tr><td><b>sourceIdPrefix</b></td><td>Defines the sourceId prefix to be used in generated data.</td> <td>String</td><td>String</td><td>False</td><td><font face="courier" size="-1">simulator_</font></td></tr> <tr><td><b>sourceIdCount</b></td><td>Defines the number of sourceIds for which data will be generated.</td> <td> > 0 </td> <td>Integer</td><td>False</td><td><font face="courier" size="-1">1</font></td></tr> <tr><td><b>dataRateUnit</b></td><td>The units to be used for data rate generation.</td> <td><font face="courier" size="-1">perSecond, perMinute, perHour</font></td><td>String</td><td>False</td><td><font face="courier" size="-1">perMinute</font></td></tr> <tr><td><b>dataRateValue</b></td><td>The value to be specified for dataRateUnit param. The events will be generated per sourceId at specified rate.</td> <td> > 0 </td><td>Integer</td><td>False</td><td><font face="courier" size="-1">60</font></td></tr> <tr><td><b>stepType</b></td><td>Step type for simulated data.</td> <td><font face="courier" size="-1">percentage or absolute</font></td><td>String</td><td>False</td><td><font face="courier" size="-1">percentage</font></td></tr> <tr><td><b>stepValue</b></td><td>Defines the size of the step between each Data value.</td> <td> > 0</td><td>String</td><td>False</td><td><font face="courier" size="-1">5.0</font></td></tr> <tr><td><b>eventsPerCycle</b></td><td>Defines the number of Data points to be generated per cycle.</td> <td> > 0</td><td>String</td><td>False</td><td><font face="courier" size="-1">30</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
//Define a DataSimulator Analytic which will publish Data events on  
//the output channel "Output1". The values it will generate will range between 
//50.0 and 100.0. Events are published by default every second
send com.industry.analytics.Analytic("DataSimulator", new sequence&ltstring&gt, ["Output1"], {"rangeUpper":"100.0d", "rangeLower":"50.0d"} ) to "";

//Define a DataSimulator Analytic which will publish Data events on  
//the output channel "Output1". The  values it will generate will range between 
//0.0 and 100.0 for 3 source ids. Events are published every 5 seconds per source id.
send com.industry.analytics.Analytic("DataSimulator", new sequence&ltstring&gt, ["Output1"], {"rangeUpper":"100.0d", "rangeLower":"50.0d", "sourceIdCount":"3", "dataRateUnit":"perMinute", "dataRateValue":"12"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Data Simulator Analytic generates a set of data for use in an Industry Analytics Kit network.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;DataSimulator&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="SIMULATION_TYPE" type="string" typeValue="&quot;simulationType&quot;"><Description><![CDATA[This constant defines the type of simulated data]]></Description><Summary><![CDATA[This constant defines the type of simulated data]]></Summary></Member><Member constant="true" name="RANGE_UPPER" type="string" typeValue="&quot;rangeUpper&quot;"><Description><![CDATA[This constant defines the upper range of dValue]]></Description><Summary><![CDATA[This constant defines the upper range of dValue]]></Summary></Member><Member constant="true" name="RANGE_LOWER" type="string" typeValue="&quot;rangeLower&quot;"><Description><![CDATA[This constant defines the lower range for Data dValue]]></Description><Summary><![CDATA[This constant defines the lower range for Data dValue]]></Summary></Member><Member constant="true" name="SOURCE_ID_PREFIX" type="string" typeValue="&quot;sourceIdPrefix &quot;"><Description><![CDATA[This constant defines the sourceId prefix to be used]]></Description><Summary><![CDATA[This constant defines the sourceId prefix to be used]]></Summary></Member><Member constant="true" name="SOURCE_ID_COUNT" type="string" typeValue="&quot;sourceIdCount&quot;"><Description><![CDATA[This constant defines the sourceId count to be used]]></Description><Summary><![CDATA[This constant defines the sourceId count to be used]]></Summary></Member><Member constant="true" name="DATA_RATE_UNIT" type="string" typeValue="&quot;dataRateUnit&quot;"><Description><![CDATA[This constant defines the data generation rate units]]></Description><Summary><![CDATA[This constant defines the data generation rate units]]></Summary></Member><Member constant="true" name="DATA_RATE_VALUE" type="string" typeValue="&quot;dataRateValue&quot;"><Description><![CDATA[This constant defines thedata generation unit value]]></Description><Summary><![CDATA[This constant defines thedata generation unit value]]></Summary></Member><Member constant="true" name="STEP_TYPE" type="string" typeValue="&quot;stepType&quot;"><Description><![CDATA[This constant defines the the step type (absolute or percentage) that the step value should be treated as.]]></Description><Summary><![CDATA[This constant defines the the step type (absolute or percentage) that the step value should be treated as.]]></Summary></Member><Member constant="true" name="STEP_VALUE" type="string" typeValue="&quot;stepValue&quot;"><Description><![CDATA[This constant defines the size of the step between each Data value]]></Description><Summary><![CDATA[This constant defines the size of the step between each Data value]]></Summary></Member><Member constant="true" name="EVENTS_PER_CYCLE" type="string" typeValue="&quot;eventsPerCycle&quot;"><Description><![CDATA[This constant defines the number of Data points that are to be generated per cycle]]></Description><Summary><![CDATA[This constant defines the number of Data points that are to be generated per cycle]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cache to save output data name]]></Description><Summary><![CDATA[Local cache to save output data name]]></Summary></Member><Member name="_simulationType" private="true" type="string"><Description><![CDATA[Local cache to save simulation type]]></Description><Summary><![CDATA[Local cache to save simulation type]]></Summary></Member><Member name="_rangeUpper" private="true" type="decimal"><Description><![CDATA[Local cache to save upper range]]></Description><Summary><![CDATA[Local cache to save upper range]]></Summary></Member><Member name="_rangeLower" private="true" type="decimal"><Description><![CDATA[Local cache to save lower range]]></Description><Summary><![CDATA[Local cache to save lower range]]></Summary></Member><Member name="_sourceIdPrefix" private="true" type="string"><Description><![CDATA[Local cache to save sourceId prefix]]></Description><Summary><![CDATA[Local cache to save sourceId prefix]]></Summary></Member><Member name="_sourceIdCount" private="true" type="integer"><Description><![CDATA[Local cache to save sourceId count]]></Description><Summary><![CDATA[Local cache to save sourceId count]]></Summary></Member><Member name="_dataRateUnit" private="true" type="string"><Description><![CDATA[Local cache to save data rate unit]]></Description><Summary><![CDATA[Local cache to save data rate unit]]></Summary></Member><Member name="_dataRateValue" private="true" type="integer"><Description><![CDATA[Local cache to save data rate unit value]]></Description><Summary><![CDATA[Local cache to save data rate unit value]]></Summary></Member><Member name="_stepType" private="true" type="string"><Description><![CDATA[Local cache to save step type]]></Description><Summary><![CDATA[Local cache to save step type]]></Summary></Member><Member name="_stepValue" private="true" type="decimal"><Description><![CDATA[Local cache to save step value]]></Description><Summary><![CDATA[Local cache to save step value]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="_config" package="com.industry.analytics" private="true" type="Analytic"><Description><![CDATA[The configuration event.]]></Description><Summary><![CDATA[The configuration event.]]></Summary></Member><Member name="_initComplete" private="true" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The initialisation callback action.]]></Description><Summary><![CDATA[The initialisation callback action.]]></Summary></Member><Member name="_simulationFunc" private="true" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[The simulation call back function.]]></Description><Summary><![CDATA[The simulation call back function.]]></Summary></Member><Member constant="true" name="BROWNIAN" private="true" type="string" typeValue="&quot;brownian&quot;"><Description><![CDATA[Constant for brownian motion]]></Description><Summary><![CDATA[Constant for brownian motion]]></Summary></Member><Member constant="true" name="RANDOM" private="true" type="string" typeValue="&quot;random&quot;"><Description><![CDATA[Constant for random data]]></Description><Summary><![CDATA[Constant for random data]]></Summary></Member><Member constant="true" name="SIN" private="true" type="string" typeValue="&quot;sin&quot;"><Description><![CDATA[Constent for sin wave]]></Description><Summary><![CDATA[Constent for sin wave]]></Summary></Member><Member constant="true" name="SAW_FALLING" private="true" type="string" typeValue="&quot;sawFalling&quot;"><Description><![CDATA[Constant for saw falling]]></Description><Summary><![CDATA[Constant for saw falling]]></Summary></Member><Member constant="true" name="SAW_RISING" private="true" type="string" typeValue="&quot;sawRising&quot;"><Description><![CDATA[Constant for saw rising]]></Description><Summary><![CDATA[Constant for saw rising]]></Summary></Member><Member constant="true" name="SQUARE" private="true" type="string" typeValue="&quot;square&quot;"><Description><![CDATA[Constant for square wave]]></Description><Summary><![CDATA[Constant for square wave]]></Summary></Member><Member constant="true" name="TRIANGLE" private="true" type="string" typeValue="&quot;triangle&quot;"><Description><![CDATA[Constant for triangular wave]]></Description><Summary><![CDATA[Constant for triangular wave]]></Summary></Member><Member constant="true" name="PER_SECOND" private="true" type="string" typeValue="&quot;perSecond&quot;"><Description><![CDATA[Constant for per second data rate]]></Description><Summary><![CDATA[Constant for per second data rate]]></Summary></Member><Member constant="true" name="PER_MINUTE" private="true" type="string" typeValue="&quot;perMinute&quot;"><Description><![CDATA[Constant for per minute data rate]]></Description><Summary><![CDATA[Constant for per minute data rate]]></Summary></Member><Member constant="true" name="PER_HOUR" private="true" type="string" typeValue="&quot;perHour&quot;"><Description><![CDATA[Constant for per hour data rate]]></Description><Summary><![CDATA[Constant for per hour data rate]]></Summary></Member><Member constant="true" name="PERCENTAGE" private="true" type="string" typeValue="&quot;percentage&quot;"><Description><![CDATA[Constant for percentage step type]]></Description><Summary><![CDATA[Constant for percentage step type]]></Summary></Member><Member constant="true" name="ABSOLUTE" private="true" type="string" typeValue="&quot;absolute&quot;"><Description><![CDATA[Constant for absolute step type]]></Description><Summary><![CDATA[Constant for absolute step type]]></Summary></Member><Member constant="true" name="DEFAULT_SOURCE_ID_PREFIX" private="true" type="string" typeValue="&quot;simulator_&quot;"><Description><![CDATA[This constant defines the default value for the sourceIdPrefix configuration parameter.]]></Description><Summary><![CDATA[This constant defines the default value for the sourceIdPrefix configuration parameter.]]></Summary></Member><Member constant="true" name="SECONDS_IN_MIN" private="true" type="integer" typeValue="60"><Description><![CDATA[This constant defines the number of seconds in a minute, used to determine the event generation rate.]]></Description><Summary><![CDATA[This constant defines the number of seconds in a minute, used to determine the event generation rate.]]></Summary></Member><Member constant="true" name="SECONDS_IN_HOUR" private="true" type="integer" typeValue="3600"><Description><![CDATA[This constant defines the number of seconds in an hour, used to determine the event generation rate.]]></Description><Summary><![CDATA[This constant defines the number of seconds in an hour, used to determine the event generation rate.]]></Summary></Member><Member constant="true" name="DEFAULT_STEP_VALUE" private="true" type="decimal" typeValue="5.0d"><Description><![CDATA[This constant defines the default value for the step value configuration parameter.]]></Description><Summary><![CDATA[This constant defines the default value for the step value configuration parameter.]]></Summary></Member><Member constant="true" name="DEFAULT_EVENTS_PER_CYCLE" private="true" type="integer" typeValue="30"><Description><![CDATA[This constant defines the default value for the number of points in the pattern configuration parameter.]]></Description><Summary><![CDATA[This constant defines the default value for the number of points in the pattern configuration parameter.]]></Summary></Member><Member constant="true" name="DEFAULT_RANGE_UPPER" private="true" type="decimal" typeValue="100.0d"><Description><![CDATA[This constant defines the default value for the rangeUpper configuration parameter.]]></Description><Summary><![CDATA[This constant defines the default value for the rangeUpper configuration parameter.]]></Summary></Member><Member constant="true" name="DEFAULT_RANGE_LOWER" private="true" type="decimal" typeValue="0.0d"><Description><![CDATA[This constant defines the default value for the rangeLower configuration parameter.]]></Description><Summary><![CDATA[This constant defines the default value for the rangeLower configuration parameter.]]></Summary></Member><Member constant="true" name="CONST_DATARATE_OFFSET" private="true" type="float" typeValue="0.20"><Description><![CDATA[This constant defines the random percentage range that will be applied to the data rate interval]]></Description><Summary><![CDATA[This constant defines the random percentage range that will be applied to the data rate interval]]></Summary></Member><Member name="_delta" private="true" type="float"><Description><![CDATA[Local variable to cache the calculated step delta value.]]></Description><Summary><![CDATA[Local variable to cache the calculated step delta value.]]></Summary></Member><Member name="_numPointsPerCycle" private="true" type="integer"><Description><![CDATA[Local variable to cache the number of points in a full cycle for a wave pattern being generated. Only applicable for pattern simulation types.]]></Description><Summary><![CDATA[Local variable to cache the number of points in a full cycle for a wave pattern being generated. Only applicable for pattern simulation types.]]></Summary></Member><Member name="_rangeSpread" private="true" type="decimal"><Description><![CDATA[Local variable to cache the spread of the defined range]]></Description><Summary><![CDATA[Local variable to cache the spread of the defined range]]></Summary></Member><Member name="_currPointInCycle" private="true" type="integer"><Description><![CDATA[Local variable to cache the current point in a wave pattern being generated. Only applicable for pattern simulation types.]]></Description><Summary><![CDATA[Local variable to cache the current point in a wave pattern being generated. Only applicable for pattern simulation types.]]></Summary></Member><Action name="_random" private="true" staticNature=""><Description><![CDATA[Random. Data containing Random number between range.]]></Description><Summary><![CDATA[Random. Data containing Random number between range.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="currData" package="com.industry.analytics" type="Data"><Description><![CDATA[The Data to be jiggled.]]></Description></Parameter></Parameters></Action><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="_sinWave" private="true" staticNature=""><Description><![CDATA[Sin. Generates Data based on a Sine wave pattern between the range defined over a set number of points.]]></Description><Summary><![CDATA[Sin. Generates Data based on a Sine wave pattern between the range defined over a set number of points.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="currData" package="com.industry.analytics" type="Data"><Description><![CDATA[The Data to be jiggled.]]></Description></Parameter></Parameters></Action><Action name="_squareWave" private="true" staticNature=""><Description><![CDATA[Square. Generates Data based on a Square wave pattern between the range defined over a set number of points.]]></Description><Summary><![CDATA[Square. Generates Data based on a Square wave pattern between the range defined over a set number of points.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="currData" package="com.industry.analytics" type="Data"><Description><![CDATA[The Data to be jiggled.]]></Description></Parameter></Parameters></Action><Action name="_simulatorInitComplete" private="true" staticNature=""><Description><![CDATA[Helper action to kick off the Data Simulator before calling the init complete.]]></Description><Summary><![CDATA[Helper action to kick off the Data Simulator before calling the init complete.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="flag" type="boolean"/><Parameter name="iface" package="com.industry.analytics" type="AnalyticInterface"/></Parameters></Action><Action name="_brownian" private="true" staticNature=""><Description><![CDATA[Brownian motion. V = V + 2 * (Rand(Range) - Rand(Range)) /CycleCount Clip inside range, move away from boundary if exceeding boundary]]></Description><Summary><![CDATA[Brownian motion. V = V + 2 * (Rand(Range) - Rand(Range)) /CycleCount Clip inside range, move away from boundary if exceeding boundary]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="currData" package="com.industry.analytics" type="Data"><Description><![CDATA[The Data to be jiggled.]]></Description></Parameter></Parameters></Action><Action name="_sawRisingWave" private="true" staticNature=""><Description><![CDATA[Saw Rising. Generates Data based on a Rising Sawtooth wave pattern between the range defined over a set number of points.]]></Description><Summary><![CDATA[Saw Rising. Generates Data based on a Rising Sawtooth wave pattern between the range defined over a set number of points.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="currData" package="com.industry.analytics" type="Data"><Description><![CDATA[The Data to be jiggled.]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="startSimulator" private="true" staticNature=""><Description><![CDATA[Action that starts the simulation of Data values.]]></Description><Summary><![CDATA[Action that starts the simulation of Data values.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="dataIntervalAsSec" type="float"/></Parameters></Action><Action name="_triangleWave" private="true" staticNature=""><Description><![CDATA[Triangle. Generates Data based on a Triangle wave pattern between the range defined over a set number of points.]]></Description><Summary><![CDATA[Triangle. Generates Data based on a Triangle wave pattern between the range defined over a set number of points.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="currData" package="com.industry.analytics" type="Data"><Description><![CDATA[The Data to be jiggled.]]></Description></Parameter></Parameters></Action><Action name="_sawFallingWave" private="true" staticNature=""><Description><![CDATA[Saw Falling. Generates Data based on a Falling Sawtooth wave pattern between the range defined over a set number of points.]]></Description><Summary><![CDATA[Saw Falling. Generates Data based on a Falling Sawtooth wave pattern between the range defined over a set number of points.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="currData" package="com.industry.analytics" type="Data"><Description><![CDATA[The Data to be jiggled.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="DataViewer"><Description><![CDATA[The DataViewer Analytic caches the data from the defined input Data channel to a table in DataViewer named by the provided <font face="courier" size="-1">outputDataName</font>. It also adds an entry in the DataViewer table for that table name. The Data table is keyed on name and sourceId. This method was chosen over putting all the output into a single Data table due to a limitation of using trend tables within Apama Dashboards that only allows one trend table to be created and maintained from any given table.  This causes a problem when trying to display filtered output from a single table.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>None</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>name</b></td><td>The name of the DataView table where the incoming Data event data will be stored</td> <td>A non-empty string</td><td>String</td><td>False</td><td>The input Data name</td></tr> <tr><td><b>owner</b></td><td>The identifier used as the owner of the DataView table that will be created. Defaults to access for all users</td> <td>A non-empty string</td><td>String</td><td>False</td><td><font face="courier" size="-1">*</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a DataViewer Analytic which will create a dataview called "Input1" 
// and publish Data events from the channel "Input1" to it.
send com.industry.analytics.Analytic("DataViewer", ["Input1"], new sequence&ltstring&gt, new dictionary&ltstring,string&gt ) to "";

// Define a DataViewer Analytic which will create a dataview called "MyDataView" 
// and store Data events from the channel "Input2" into it.
send com.industry.analytics.Analytic("DataViewer", ["Input2"], new sequence&ltstring&gt, {"name":"MyDataView"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The DataViewer Analytic caches the data from the defined input Data channel to a table in DataViewer named by the provided <font face="courier" size="-1">outputDataName</font>. It also adds an entry in the DataViewer table for that table name. The Data table is keyed on name and sourceId. This method was chosen over putting all the output into a single Data table due to a limitation of using trend tables within Apama Dashboards that only allows one trend table to be created and maintained from any given table.  This causes a problem when trying to display filtered output from a single table.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;DataViewer&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="DATAVIEW_NAME" type="string" typeValue="&quot;name&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the name of the DataView to create]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the name of the DataView to create]]></Summary></Member><Member constant="true" name="DATAVIEW_OWNERID" type="string" typeValue="&quot;owner&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the ownerId of the DataView to create]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the ownerId of the DataView to create]]></Summary></Member><Member name="_dataViewName" private="true" type="string"><Description><![CDATA[Local cached output DataView name]]></Description><Summary><![CDATA[Local cached output DataView name]]></Summary></Member><Member name="_dataViewOwner" private="true" type="string"><Description><![CDATA[Local cached output DataView name]]></Description><Summary><![CDATA[Local cached output DataView name]]></Summary></Member><Member name="_initComplete" private="true" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[Local cached copy of the completion callback. This is required as we need to wait for the tables to be created before calling back the application.]]></Description><Summary><![CDATA[Local cached copy of the completion callback. This is required as we need to wait for the tables to be created before calling back the application.]]></Summary></Member><Member name="_dvDatas" package="com.industry.analytics" private="true" type="DataView"><Description><![CDATA[DataView helper object for the dataview Data events table.]]></Description><Summary><![CDATA[DataView helper object for the dataview Data events table.]]></Summary></Member><Member name="_dvDv" package="com.industry.analytics" private="true" type="DataView"><Description><![CDATA[DataView helper object for the dataview names table.]]></Description><Summary><![CDATA[DataView helper object for the dataview names table.]]></Summary></Member><Member name="_isDataDvReady" private="true" type="boolean"><Description><![CDATA[Boolean indicating whether or not the Data Cache is ready]]></Description><Summary><![CDATA[Boolean indicating whether or not the Data Cache is ready]]></Summary></Member><Member name="_isDvDvReady" private="true" type="boolean"><Description><![CDATA[Boolean indicating whether or not the MemoryStores Cache is ready]]></Description><Summary><![CDATA[Boolean indicating whether or not the MemoryStores Cache is ready]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="_AnalyticInterface" package="com.industry.analytics" private="true" type="AnalyticInterface"><Description><![CDATA[The cached Analytic Interface object]]></Description><Summary><![CDATA[The cached Analytic Interface object]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_dvDatasReady" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="flag" type="boolean"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_onDelete" private="true" staticNature=""><Description><![CDATA[Action to clear up when a DataViewer instance is deleted. The entry in the DataViewer list table is deleted and the Data events table for this instance is deleted.]]></Description><Summary><![CDATA[Action to clear up when a DataViewer instance is deleted. The entry in the DataViewer list table is deleted and the Data events table for this instance is deleted.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_dvsReady" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_setupDataView" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="success" type="boolean"/><Parameter name="ci" package="com.industry.analytics" type="AnalyticInterface"/></Parameters></Action><Action name="_dvDvReady" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="flag" type="boolean"/></Parameters></Action></Type><Type category="Event" name="MemoryStore"><Description><![CDATA[The MemoryStore Analytic caches the Data data from the defined input Data channel to a table in MemoryStore named by the provided <font face="courier" size="-1">outputDataName</font>. It also adds an entry in the MemoryStore table for that table name. The Data table is keyed on name and sourceId. This method was chosen over putting all the output into a single Data table due to a limitation of using trend tables within Apama Dashboards that only allows one trend table to be created and maintained from any given table.  This causes a problem when trying to display filtered output from a single table.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>None</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>name</b></td><td>The name of the MemoryStore table where the incoming Data event data will be stored</td> <td>A non-empty string</td><td>String</td><td>False</td><td>The input Data name</td></tr> <tr><td><b>exposeMemoryView</b></td><td>When this field is true, the MemoryStore makes the rows in the in-memory table associated with this schema available by creating DataViews that contain this data.</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> <tr><td><b>exposePersistentView</b></td><td>When this field is true, the MemoryStore makes the rows in the on-disk table associated with this schema available by creating DataViews that contain this data.</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">false</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a MemoryStore Analytic which will create a MemoryStore table 
// called "Input1" and store Data events from the channel "Input1" into it.
send com.industry.analytics.Analytic("MemoryStore", ["Input1"], new sequence&ltstring&gt, new dictionary&ltstring,string&gt ) to "";

// Define a MemoryStore Analytic which will create a MemoryStore table 
// called "MyTable" and store Data events from the channel "Input2" into it.
send com.industry.analytics.Analytic("MemoryStore", ["Input2"], new sequence&ltstring&gt, {"name":"MyTable"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The MemoryStore Analytic caches the Data data from the defined input Data channel to a table in MemoryStore named by the provided <font face="courier" size="-1">outputDataName</font>. It also adds an entry in the MemoryStore table for that table name. The Data table is keyed on name and sourceId. This method was chosen over putting all the output into a single Data table due to a limitation of using trend tables within Apama Dashboards that only allows one trend table to be created and maintained from any given table.  This causes a problem when trying to display filtered output from a single table.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;MemoryStore&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="TABLE_NAME" type="string" typeValue="&quot;name&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the name of the MemoryStore table to create]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the name of the MemoryStore table to create]]></Summary></Member><Member constant="true" name="EXPOSE_MEMORY_VIEW" type="string" typeValue="&quot;exposeMemoryView&quot;"><Description><![CDATA[This constant defines the configuration parameter name that indicates whether the MemoryStore will create dataviews for the in-memory tables]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that indicates whether the MemoryStore will create dataviews for the in-memory tables]]></Summary></Member><Member constant="true" name="EXPOSE_PERSISTENT_VIEW" type="string" typeValue="&quot;exposePersistentView&quot;"><Description><![CDATA[This constant defines the configuration parameter name that indicates whether the MemoryStore will create dataviews for the on-disk tables]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that indicates whether the MemoryStore will create dataviews for the on-disk tables]]></Summary></Member><Member name="_inputDataName" private="true" type="string"><Description><![CDATA[Local cached input Data name]]></Description><Summary><![CDATA[Local cached input Data name]]></Summary></Member><Member name="_tableName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_initComplete" private="true" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[Local cached copy of the completion callback. This is required as we need to wait for the tables to be created before calling back the application.]]></Description><Summary><![CDATA[Local cached copy of the completion callback. This is required as we need to wait for the tables to be created before calling back the application.]]></Summary></Member><Member name="_exposeMemoryView" private="true" type="boolean"><Description><![CDATA[Local cached value for the exposeMemoryView configuration parameter]]></Description><Summary><![CDATA[Local cached value for the exposeMemoryView configuration parameter]]></Summary></Member><Member name="_exposePersistentView" private="true" type="boolean"><Description><![CDATA[Local cached value for the exposePersistentView configuration parameter]]></Description><Summary><![CDATA[Local cached value for the exposePersistentView configuration parameter]]></Summary></Member><Member name="_dataStreamCache" package="com.industry.analytics" private="true" type="Cache"><Description><![CDATA[Cache for the Data stream]]></Description><Summary><![CDATA[Cache for the Data stream]]></Summary></Member><Member name="_dvCache" package="com.industry.analytics" private="true" type="Cache"><Description><![CDATA[Cache for the MemoryStores]]></Description><Summary><![CDATA[Cache for the MemoryStores]]></Summary></Member><Member name="_isDataCacheReady" private="true" type="boolean"><Description><![CDATA[Boolean indicating whether or not the Data Cache is ready]]></Description><Summary><![CDATA[Boolean indicating whether or not the Data Cache is ready]]></Summary></Member><Member name="_isDvCacheReady" private="true" type="boolean"><Description><![CDATA[Boolean indicating whether or not the MemoryStores Cache is ready]]></Description><Summary><![CDATA[Boolean indicating whether or not the MemoryStores Cache is ready]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="_AnalyticInterface" package="com.industry.analytics" private="true" type="AnalyticInterface"><Description><![CDATA[The cached Analytic Interface object]]></Description><Summary><![CDATA[The cached Analytic Interface object]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="dumpTable" private="true" staticNature=""><Description><![CDATA[Helper action to dump the contents of the cache table.]]></Description><Summary><![CDATA[Helper action to dump the contents of the cache table.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_dataStreamCacheReady" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="tableName" type="string"/><Parameter name="flag" type="boolean"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_cachesReady" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_getDvRow" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Row"/><Parameters><Parameter name="t" type="com.apama.memorystore.Table"/></Parameters></Action><Action name="_setupCache" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="success" type="boolean"/><Parameter name="ci" package="com.industry.analytics" type="AnalyticInterface"/></Parameters></Action><Action name="_dvCacheReady" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="tableName" type="string"/><Parameter name="flag" type="boolean"/></Parameters></Action></Type><Type category="Event" name="Logger"><Description><![CDATA[The Logger Analytic logs to the correlator log and (optionally) a channel.

 If "fields" are specified then the events are logged in csv format, otherwise the Data event is logged in its toString form.

 To log to a file run "engine_receive -s -c &lt;ChannelName&gt; -f &lt;fileName&gt;"

 <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>None</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>fields</b></td><td>A list of fields to log in csv format. If not provided then the event is toString()-ed.</td> <td>Valid values are <font face="courier" size="-1"> streamName, dValue, sValue, xValue, yValue, zValue, type, timestamp, param.xxx</font> </td><td>stringified sequence&lt;string&gt;</td><td>False</td><td>The toString() of the event is logged instead.</td></tr> <tr><td><b>emitToChannel</b></td><tdThe name of a channel to emit to.</td> <td></td><td>String</td><td>false</td><td>Don't emit</td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Log the toString() of the event
send com.industry.analytics.Analytic("Logger", ["Input"], new sequence<string>, new dictionary<string, string> ) to "";

//Log the streamName and dValue of the event
send com.industry.analytics.Analytic("Logger", ["Input"], new sequence<string>, {"fields":["streamName","dValue"].toString()} ) to "";

// Emit the dValue of the event to a channel
send com.industry.analytics.Analytic("Logger", ["Input"], new sequence<string>, {"fields":["dValue"].toString(), "emitToChannel":"loggingChannel"} ) to "";

</pre></dd> </dl>]]></Description><Summary><![CDATA[The Logger Analytic logs to the correlator log and (optionally) a channel.]]></Summary><Routes/><Emits><Reference type="string representation of an event"/></Emits><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Logger&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="FIELDS" type="string" typeValue="&quot;fields&quot;"><Description><![CDATA[This constant defines the name of parameter decimalPrecision.]]></Description><Summary><![CDATA[This constant defines the name of parameter decimalPrecision.]]></Summary></Member><Member constant="true" name="EMIT_TO_CHANNEL" type="string" typeValue="&quot;emitToChannel&quot;"/><Member name="_fields" private="true" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description/><Summary/></Member><Member name="_emitToChannel" private="true" type="optional"><Parameters><Parameter type="string"/></Parameters><Description/><Summary/></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="_fieldGetters" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="string"/></Parameter></Parameters><Description/><Summary/></Member><Action name="dValueGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="typeGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="generateCsvOutput" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="tidyFields" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="string"/></Parameters></Returns><Parameters><Parameter name="fields" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter></Parameters></Action><Action name="sValueGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="yValueGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="validateFields" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="fields" type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits><Reference type="string representation of an event"/></Emits><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="sourceIdGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="csvEscape" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="value" type="string"/></Parameters></Action><Action name="xValueGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="timestampGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="zValueGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="streamNameGetter" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Monitor" name="InternDataViewer" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the DataViewer Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the DataViewer Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternDataViewer" package="com.industry.analytics.utilities" type="StayAlive"/></Listens></Type><Type category="Monitor" name="MemoryStoreService" private="true"><Description><![CDATA[The MemoryStoreService monitor listens for requests to create a new MemoryStore Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The MemoryStoreService monitor listens for requests to create a new MemoryStore Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.utilities" type="MemoryStore"><Description><![CDATA[The implementation of the MemoryStore Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="DataViewerService" private="true"><Description><![CDATA[The DataViewerService monitor listens for requests to create a new DataViewer Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The DataViewerService monitor listens for requests to create a new DataViewer Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.utilities" type="DataViewer"><Description><![CDATA[The implementation of the DataViewer Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternMemoryStore" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the MemoryStore Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the MemoryStore Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternMemoryStore" package="com.industry.analytics.utilities" type="StayAlive"/></Listens></Type><Type category="Monitor" name="DataSimulatorService" private="true"><Description><![CDATA[The DataSimulatorService monitor listens for requests to create a new Data Simulator Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The DataSimulatorService monitor listens for requests to create a new Data Simulator Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.utilities" type="DataSimulator"><Description><![CDATA[The implementation of the Data Simulator Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="LoggerService" private="true"><Description><![CDATA[The LoggerService monitor listens for requests to create a new Logger Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The LoggerService monitor listens for requests to create a new Logger Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.utilities" type="Logger"><Description><![CDATA[The implementation of the Logger Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternDataSimulator" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the DataSimulator Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the DataSimulator Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternDataSimulator" package="com.industry.analytics.utilities" type="StayAlive"/></Listens></Type></Package><Package depth="../../../../" display="com.industry.analytics.streaming_calculations" name="com.industry.analytics.streaming_calculations"><Type category="Event" name="CompileError" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Action name="error" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/></Action></Type><Type category="Event" name="ModeBucket" private="true"><Description><![CDATA[This event is used as a bucket to store Mode data]]></Description><Summary><![CDATA[This event is used as a bucket to store Mode data]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="bucketEndTimestamp" private="true" type="decimal"><Description><![CDATA[end timestamp of bucket]]></Description><Summary><![CDATA[end timestamp of bucket]]></Summary></Member><Member name="maxCacheCount" type="integer"/><Member name="sValues" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="integer"/></Parameters><Description><![CDATA[Data recieved within time bucket]]></Description><Summary><![CDATA[Data recieved within time bucket]]></Summary></Member><Member name="_tvBucket" package="com.industry.analytics.streaming_calculations" type="TopValuesInBucket"/><Action name="init" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="timestamp" type="decimal"/><Parameter name="count" type="integer"/></Parameters></Action><Action name="populateDictionaryWithTopValues" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="tvBucket" package="com.industry.analytics.streaming_calculations" type="TopValuesInBucket"/></Parameters></Action><Action name="addOrUpdateValuesToDictionary" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="string"/></Parameters></Action></Type><Type category="Event" name="MinMaxBucket" private="true"><Description><![CDATA[Defines a bucket of calculations for the Min/Max Analytic to use. Applications should not use this event definition directly.]]></Description><Summary><![CDATA[Defines a bucket of calculations for the Min/Max Analytic to use. Applications should not use this event definition directly.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="minValue" type="decimal"/><Member name="maxValue" type="decimal"/><Member name="bucketEndTimestamp" type="decimal"/></Type><Type category="Event" name="ValueWrapper" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="value" type="decimal"/><Action name="get" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="create" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Returns><Parameters><Parameter name="value" type="decimal"/></Parameters></Action></Type><Type category="Event" name="ExpressionHandler" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="left" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Member><Member name="right" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Member><Action name="add" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="mod" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="create" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="left" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter><Parameter name="right" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter><Parameter name="operator" type="string"/></Parameters></Action><Action name="pow" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="divide" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="multiply" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Event" name="Volatility"><Description><![CDATA[The Volatility Analytic computation generates a Data containing a Volatility calculation for each input Data received.

 During the course of the calculation, the moving average is calculated as per the MovingAverage Analytic. If this value is required it can also be output from this computation as a more performant option than the doing the calculation a second time within a MovingAverage Analytic.  The Data events for the moving Average calculation are sent on the Analytics 2nd <font face="courier" size="-1">outputDataNames</font> parameter value.

 The following formulas are implemented:

 Standard Moving Average calculation:<font face="courier" size="-1"><br><br> ma_n = a * x_n + (1 - a) * ma_n-1<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ma_n-1 + a * (x_n - ma_n-1)<br> a = (1 - e^-u)<br> u = (t_n - t_n-1) / T<br> <br><br> Re-arranged Moving Average calculation for efficiency:<br><br> ma_n = (1 - a) * x_n + a * ma_n-1<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= x_n + a * (ma_n-1 - x_n)<br> a = e^-u<br> u = (t_n - t_n-1) / T<br>

 Volatility:<br> S_n = a * S_n-1 + (1 - a)(x_n - ma_n)(x_n - ma_n-1)<br> &nbsp;&nbsp;&nbsp;&nbsp;= a * (S_n-1 + (1 - a)(x_n - ma_n-1)^2)<br> </font>

 Note: If there are multiple values (x_n) for a particular timestamp (t_n) then the average is used Note: If t_n < t_n-1 then the value is ignored

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>A maximum of two output Data stream names may be provided.<br> The first value must always be defined and will be the name of the stream that contains the Volatility calculations. If a second output name is provided, this will be used for the optional Moving Average calculation. Params are copied to the output data events.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window to calculate the Volatility over</td> <td>Stringified decimal <font face="courier" size="-1">>=0.0d</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">60.0d</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Volatility values are calculated based on the <font face="courier" size="-1">sourceId</font> of the <font face="courier" size="-1">Data</font> events</td> <td><font face="courier" size="-1">"true"</font> or <font face="courier" size="-1">"false"</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> <tr><td><b>type</b></td><td>Defines whether to use variance or standard deviation (I.E. the square root of the Volatility).</td> <td><font face="courier" size="-1">"stddev"</font> or <font face="courier" size="-1">"variance"</font></td><td>String</td><td>False</td><td><font face="courier" size="-1">variance</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Volatility Analytic which takes Data events on the channel "Input1"  
// and calculates the volatility/variance value over a 15second timewindow. It publishes
// a Data event with the calculated gradient value on the output channel "Output1".   
send com.industry.analytics.Analytic("Volatility", ["Input1"], ["Output1"], {"timeWindow":"15.0"} ) to "";

// Define a Volatility Analytic which takes Data events on the channel "Input2"  
// and calculates the standard deviation value over a 30second timewindow instead. 
// It publishes a Data event with the calculated value on the output channel "Output2".   
send com.industry.analytics.Analytic("Volatility", ["Input2"], ["Output2"], {"type":"stddev", "timeWindow":"30.0"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Volatility Analytic computation generates a Data containing a Volatility calculation for each input Data received.]]></Summary><See package="com.industry.analytics.streaming_calculations" type="Average"><Description><![CDATA[The moving Average Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Volatility&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="TIMEWINDOW" type="string" typeValue="&quot;timeWindow&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the time window to calculate the Volatility over]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the time window to calculate the Volatility over]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the Volatility values will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the Volatility values will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="TYPE" type="string" typeValue="&quot;type&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies type of Volatility (I.E. standard deviation or varience) is generated.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies type of Volatility (I.E. standard deviation or varience) is generated.]]></Summary></Member><Member name="_volatilities" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="TimeWeightedVariance"/></Parameters><Description><![CDATA[Local cached dictionary of the calculated Volatility values, keyed by the sourceId.]]></Description><Summary><![CDATA[Local cached dictionary of the calculated Volatility values, keyed by the sourceId.]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_maDataName" private="true" type="string"><Description><![CDATA[Local cached value for the Data stream name if the movingAverage configuration parameter was enabled]]></Description><Summary><![CDATA[Local cached value for the Data stream name if the movingAverage configuration parameter was enabled]]></Summary></Member><Member name="_timeWindow" private="true" type="decimal"><Description><![CDATA[Local cached value for the timeWindow configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the timeWindow configuration parameter value]]></Summary></Member><Member name="_type" private="true" type="string"><Description><![CDATA[Local cached value for the type configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the type configuration parameter value]]></Summary></Member><Member name="_movingAverage" private="true" type="boolean"><Description><![CDATA[Local cached value for the movingAverage configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the movingAverage configuration parameter value]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member constant="true" name="STD_DEV" private="true" type="string" typeValue="&quot;stdDev&quot;"><Description><![CDATA[This constant defines the value of configuration parameter type.]]></Description><Summary><![CDATA[This constant defines the value of configuration parameter type.]]></Summary></Member><Member constant="true" name="VARIANCE" private="true" type="string" typeValue="&quot;variance&quot;"><Description><![CDATA[This constant defines the value of configuration parameter type.]]></Description><Summary><![CDATA[This constant defines the value of configuration parameter type.]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.

 The following formulas are implemented:

 Moving average: Standard formulation: ma_n = a * x_n + (1 - a) * ma_n-1 = ma_n-1 + a * (x_n - ma_n-1) a = (1 - e^-u) u = (t_n - t_n-1) / T

 Re-arrange for efficiency: ma_n = (1 - a) * x_n + a * ma_n-1 = x_n + a * (ma_n-1 - x_n) a = e^-u u = (t_n - t_n-1) / T

 Volatility: S_n  = a * S_n-1 + (1 - a)(x_n - ma_n)(x_n - ma_n-1) = a * (S_n-1 + (1 - a)(x_n - ma_n-1)^2)]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="FFTAnalysis"><Description><![CDATA[The FFT Analytic performs a Fast Fourier Transformation calculation based on the incoming Data over the defined time window and sampling frequency.  It then publishes a set of Data events for the (set of) highest peaks that in the results. The actual number of peaks to publish is configurable. The frequency value is published in the dValue parameter, and the amplitude is published in the xValue parameter of the Data event.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window to calculate the FFT over</td> <td>Stringified decimal <font face="courier" size="-1">>0.0d</font></td><td>Decimal</td><td>True</td><td></td></tr> <tr><td><b>sampleFrequency</b></td><td>Defines the number of samples per-second that the FFT is calculated on</td> <td>Stringified integer <font face="courier" size="-1">>0</font></td><td>Integer</td><td>True</td><td></td></tr> <tr><td><b>peakCount</b></td><td>Defines the number of highest amplitude peaks that will be published by the Analytic</td> <td>Stringified integer <font face="courier" size="-1">>0</font></td><td>Integer</td><td>false</td><td><font face="courier" size="-1">3</font></td></tr> <tr><td><b>exposeDataview</b></td><td>Defines whether or not a Dataview will be created holding all of the results from the FFT calculation.</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">false</font></td></tr> <tr><td><b>dataviewName</b></td><td>The name of the DataView table where the incoming Data event data will be stored</td> <td>A non-empty string</td><td>String</td><td>False</td><td>The input Data channel name</td></tr> <tr><td><b>dataviewOwner</b></td><td>The identifier used as the owner of the DataView table that will be created. Defaults to access for all users</td> <td>A non-empty string</td><td>String</td><td>False</td><td><font face="courier" size="-1">*</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the FFT calculations are partitioned based on the <font face="courier" size="-1">sourceId</font> of the <font face="courier" size="-1">Data</font> events</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a FFT Analytic which takes Data events on the channel "Input1"  
// and calculates the Fast Fourier Transformation over a 10 second time window
// of 20 events per-second. It publishes a Data event for each of the top 3 highest
// amplitude peaks (which is the default value) on the output channel "Output1".   
send com.industry.analytics.Analytic("FFT", ["Input1"], ["Output1"], {"timeWindow":"10.0","sampleFrequency":"20.0"} ) to "";

// Define a FFT Analytic which takes Data events on the channel "Input2"  
// and calculates the Fast Fourier Transformation over a 10 second time window
// of 20 events per-second. It publishes a Data event for each of the top 3 highest
// amplitude peaks (which is the default value) on the output channel "Output2".
// It also creates a new Apama Dataview that contains all of the FFT results
// so that the user can visualise the results in Apama Dashboards or Mashzone
send com.industry.analytics.Analytic("FFT", ["Input2"], ["Output2"], {"timeWindow":"10.0","sampleFrequency":"20.0","exposeDataview":"true"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The FFT Analytic performs a Fast Fourier Transformation calculation based on the incoming Data over the defined time window and sampling frequency.  It then publishes a set of Data events for the (set of) highest peaks that in the results. The actual number of peaks to publish is configurable. The frequency value is published in the dValue parameter, and the amplitude is published in the xValue parameter of the Data event.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;FFT&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="TIMEWINDOW" type="string" typeValue="&quot;timeWindow&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the time window to calculate the FFT over]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the time window to calculate the FFT over]]></Summary></Member><Member constant="true" name="SAMPLE_FREQUENCY" type="string" typeValue="&quot;sampleFrequency&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the sample frequency of the sample data to calculate the FFT over]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the sample frequency of the sample data to calculate the FFT over]]></Summary></Member><Member constant="true" name="EXPOSE_DATAVIEW" type="string" typeValue="&quot;exposeDataview&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies whether or not to create an Apama DataView for the calculated FFT values]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies whether or not to create an Apama DataView for the calculated FFT values]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the Average calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the Average calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="PEAK_COUNT" type="string" typeValue="&quot;peakCount&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the number of highest peaks to publish]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the number of highest peaks to publish]]></Summary></Member><Member constant="true" name="DATAVIEW_NAME" type="string" typeValue="&quot;dataviewName&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the name of the DataView to create]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the name of the DataView to create]]></Summary></Member><Member constant="true" name="DATAVIEW_OWNERID" type="string" typeValue="&quot;dataviewOwner&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the ownerId of the DataView to create]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the ownerId of the DataView to create]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name. Used when sending Data events]]></Description><Summary><![CDATA[Local cached output Data name. Used when sending Data events]]></Summary></Member><Member name="_rawData" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="sequence"><Parameters><Parameter type="decimal"/></Parameters></Parameter></Parameters><Description><![CDATA[The current data captured for the FFT calculation]]></Description><Summary><![CDATA[The current data captured for the FFT calculation]]></Summary></Member><Member name="_sampleCounts" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="integer"/></Parameters><Description><![CDATA[The current number of samples captured for the FFT calculation. This is used to ensure that the FFT is only calculated for buckets of data]]></Description><Summary><![CDATA[The current number of samples captured for the FFT calculation. This is used to ensure that the FFT is only calculated for buckets of data]]></Summary></Member><Member name="_sampleFs" private="true" type="integer"><Description><![CDATA[Local cached Sampling frequency for the FFT calculation]]></Description><Summary><![CDATA[Local cached Sampling frequency for the FFT calculation]]></Summary></Member><Member name="_timeWindow" private="true" type="decimal"><Description><![CDATA[Local cached time window for the FFT calculation]]></Description><Summary><![CDATA[Local cached time window for the FFT calculation]]></Summary></Member><Member name="_sampleLength" private="true" type="integer"><Description><![CDATA[The length of the sample data for the FFT calculation]]></Description><Summary><![CDATA[The length of the sample data for the FFT calculation]]></Summary></Member><Member name="_exposeDataview" private="true" type="boolean"><Description><![CDATA[Local cached Boolean indicating whether or not to create a Dataview for the FFT calculation]]></Description><Summary><![CDATA[Local cached Boolean indicating whether or not to create a Dataview for the FFT calculation]]></Summary></Member><Member name="_numPeaks" private="true" type="integer"><Description><![CDATA[Local cached number of highest peak values to publish]]></Description><Summary><![CDATA[Local cached number of highest peak values to publish]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_dataViewName" private="true" type="string"><Description><![CDATA[Local cached output DataView name]]></Description><Summary><![CDATA[Local cached output DataView name]]></Summary></Member><Member name="_dataViewOwner" private="true" type="string"><Description><![CDATA[Local cached output DataView name]]></Description><Summary><![CDATA[Local cached output DataView name]]></Summary></Member><Member name="_dvDatas" package="com.industry.analytics" private="true" type="DataView"><Description><![CDATA[DataView helper object for dataview that exposes the FFT calculation results.]]></Description><Summary><![CDATA[DataView helper object for dataview that exposes the FFT calculation results.]]></Summary></Member><Member name="_dvCreated" private="true" type="boolean"><Description><![CDATA[Boolean indicatiing whether or not the dataview was successfully created.]]></Description><Summary><![CDATA[Boolean indicatiing whether or not the dataview was successfully created.]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="onDelete" private="true" staticNature=""><Description><![CDATA[Action to clear up when an Analytic instance is deleted. The entry in the DataViewer list table is deleted and the Data events table for this instance is deleted.]]></Description><Summary><![CDATA[Action to clear up when an Analytic instance is deleted. The entry in the DataViewer list table is deleted and the Data events table for this instance is deleted.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic Data event processing. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic Data event processing. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="_dvDatasReady" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="success" type="boolean"/></Parameters></Action><Action name="reset" staticNature=""><Description><![CDATA[Optional action to reset the state of the Analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[Optional action to reset the state of the Analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="MinMax"><Description><![CDATA[The MinMax Analytic calculates the minimum and maximum values for an input data stream over a defined time window. This is achieved by creating a defined number of "buckets" (default 6) which cover the defined time window. The minimum and maximum values are kept for each buckets worth of time, which can then be used to quickly calculate the overall values for long time ranges. The minimum and maximum values are published on the output channel. If the optional parameter <font face="courier" size="-1">bySourceId</font> is provided, the MinMax partitions all incoming <font face="courier" size="-1">Data</font> events by the <font face="courier" size="-1">sourceId</font> parameter value. The output <font face="courier" size="-1">Data</font> event <font face="courier" size="-1">dValue</font> contains the new MIN or MAX value, <font face="courier" size="-1">xValue</font> contains newly calculated MIN value and <font face="courier" size="-1">yValue</font> contains newly calculated MAX value. </br> NOTE: In case of both Min and Max value changes after end of timeWindow, Max value will be contained in output <font face="courier" size="-1">Data</font> event <font face="courier" size="-1">dValue</font>.

 <dl><dt><b>Input Data events:</b></dt> <dd>One or more input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window (in seconds) to calculate the min/max values over</td> <td>Must be <font face="courier" size="-1"> > 0.0d</font></td><td>decimal</td><td>False</td><td><font face="courier" size="-1">60.0d</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the min/max values are calculated based on the <font face="courier" size="-1">sourceId</font> of the <font face="courier" size="-1">Data</font> events</td> <td>Non-Empty String</td><td>String</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> <tr><td><b>bucketCount</b></td><td>Defines the number of points to use in the min/max calculation.</td> <td>Must be <font face="courier" size="-1">>= 1</font></td><td>integer</td><td>False</td><td><font face="courier" size="-1">6</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a MinMax Analytic which takes Data events received on the input 
// channel "Input1" and publishes a Data event with the calculated minimum
// and maximum values over a 20 second time window on the output channel ("Output1")
send com.industry.analytics.Analytic("MinMax", ["Input1"], ["Output1"], {"timeWindow":"20.0"} ) to "";

// Define a MinMax Analytic which takes Data events received on the input 
// channel "Input1" and publishes a Data event with the calculated minimum
// and maximum values over a 20 second time window on the output channel ("Output1")
// but are calculated over ANY input Data events regardless of their sourceId value.
send com.industry.analytics.Analytic("MinMax", ["Input1"], ["Output1"], {"bySourceId":"false","timeWindow":"20.0"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The MinMax Analytic calculates the minimum and maximum values for an input data stream over a defined time window. This is achieved by creating a defined number of "buckets" (default 6) which cover the defined time window. The minimum and maximum values are kept for each buckets worth of time, which can then be used to quickly calculate the overall values for long time ranges. The minimum and maximum values are published on the output channel. If the optional parameter <font face="courier" size="-1">bySourceId</font> is provided, the MinMax partitions all incoming <font face="courier" size="-1">Data</font> events by the <font face="courier" size="-1">sourceId</font> parameter value. The output <font face="courier" size="-1">Data</font> event <font face="courier" size="-1">dValue</font> contains the new MIN or MAX value, <font face="courier" size="-1">xValue</font> contains newly calculated MIN value and <font face="courier" size="-1">yValue</font> contains newly calculated MAX value. </br> NOTE: In case of both Min and Max value changes after end of timeWindow, Max value will be contained in output <font face="courier" size="-1">Data</font> event <font face="courier" size="-1">dValue</font>.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Import library="TimeFormatPlugin" name="timeFormat"/><Member constant="true" name="NAME" type="string" typeValue="&quot;MinMax&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="TIME_WINDOW" type="string" typeValue="&quot;timeWindow&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the time window that the min/max values will be calculated over.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the time window that the min/max values will be calculated over.]]></Summary></Member><Member constant="true" name="BUCKET_COUNT" type="string" typeValue="&quot;bucketCount&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the number of points to use in the min/max calculation]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the number of points to use in the min/max calculation]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the min/max values will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the min/max values will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_bucketTimeWindow" private="true" type="decimal"><Description><![CDATA[Local cached value for the time window per-bucket (IE the timewindow divided by the number of buckets)]]></Description><Summary><![CDATA[Local cached value for the time window per-bucket (IE the timewindow divided by the number of buckets)]]></Summary></Member><Member name="_bucketCount" private="true" type="integer"><Description><![CDATA[Local cached value for the bucketCount configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the bucketCount configuration parameter value]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_overallMinMax" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics.streaming_calculations" type="MinMaxBucket"/></Parameters><Description><![CDATA[Local cached value for the current overall min/max value]]></Description><Summary><![CDATA[Local cached value for the current overall min/max value]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_buckets" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="sequence"><Parameters><Parameter package="com.industry.analytics.streaming_calculations" type="MinMaxBucket"/></Parameters></Parameter></Parameters></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="_changeValue" private="true" type="decimal"><Description><![CDATA[Local cache saving the change value (min or max)]]></Description><Summary><![CDATA[Local cache saving the change value (min or max)]]></Summary></Member><Member name="_timeWindow" private="true" type="decimal"><Description><![CDATA[Local cached copy of the overall timewindow defined]]></Description><Summary><![CDATA[Local cached copy of the overall timewindow defined]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="_addNewBucket" private="true" staticNature=""><Description><![CDATA[This helper action adds new buckets to the sequence, removing old ones as required.  It also updates the overall values.]]></Description><Summary><![CDATA[This helper action adds new buckets to the sequence, removing old ones as required.  It also updates the overall values.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="sourceId" type="string"/><Parameter name="buckets" type="sequence"><Parameters><Parameter package="com.industry.analytics.streaming_calculations" type="MinMaxBucket"/></Parameters></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_updateOverallMinMaxFromBuckets" private="true" staticNature=""><Description><![CDATA[Updates the overall minMax from the constiuent buckets]]></Description><Summary><![CDATA[Updates the overall minMax from the constiuent buckets]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="sourceId" type="string"/><Parameter name="buckets" type="sequence"><Parameters><Parameter package="com.industry.analytics.streaming_calculations" type="MinMaxBucket"/></Parameters></Parameter></Parameters></Action></Type><Type category="Event" name="Spread"><Description><![CDATA[The Spread Analytic calculates a new Data event from the spread between the latest values of Data events on two input streams.

 <dl><dt><b>Input Data events:</b></dt> <dd>Two input Data stream names must be provided. Names should not be same.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the params from the received input Data are copied to the spread Data, as is the sourceId.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Spread values are calculated based on the <font face="courier" size="-1">sourceId</font> of the <font face="courier" size="-1">Data</font> events</td> <td><font face="courier" size="-1">"true"</font> or <font face="courier" size="-1">"false"</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr>

 </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Spread Analytic which takes Data events on the channel "Input1" and "Input2" 
// and publishes a Data event on the output channel "Output1" with the 
// spread value calculated from events from two input streams based on source Ids . 
send com.industry.analytics.Analytic("Spread", ["Input1", "Input2"], ["Output1"], new dictionary&ltstring,string&gt ) to "";

//Define a Spread Analytic which takes Data events on the channel "Input1" and "Input2" 
//and publishes a Data event on the output channel "Output1" with the 
//spread value calculated from events from two input streams irrespective of source Ids . 
send com.industry.analytics.Analytic("Spread", ["Input1", "Input2"], ["Output2"], {"bySourceId":"false"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Spread Analytic calculates a new Data event from the spread between the latest values of Data events on two input streams.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Spread&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the Spread values will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the Spread values will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_inputDataNames" private="true" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[Local cached input Data name]]></Description><Summary><![CDATA[Local cached input Data name]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_latestValuesInput1" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="decimal"/></Parameters><Description><![CDATA[Local cached values of most recent data on both first input streams]]></Description><Summary><![CDATA[Local cached values of most recent data on both first input streams]]></Summary></Member><Member name="_latestValuesInput2" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="decimal"/></Parameters><Description><![CDATA[Local cached values of most recent data on both second input streams]]></Description><Summary><![CDATA[Local cached values of most recent data on both second input streams]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="FuncCompiler" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="expressionCompiler" type="action"><Parameters><Parameter type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter></Parameters></Parameter><Parameter type="string"/></Parameters><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Returns></Member><Member name="func" type="string"/><Action name="create" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="action"><Parameters><Parameter type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter></Parameters></Parameter><Parameter type="string"/></Parameters><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Returns></Returns><Parameters><Parameter name="expressionCompiler" type="action"><Parameters><Parameter type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter></Parameters></Parameter><Parameter type="string"/></Parameters><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Returns></Parameter><Parameter name="func" type="string"/></Parameters></Action><Action name="run" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Returns><Parameters><Parameter name="actions" type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter></Parameters></Parameter><Parameter name="expression" type="string"/></Parameters></Action></Type><Type category="Event" name="FuncHandler" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="subExpression" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Member><Action name="tan" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="ln" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="cos" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="log10" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="ceil" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="acos" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="radToDeg" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="atan" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="rand" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="abs" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="round" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="degToRad" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="create" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="subExpression" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter><Parameter name="func" type="string"/></Parameters></Action><Action name="sin" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="asin" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="floor" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="exp" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Event" name="Bracket" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="open" type="string"/><Member name="close" type="string"/><Member name="compiler" type="action"><Parameters><Parameter type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter></Parameters></Parameter><Parameter type="string"/></Parameters><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Returns></Member></Type><Type category="Event" name="FieldHandler" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="paramName" type="string"/><Action name="getParam" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="getYValue" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="getDValue" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="getTimestamp" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="create" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="field" type="string"/></Parameters></Action><Action name="getXValue" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="getSValue" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="getZValue" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Event" name="Gradient"><Description><![CDATA[The Gradient Analytic derives the gradient for the data passing through. This is achieved by setting up a defined number of buckets (default 6) which cover a defined time window. No gradient is output until all the buckets are in use. Within each bucket the timestamps and values are averaged to give a single data point. The gradient is then calculated as the least mean square between these buckets data points. The gradient is calculated at the point a Data is received which has a timestamp beyond the time window covered by the current bucket. Once that has been done, the oldest bucket is discarded and the triggering Data becomes the first data point in the new bucket. This requires that at least the size of the defined bucket count number of events are received within the defined time window.  If the time window is set to zero, then the calculation is done for every data point received, although due to the algorithm in place the gradient produced is one point behind the incoming data.

 The formulae used is: <font face="courier" size="-1">

 g = &Sigma;(t.v) - &Sigma;(t).&Sigma;(v)/n<br> --------------------<br> &Sigma;(t^2) - (&Sigma;(t))^2/n<br> </font>

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window (in seconds) to use in the gradient calculation.</td> <td>Must be <font face="courier" size="-1">>= 0.0d</font></td><td>decimal</td><td>False</td><td>60.0d</td></tr> <tr><td><b>bucketCount</b></td><td>Defines the number of points to use in the gradient calculation.</td> <td>Must be <font face="courier" size="-1">>= 2</font></td><td>integer</td><td>False</td><td><font face="courier" size="-1">6</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the gradient is calculated based on the <font face="courier" size="-1">sourceId</font> of the <font face="courier" size="-1">Data</font> events</td> <td>Non-Empty String</td><td>String</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Gradient Analytic which takes Data events on the channel "Input1"  
// and calculates the gradient value over a 15second timewindow. It publishes
// a Data event with the calculated gradient value on the output channel "Output1".   
send com.industry.analytics.Analytic("Gradient", ["Input1"], ["Output1"], {"timeWindow":"15.0"} ) to "";

// Define a Gradient Analytic which takes Data events on the channel "Input2"  
// and calculates the gradient value over the default 60second timewindow using 20 
// "buckets" to give a higher precision (IE 3 events per-bucket). It publishes a Data 
// events with the calculated gradient value on the output channel "Output2".   
send com.industry.analytics.Analytic("Gradient", ["Input2"], ["Output2"], {"bucketCount":"20"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Gradient Analytic derives the gradient for the data passing through. This is achieved by setting up a defined number of buckets (default 6) which cover a defined time window. No gradient is output until all the buckets are in use. Within each bucket the timestamps and values are averaged to give a single data point. The gradient is then calculated as the least mean square between these buckets data points. The gradient is calculated at the point a Data is received which has a timestamp beyond the time window covered by the current bucket. Once that has been done, the oldest bucket is discarded and the triggering Data becomes the first data point in the new bucket. This requires that at least the size of the defined bucket count number of events are received within the defined time window.  If the time window is set to zero, then the calculation is done for every data point received, although due to the algorithm in place the gradient produced is one point behind the incoming data.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Gradient&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="BUCKET_COUNT" type="string" typeValue="&quot;bucketCount&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the number of points to use in the gradient calculation]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the number of points to use in the gradient calculation]]></Summary></Member><Member constant="true" name="TIME_WINDOW" type="string" typeValue="&quot;timeWindow&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the time window (in seconds) to use in the gradient calculation]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the time window (in seconds) to use in the gradient calculation]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the gradient calculations will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the gradient calculations will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_buckets" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="sequence"><Parameters><Parameter package="com.industry.analytics.streaming_calculations" type="Bucket"/></Parameters></Parameter></Parameters><Description><![CDATA[Local cache for the set of buckets used in the calculations, keyed by sourceId.]]></Description><Summary><![CDATA[Local cache for the set of buckets used in the calculations, keyed by sourceId.]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_bucketCount" private="true" type="integer"><Description><![CDATA[Local cached value for the bucketCount configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the bucketCount configuration parameter value]]></Summary></Member><Member name="_lastBucket" private="true" type="integer"><Description><![CDATA[Local cached value for the last bucketCount value]]></Description><Summary><![CDATA[Local cached value for the last bucketCount value]]></Summary></Member><Member name="_bucketTimeWindow" private="true" type="decimal"><Description><![CDATA[Local cached value for the bucketTimeWindow configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the bucketTimeWindow configuration parameter value]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_calculateGradient" private="true" staticNature=""><Description><![CDATA[This helper action calculates least squares linear regression.

 X(x) = sum of x g = X(t.v) - X(t).X(v)/n -------------------- X(t^2) - (X(t))^2/n]]></Description><Summary><![CDATA[This helper action calculates least squares linear regression.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="buckets" type="sequence"><Parameters><Parameter package="com.industry.analytics.streaming_calculations" type="Bucket"/></Parameters></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="Mode"><Description><![CDATA[The Mode Analytic finds the mode of the data passing through. This is achieved by setting up a defined number of buckets (default 5) which cover a defined time window. Mode is output end of each bucket. The mode is calculated at the point a Data is received which has a timestamp beyond the time window covered by the current bucket. Once that has been done, the oldest bucket is discarded and the triggering Data becomes the first data point in the new bucket. If the time window is set to zero, then this calculation is done for every data point received, although due to the algorithm in place the mode produced is one point behind the incoming data. It there are two mode values then the one smaller is returned as mode.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>bucketCount</b></td><td>Defines the number of buckets to use in the mode calculation.</td> <td>Must be <font face="courier" size="-1"> >= 2</font></td><td>integer</td><td>False</td><td><font face="courier" size="-1">5</font></td></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window (in seconds) to use in the mode calculation.</td> <td>Must be <font face="courier" size="-1"> >= 0.0d</font></td><td>decimal</td><td>True</td><td></td></tr> <tr><td><b>decimalPrecision</b></td><td>Defines the number of decimal points to use in the mode calculation.</td> <td>Must be <font face="courier" size="-1"> >= 0</font></td><td>integer</td><td>False</td><td><font face="courier" size="-1">2</font></td></tr> <tr><td><b>bySourceId</b></td><td>Defines whether or not the mode calculations will be partitioned by the sourceId.</td> <td><font face="courier" size="-1">True or False</font></td><td>boolean</td><td>False</td><td><font face="courier" size="-1">True</font></td></tr> <tr><td><b>dataAttribute</b></td><td>The configuration parameter name that defines the Data attribute to use in the mode calculation.</td> <td>Non empty string</td><td>String</td><td>False</td><td><font face="courier" size="-1">dValue</font></td></tr> <tr><td><b>bucketCacheCount</b></td><td>Defines the number of data points to save in bucket cache.</td> <td>Must be <font face="courier" size="-1"> >= 1</font></td><td>integer</td><td>False</td><td><font face="courier" size="-1">10</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
//Define a Mode Analytic which takes Data events on the channel "Input1"  
//and calculates the mode value over a 50 second timewindow with default bucketCount, 
//bySourceId, decimalPrecision and dataAttribute parameters. It publishes
//a Data event with the calculated mode value at the end of bucket on the output channel "Output1".   
send com.industry.analytics.Analytic("Mode", ["Input1"], ["Output1"], {"timeWindow":"50.0"} ) to "";

//Define a Mode Analytic which takes Data events on the channel "Input"  
//and calculates the mode value over a 50 second timewindow using 6 "time buckets" 
//to give a higher precision. It reads Data attribute xValue with decimal precision of 3 digits
//for calculating mode. 
//It publishes a Data event with the calculated mode value on the output channel "Output" at end of every bucket.   
send com.industry.analytics.Analytic("Mode", ["Input"], ["Output"], {"timeWindow" : "50.0", "bucketCount":"6", "dataAttribute":"xValue", "decimalPrecision":"3"})
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Mode Analytic finds the mode of the data passing through. This is achieved by setting up a defined number of buckets (default 5) which cover a defined time window. Mode is output end of each bucket. The mode is calculated at the point a Data is received which has a timestamp beyond the time window covered by the current bucket. Once that has been done, the oldest bucket is discarded and the triggering Data becomes the first data point in the new bucket. If the time window is set to zero, then this calculation is done for every data point received, although due to the algorithm in place the mode produced is one point behind the incoming data. It there are two mode values then the one smaller is returned as mode.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Mode&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="BUCKET_COUNT" type="string" typeValue="&quot;bucketCount&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the number of points to use in the mode calculation]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the number of points to use in the mode calculation]]></Summary></Member><Member constant="true" name="TIME_WINDOW" type="string" typeValue="&quot;timeWindow&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the time window (in seconds) to use in the mode calculation]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the time window (in seconds) to use in the mode calculation]]></Summary></Member><Member constant="true" name="DECIMAL_PRECISION" type="string" typeValue="&quot;decimalPrecision&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the decimal precision to use in the mode calculation (in case of floating/decimal type)]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the decimal precision to use in the mode calculation (in case of floating/decimal type)]]></Summary></Member><Member constant="true" name="BY_SOURCE_ID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the mode calculations will be partitioned by the sourceId]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the mode calculations will be partitioned by the sourceId]]></Summary></Member><Member constant="true" name="DATA_ATTRIBUTE" type="string" typeValue="&quot;dataAttribute&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the Data attribute to use in the mode calculation Data taaribute can be dValue, sValue, xValue, yValue or zValue.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the Data attribute to use in the mode calculation Data taaribute can be dValue, sValue, xValue, yValue or zValue.]]></Summary></Member><Member constant="true" name="BUCKET_CACHE_COUNT" type="string" typeValue="&quot;bucketCacheCount&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the count of unique Data events values to keep in a bucket as cache which then will be used for overall mode calculation inside timewindow.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the count of unique Data events values to keep in a bucket as cache which then will be used for overall mode calculation inside timewindow.]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_inputDataName" private="true" type="string"><Description><![CDATA[Local cached input Data names]]></Description><Summary><![CDATA[Local cached input Data names]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_bucketCount" private="true" type="integer"><Description><![CDATA[Local cached bucketCount param]]></Description><Summary><![CDATA[Local cached bucketCount param]]></Summary></Member><Member name="_bucketTimeWindow" private="true" type="decimal"><Description><![CDATA[Local cached TimeWindow param]]></Description><Summary><![CDATA[Local cached TimeWindow param]]></Summary></Member><Member name="_decimalPrecision" private="true" type="integer"><Description><![CDATA[Local cached decimal precision param]]></Description><Summary><![CDATA[Local cached decimal precision param]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached bySourceId param]]></Description><Summary><![CDATA[Local cached bySourceId param]]></Summary></Member><Member name="_dataAttribute" private="true" type="string"><Description><![CDATA[Local cached dataAttribute param]]></Description><Summary><![CDATA[Local cached dataAttribute param]]></Summary></Member><Member name="_bucketCacheCount" private="true" type="integer"><Description><![CDATA[Local cached bucketCacheCount param]]></Description><Summary><![CDATA[Local cached bucketCacheCount param]]></Summary></Member><Member name="_lastBucket" private="true" type="integer"><Description><![CDATA[Local cached value for the last bucketCount value]]></Description><Summary><![CDATA[Local cached value for the last bucketCount value]]></Summary></Member><Member name="_buckets" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="sequence"><Parameters><Parameter package="com.industry.analytics.streaming_calculations" type="ModeBucket"/></Parameters></Parameter></Parameters><Description><![CDATA[Local cached to keep data inside a timewindow for each source id.]]></Description><Summary><![CDATA[Local cached to keep data inside a timewindow for each source id.]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member constant="true" name="D_VALUE" private="true" type="string" typeValue="&quot;dValue&quot;"><Description><![CDATA[Constant definind Data attribute dValue]]></Description><Summary><![CDATA[Constant definind Data attribute dValue]]></Summary></Member><Member constant="true" name="S_VALUE" private="true" type="string" typeValue="&quot;sValue&quot;"><Description><![CDATA[Constant definind Data attribute sValue]]></Description><Summary><![CDATA[Constant definind Data attribute sValue]]></Summary></Member><Member constant="true" name="X_VALUE" private="true" type="string" typeValue="&quot;xValue&quot;"><Description><![CDATA[Constant definind Data attribute xValue]]></Description><Summary><![CDATA[Constant definind Data attribute xValue]]></Summary></Member><Member constant="true" name="Y_VALUE" private="true" type="string" typeValue="&quot;yValue&quot;"><Description><![CDATA[Constant definind Data attribute yValue]]></Description><Summary><![CDATA[Constant definind Data attribute yValue]]></Summary></Member><Member constant="true" name="Z_VALUE" private="true" type="string" typeValue="&quot;zValue&quot;"><Description><![CDATA[Constant definind Data attribute zValue]]></Description><Summary><![CDATA[Constant definind Data attribute zValue]]></Summary></Member><Member constant="true" name="TYPE" private="true" type="string" typeValue="&quot;type&quot;"><Description><![CDATA[Constant definind Data attribute type]]></Description><Summary><![CDATA[Constant definind Data attribute type]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="calculateAndSendMode" private="true" staticNature=""><Description><![CDATA[This function calculates the mode from buckets and create a new Data event and pass onto output channel]]></Description><Summary><![CDATA[This function calculates the mode from buckets and create a new Data event and pass onto output channel]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="buckets" type="sequence"><Parameters><Parameter package="com.industry.analytics.streaming_calculations" type="ModeBucket"/></Parameters></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="addOrUpdateValuesToDictionary" private="true" staticNature=""><Description><![CDATA[Action to add Data attribute value to ModeBucket]]></Description><Summary><![CDATA[Action to add Data attribute value to ModeBucket]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="bucket" package="com.industry.analytics.streaming_calculations" type="ModeBucket"/></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <pre>processData</pre> action on the <pre>com.industry.analytics.AnalyticInterface</pre> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <pre>processData</pre> action on the <pre>com.industry.analytics.AnalyticInterface</pre> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="Average"><Description><![CDATA[The Average Analytic computation generates a Data containing a moving average calculation for each input Data received.

 NOTE: Should have at least 5 events in the timeWindow.

 The following formulas are implemented:

 Standard formulation:<font face="courier" size="-1"><br><br> ma_n = a * x_n + (1 - a) * ma_n-1<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ma_n-1 + a * (x_n - ma_n-1)<br> a = (1 - e^-u)<br> u = (t_n - t_n-1) / T<br> <br><br> Re-arrange for efficiency:<br><br> ma_n = (1 - a) * x_n + a * ma_n-1<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= x_n + a * (ma_n-1 - x_n)<br> a = e^-u<br> u = (t_n - t_n-1) / T<br> </font>

 Note: If there are multiple values (x_n) for a particular timestamp (t_n) then the average is used Note: If t_n < t_n-1 then the value is ignored

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the <font face="courier" size="-1">params</font> from the input Data are copied to the moving average Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window to calculate the moving average over</td> <td>Stringified decimal <font face="courier" size="-1">>0.0d</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">60.0d</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Average calculations are partitioned based on the <font face="courier" size="-1">sourceId</font> of the <font face="courier" size="-1">Data</font> events</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Average Analytic which takes Data events on the channel "Input1"  
// and calculates a moving average values in a 30.0 second time window. It publishes
// a Data event with the calculated moving average on the output channel "Output1".   
send com.industry.analytics.Analytic("Average", ["Input1"], ["Output1"], {"timeWindow":"30.0"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Average Analytic computation generates a Data containing a moving average calculation for each input Data received.]]></Summary><See reference="com.industry.analytics.Volatility"><Description><![CDATA[The Volatility Analytic which can also output the same Average calculation if required.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Average&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="TIMEWINDOW" type="string" typeValue="&quot;timeWindow&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the time window to calculate the moving average over]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the time window to calculate the moving average over]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the Average calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the Average calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_movingAverages" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="TimeWeightedMovingAverage"/></Parameters><Description><![CDATA[Local cached dictionary of the moving average values, keyed by the sourceId.]]></Description><Summary><![CDATA[Local cached dictionary of the moving average values, keyed by the sourceId.]]></Summary></Member><Member name="_timeWindow" private="true" type="decimal"><Description><![CDATA[Local cached value for the timeWindow configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the timeWindow configuration parameter value]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.

 The following formulas are implemented:

 Standard formulation: ma_n = a * x_n + (1 - a) * ma_n-1 = ma_n-1 + a * (x_n - ma_n-1) a = (1 - e^-u) u = (t_n - t_n-1) / T

 Re-arrange for efficiency: ma_n = (1 - a) * x_n + a * ma_n-1 = x_n + a * (ma_n-1 - x_n) a = e^-u u = (t_n - t_n-1) / T]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="Sum"><Description><![CDATA[The Sum Analytic computation generates a Data containing a moving sum calculation for each input Data received. The sum is calculated based on the number of events recieved within a time window (in seconds) or last 'N' events. A smoothing factor is used make result precise. Larger the number for <font face="courier" size="-1">smoothingFactor</font> better the precision.</br> NOTE: The smoothing factor should be less than or equal to calculationValue parameter.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Computed type are generated.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>calculationType</b></td><td>Defines whether the sum calculation is based on timeWindow or count of last ‘N’ events.</td> <td>Valid values are either <font face="courier" size="-1">sampleCount</font> or <font face="courier" size="-1">timeWindow</font> </td><td>String</td><td>True</td><td> </td></tr> <tr><td><b>calculationValue</b></td><td>Defines the value for <font face="courier" size="-1">sampleCount</font> or <font face="courier" size="-1">timeWindow</font>.</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">60.0d</font></td></tr> <tr><td><b>smoothingFactor</b></td><td>Defines the smoothing factor to be used for precision.</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">10.0d</font> </td></tr> <tr><td><b>paramName</b></td><td>Defines the name of Data parameter to use for calculating Sum.</td> <td>Valid values are either<font face="courier" size="-1">dValue</font> or <font face="courier" size="-1">xValue</font> or <font face="courier" size="-1">yValue</font> or <font face="courier" size="-1">zValue</font> </td><td>String</td><td>False</td><td><font face="courier" size="-1">dValue</font> </td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Sum calculations are partitioned based on the <font face="courier" size="-1">sourceId</font> of the <font face="courier" size="-1">Data</font> events</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr>

 </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
//Define a Sum Analytic which takes Data events on the channel "Input"  
//and calculate the moving sum of last 21 Data events with smoothingFactor of 4 for precision. It publishes
//a Data event with the calculated value of Sum on the output channel "Output" after receiving every Data event. 
send com.industry.analytics.Analytic("Sum", ["Input"], ["Output"], {"calculationType": "sampleCount", "calculationValue":"21.0", "smoothingFactor":"4.0"} ) to "";

//Define a Sum Analytic which takes Data events on the channel "Input"  
//and calculate the moving sum of events received within timeWindow of 60 seconds with smoothingFactor of 4 for precision. It publishes
//a Data event with the calculated value of Sum of xValues on the output channel "Output" after receiving every Data event. 
send com.industry.analytics.Analytic("Sum", ["Input"], ["Output"], {"calculationType": "timeWindow", "calculationValue":"60.0", "smoothingFactor":"4.0", "paramName":"xValue"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Sum Analytic computation generates a Data containing a moving sum calculation for each input Data received. The sum is calculated based on the number of events recieved within a time window (in seconds) or last 'N' events. A smoothing factor is used make result precise. Larger the number for <font face="courier" size="-1">smoothingFactor</font> better the precision.</br> NOTE: The smoothing factor should be less than or equal to calculationValue parameter.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Sum&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="CALCULATION_TYPE" type="string" typeValue="&quot;calculationType&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the calculation type to be used to calculate the sum. Type can be either 'timeWindow' or 'sampleCount']]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the calculation type to be used to calculate the sum. Type can be either 'timeWindow' or 'sampleCount']]></Summary></Member><Member constant="true" name="CALCULATION_VALUE" type="string" typeValue="&quot;calculationValue&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the calculation value to be used for calculationType to calculate the sum.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the calculation value to be used for calculationType to calculate the sum.]]></Summary></Member><Member constant="true" name="SMOOTHING_FACTOR" type="string" typeValue="&quot;smoothingFactor&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the smoothing factor used to calculate the sum.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the smoothing factor used to calculate the sum.]]></Summary></Member><Member constant="true" name="TIMEWINDOW" type="string" typeValue="&quot;timeWindow&quot;"><Description><![CDATA[This constant defines the configuration parameter calculationType value]]></Description><Summary><![CDATA[This constant defines the configuration parameter calculationType value]]></Summary></Member><Member constant="true" name="SAMPLE_COUNT" type="string" typeValue="&quot;sampleCount&quot;"><Description><![CDATA[This constant defines the configuration parameter calculationType value]]></Description><Summary><![CDATA[This constant defines the configuration parameter calculationType value]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the drift calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the drift calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="PARAM_NAME" type="string" typeValue="&quot;paramName&quot;"><Description><![CDATA[This constant defines the data parameter to use for calculating Sum]]></Description><Summary><![CDATA[This constant defines the data parameter to use for calculating Sum]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_calculationType" private="true" type="string"><Description><![CDATA[Local cached calculation type]]></Description><Summary><![CDATA[Local cached calculation type]]></Summary></Member><Member name="_calculationValue" private="true" type="decimal"><Description><![CDATA[Local cached calculation value]]></Description><Summary><![CDATA[Local cached calculation value]]></Summary></Member><Member name="_smoothingFactor" private="true" type="decimal"><Description><![CDATA[Local cached smoothing factor]]></Description><Summary><![CDATA[Local cached smoothing factor]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_paramName" private="true" type="string"><Description><![CDATA[Local cached parameter name]]></Description><Summary><![CDATA[Local cached parameter name]]></Summary></Member><Member name="_mSum" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics.streaming_calculations" type="MovingSum"/></Parameters><Description><![CDATA[Local cached dictionary of the sum values, keyed by the sourceId.]]></Description><Summary><![CDATA[Local cached dictionary of the sum values, keyed by the sourceId.]]></Summary></Member><Member constant="true" name="DEFAULT_VALUE" private="true" type="decimal" typeValue="60.0d"><Description><![CDATA[Default value for calculationType]]></Description><Summary><![CDATA[Default value for calculationType]]></Summary></Member><Member constant="true" name="DEFAULT_SMOOTHING_VALUE" private="true" type="decimal" typeValue="10.0d"><Description><![CDATA[Default value for Smoothing factor]]></Description><Summary><![CDATA[Default value for Smoothing factor]]></Summary></Member><Member constant="true" name="DEFAULT_PARAM_NAME" private="true" type="string" typeValue="&quot;dValue&quot;"><Description><![CDATA[Default value for paramName]]></Description><Summary><![CDATA[Default value for paramName]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="SumBucket" private="true"><Description><![CDATA[This event object is a cache of the Bucket data used in the sum calculations.  This is only used for internal purposes, and is not exposed to the Users application.]]></Description><Summary><![CDATA[This event object is a cache of the Bucket data used in the sum calculations.  This is only used for internal purposes, and is not exposed to the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="bucketEndTimestamp" type="decimal"/><Member name="bucketStartTimestamp" type="decimal"/><Member name="eventCount" type="integer"/><Member name="sum" type="decimal"/></Type><Type category="Event" name="Bucket" private="true"><Description><![CDATA[This event object is a cache of the Bucket data used in the gradient calculations.  This is only used for internal purposes, and is not exposed to the Users application.]]></Description><Summary><![CDATA[This event object is a cache of the Bucket data used in the gradient calculations.  This is only used for internal purposes, and is not exposed to the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="bucketEndTimestamp" type="decimal"/><Member name="valueTimestamp" type="decimal"/><Member name="value" type="decimal"/><Member name="valueCount" type="integer"/><Member name="params" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Member></Type><Type category="Event" name="Delta"><Description><![CDATA[The Delta Analytic calculates a new Data event from the difference between the value on the current Data and the value on the previously received Data.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the <font face="courier" size="-1">params</font> from the input Data are copied to the delta Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Delta Analytic which takes Data events on the channel "Input1"  
// and calculates the difference/delta between this event and the last Data 
// event received (partitioned by the events "sourceId"). It publishes
// a Data event with the calculated delta value on the output channel "Output1".   
send com.industry.analytics.Analytic("Delta", ["Input1"], ["Output1"], new dictionary&ltstring,string&gt ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Delta Analytic calculates a new Data event from the difference between the value on the current Data and the value on the previously received Data.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Delta&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_lastValues" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="decimal"/></Parameters><Description><![CDATA[Local cached set of the last delta values keyed by the sourceId.]]></Description><Summary><![CDATA[Local cached set of the last delta values keyed by the sourceId.]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="Expression"><Description><![CDATA[The Expression Analytic computation generates a Data event containing the results of the Expression calculation provided for each input Data received. As well as the basic arithmetic operators for add (+), subtraction (-), multiplication (*) and division (/), the Expression Analytic also supports the modulus operator (%) and power (^) operators.

 There are also functions for rounding, trigonometry and various other use cases.

 The expression provided can use values, constants, and also the parameters of the input Data event by using the syntax "${DVALUE}", "${SVALUE}", "${XVALUE}", "${YVALUE}", "${ZVALUE}", "${TIMESTAMP}", and "${PARAM.&lt;parameter name&gt;}".

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the <font face="courier" size="-1">params</font> from the input Data are copied to the output Expression Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>expression</b></td><td>The Expression calculation that will be applied to the incoming <font face="courier" size="-1">Data</font> events</td> <td>A mathematical expression as a string (e.g. "${DVALUE} * 2")</td><td>String</td><td>True</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Operators (In order of precedence):</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Operator</th><th>Description</th></tr> <tr><td><b>|</b><small>&lt;expression&gt;</small><b>|</b></td><td>Absolute. Note: For nested use the "abs" function</td></tr> <tr><td><b>^</b></td><td>Power (left raised to the power right)</td></tr> <tr><td><b>/</b></td><td>Divide (left divided by right)</td></tr> <tr><td><b>*</b></td><td>Multiply</td></tr> <tr><td><b>%</b></td><td>Modulus (the remainder after dividing the left by the right)</td></tr> <tr><td><b>+</b></td><td>Add</td></tr> <tr><td><b>-</b></td><td>Subtract (left minus right)</td></tr> </table></dd> </dl> <dl><dt><b>Functions:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Operator</th><th>Description</th></tr> <tr><td><b>sin(x)</b></td><td>Sin (Uses Radians)</td></tr> <tr><td><b>cos(x)</b></td><td>Cos (Uses Radians)</td></tr> <tr><td><b>tan(x)</b></td><td>Tan (Uses Radians)</td></tr> <tr><td><b>asin(x)</b></td><td>Inverse Sin (Uses Radians)</td></tr> <tr><td><b>acos(x)</b></td><td>Inverse Cos (Uses Radians)</td></tr> <tr><td><b>atan(x)</b></td><td>Inverse Tan (Uses Radians)</td></tr> <tr><td><b>exp(x)</b></td><td>Exponential (e to the power x)</td></tr> <tr><td><b>ln(x)</b></td><td>Log base e</td></tr> <tr><td><b>log10(x)</b></td><td>Log base 10</td></tr> <tr><td><b>abs(x)</b></td><td>Absolute</td></tr> <tr><td><b>degToRad(x)</b></td><td>Degrees to Radians</td></tr> <tr><td><b>radToDeg(x)</b></td><td>Radians to Degrees</td></tr> <tr><td><b>round(x)</b></td><td>Rounds to nearest whole number (uses bankers round, so 0.5 rounds to 0)</td></tr> <tr><td><b>ceil(x)</b></td><td>Rounds upwards</td></tr> <tr><td><b>floor(x)</b></td><td>Rounds downwards</td></tr> <tr><td><b>rand(x)</b></td><td>Generates a random number between 0 (inclusive) and the provided number (exclusive)</td></tr> </table></dd> </dl> <dl><dt><b>Constants:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Constant</th><th>Math symbol</th><th>Description</th></tr> <tr><td><b>PI</b></td><td>&pi;</td><td>Pi = 3.14159...</td></tr> <tr><td><b>exp(1)</b></td><td>e</td><td>e = 2.71828...</td></tr> <tr><td><b>Infinity</b></td><td>&infin;</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Expression Analytic which takes Data events on the channel "Input1"  
// and performs a temperature conversion from Fahrenheit to Celsius based on the 
// dValue of each Data event received. It publishes a Data event with the results 
// of the Expression on the output channel "Output1".   
send com.industry.analytics.Analytic("Expression", ["Input1"], ["Output1"], {"expression":"(${DVALUE}-32) * 5/9"}) to "";

// Example Param usage:
// Adds myparam1 and myparam2
send com.industry.analytics.Analytic("Expression", ["Input1"], ["Output2"], {"expression":"${PARAM.myparam1} + ${PARAM.myparam2}"}) to "";

// Example constant usage:
// Sets the dValue of the output to PI/2 = 1.57...
send com.industry.analytics.Analytic("Expression", ["Input1"], ["Output2"], {"expression":"PI/2"}) to "";

// Example function usage:
// Sets the dValue of the output to sin(120 degrees) = 0.866...
send com.industry.analytics.Analytic("Expression", ["Input1"], ["Output2"], {"expression":"sin(degToRad(120))"}) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Expression Analytic computation generates a Data event containing the results of the Expression calculation provided for each input Data received. As well as the basic arithmetic operators for add (+), subtraction (-), multiplication (*) and division (/), the Expression Analytic also supports the modulus operator (%) and power (^) operators.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Expression&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="EXPRESSION" type="string" typeValue="&quot;expression&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines the expression calculation to perform on the input Data events.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines the expression calculation to perform on the input Data events.]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_expression" private="true" type="string"><Description><![CDATA[Local cached value for the expression configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the expression configuration parameter value]]></Summary></Member><Member name="_compiledExpression" private="true" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/><Description><![CDATA[The action binary tree to be run for each data event]]></Description><Summary><![CDATA[The action binary tree to be run for each data event]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="compileExpression" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Returns><Parameters><Parameter name="actions" type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter></Parameters></Parameter><Parameter name="expression" type="string"/></Parameters></Action><Action name="compileLR" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Returns><Parameters><Parameter name="actions" type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter></Parameters></Parameter><Parameter name="left" type="string"/><Parameter name="right" type="string"/><Parameter name="operator" type="string"/></Parameters></Action><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="compile" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="expression" type="string"/></Parameters></Action><Action name="compileCurly" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Returns><Parameters><Parameter name="actions" type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter></Parameters></Parameter><Parameter name="field" type="string"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="compileValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="actions" type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter></Parameters></Parameter><Parameter name="value" type="string"/></Parameters></Action></Type><Type category="Event" name="TopValuesInBucket" private="true"><Description><![CDATA[Event used to keep top 10 Modes from each bucket]]></Description><Summary><![CDATA[Event used to keep top 10 Modes from each bucket]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="tCount" private="true" type="integer"><Description><![CDATA[total count of values in dictionary to keep as cache]]></Description><Summary><![CDATA[total count of values in dictionary to keep as cache]]></Summary></Member><Member name="sKey" private="true" type="integer"><Description><![CDATA[Keep track of smallest count in cache]]></Description><Summary><![CDATA[Keep track of smallest count in cache]]></Summary></Member><Member name="topCache" private="true" type="dictionary"><Parameters><Parameter type="integer"/><Parameter type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter></Parameters><Description><![CDATA[Cache of top 10 mode for a bucket.]]></Description><Summary><![CDATA[Cache of top 10 mode for a bucket.]]></Summary></Member><Member name="maxTotalCount" type="integer"/><Action name="init" private="true" staticNature=""><Description><![CDATA[Init action.]]></Description><Summary><![CDATA[Init action.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="mTotalCount" type="integer"/></Parameters></Action><Action name="addOrUpdate" private="true" staticNature=""><Description><![CDATA[Action to add or update value to cache.]]></Description><Summary><![CDATA[Action to add or update value to cache.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="string"/><Parameter name="count" type="integer"/></Parameters></Action></Type><Type category="Event" name="BracketLocation" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="bracket" package="com.industry.analytics.streaming_calculations" type="Bracket"/><Member name="startLocation" type="integer"/></Type><Type category="Event" name="NegateHandler" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="subExpression" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Member><Action name="negate" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="d" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="create" staticNature="static "><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Returns><Parameters><Parameter name="subExpression" type="action"><Parameters><Parameter package="com.industry.analytics" type="Data"/></Parameters><Returns type="decimal"/></Parameter></Parameters></Action></Type><Type category="Event" name="MovingSum" private="true"><Description><![CDATA[This event object is a cache of the Moving sum for a sourceId used in the sum calculations.  This is only used for internal purposes, and is not exposed to the Users application.]]></Description><Summary><![CDATA[This event object is a cache of the Moving sum for a sourceId used in the sum calculations.  This is only used for internal purposes, and is not exposed to the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_bucket" type="sequence"><Parameters><Parameter package="com.industry.analytics.streaming_calculations" type="SumBucket"/></Parameters></Member><Member name="_sum" type="decimal"/><Member name="_sampleSize" type="integer"/><Member name="_bucketCount" type="integer"/><Member name="_timeWindow" type="decimal"/><Member name="_bucketTimeWindow" type="decimal"/><Member name="_bucketEventCount" type="integer"/><Action name="init" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="decimal"/><Parameter name="timestamp" type="decimal"/><Parameter name="timeWindow" type="decimal"/><Parameter name="sampleSize" type="integer"/><Parameter name="bucketCount" type="integer"/></Parameters></Action><Action name="update" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="decimal"/><Parameter name="timestamp" type="decimal"/></Parameters></Action><Action name="getSum" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/></Action></Type><Type category="Monitor" name="InternDelta" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Delta Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Delta Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternDelta" package="com.industry.analytics.streaming_calculations" type="StayAlive"/></Listens></Type><Type category="Monitor" name="ModeService" private="true"><Description><![CDATA[The ModeService monitor listens for requests to create a new Mode Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The ModeService monitor listens for requests to create a new Mode Analytic object, and creates the Analytic in a new unique context.]]></Summary><See reference="com.industry.analytics.com.industry.analytics.streaming_calculations.Mode"><Description><![CDATA[The implementation of the Mode Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternVariance" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Volatility Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Volatility Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternVariance" package="com.industry.analytics.streaming_calculations" type="StayAlive"/></Listens></Type><Type category="Monitor" name="SpreadService" private="true"><Description><![CDATA[The SpreadService monitor listens for requests to create a new Spread Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The SpreadService monitor listens for requests to create a new Spread Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.streaming_calculations" type="Spread"><Description><![CDATA[The implementation of the Spread Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="AverageService" private="true"><Description><![CDATA[The AverageService monitor listens for requests to create a new Average Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The AverageService monitor listens for requests to create a new Average Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.streaming_calculations" type="Average"><Description><![CDATA[The implementation of the Average Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="DeltaService" private="true"><Description><![CDATA[The DeltaService monitor listens for requests to create a new Delta Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The DeltaService monitor listens for requests to create a new Delta Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.streaming_calculations" type="Delta"><Description><![CDATA[The implementation of the Delta Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternSpread" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Spread Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Spread Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternSpread" package="com.industry.analytics.streaming_calculations" type="StayAlive"/></Listens></Type><Type category="Monitor" name="InternGradient" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Gradient Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Gradient Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternGradient" package="com.industry.analytics.streaming_calculations" type="StayAlive"/></Listens></Type><Type category="Monitor" name="ExpressionService" private="true"><Description><![CDATA[The ExpressionService monitor listens for requests to create a new Expression Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The ExpressionService monitor listens for requests to create a new Expression Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.streaming_calculations" type="Expression"><Description><![CDATA[The implementation of the Expression Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternMinMaxChannel" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the MinMax Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the MinMax Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternMinMaxChannel" package="com.industry.analytics.streaming_calculations" type="StayAlive"/></Listens></Type><Type category="Monitor" name="InternSum" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Sum Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Sum Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternSum" package="com.industry.analytics.streaming_calculations" type="StayAlive"/></Listens></Type><Type category="Monitor" name="InternExpression" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Expression Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Expression Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternExpression" package="com.industry.analytics.streaming_calculations" type="StayAlive"/></Listens></Type><Type category="Monitor" name="InternAverage" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Average Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Average Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternAverage" package="com.industry.analytics.streaming_calculations" type="StayAlive"/></Listens></Type><Type category="Monitor" name="SumService" private="true"><Description><![CDATA[The SumService monitor listens for requests to create a new Sum Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The SumService monitor listens for requests to create a new Sum Analytic object, and creates the Analytic in a new unique context.]]></Summary><See reference="com.industry.analytics.Sum"><Description><![CDATA[The implementation of the Sum Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="MinMaxService" private="true"><Description><![CDATA[The MinMaxService monitor listens for requests to create a new MinMax Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The MinMaxService monitor listens for requests to create a new MinMax Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.streaming_calculations" type="MinMax"><Description><![CDATA[The implementation of the MinMax Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="FFTAnalysisService" private="true"><Description><![CDATA[This monitor implementation listens for requests to create a new instance of the Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[This monitor implementation listens for requests to create a new instance of the Analytic object, and creates the Analytic in a new unique context.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="VolatilityService" private="true"><Description><![CDATA[The VolatilityService monitor listens for requests to create a new Volatility Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The VolatilityService monitor listens for requests to create a new Volatility Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.streaming_calculations" type="Volatility"><Description><![CDATA[The implementation of the Volatility Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="GradientService" private="true"><Description><![CDATA[The GradientService monitor listens for requests to create a new Gradient Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The GradientService monitor listens for requests to create a new Gradient Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.streaming_calculations" type="Gradient"><Description><![CDATA[The implementation of the Gradient Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type></Package><Package depth="../../../../" display="com.industry.analytics.detectors" name="com.industry.analytics.detectors"><Type category="Event" name="MissingDataData" private="true"><Description><![CDATA[This event object is a cache of the Missing data used in the Analytic.  This is only used for internal purposes, and is not exposed to the Users application.]]></Description><Summary><![CDATA[This event object is a cache of the Missing data used in the Analytic.  This is only used for internal purposes, and is not exposed to the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="lastTimestamp" type="decimal"/><Member name="intervalWait" type="listener"/></Type><Type category="Event" name="Spike"><Description><![CDATA[The Spike Analytic takes a set of input Data events and, using the same time weighted calculations as used in the Average and Volatility Analytics, calculates the Nominal Range as a Bollinger Band centred on the moving average and bounded by a configured multiple of the standard deviation away from the moving average.

 The analytic will also optionally output to configured channels the output from various stages of the Bollinger calculation to save duplicate calculations within a separate analytic.

 If the input Data breaks the Nominal Range then an Anomaly Data is always output. By default, no output is generated when the bounds have not been breached, but this can optionally be enabled by setting the <font face="courier" size="-1">"verbose"</font> parameter to <font face="courier" size="-1">true</font>. These Data events will be output as Computed Data events.

 In both cases, the <font face="courier" size="-1">dValue</font> set on the Data event is the number of standard deviations that the input Data <font face="courier" size="-1">dValue</font> is away from the moving average.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single Data stream name must be provided.<br>The resulting generated Data events on that stream name will either be:</ul> <li>Anomaly Data events if the Nominal Range has been breached.</li> <li>(Optionally enabled) Computed Data events if the Nominal Range has not been breached</li> </ul> In both cases, the Data events <font face="courier" size="-1">dValue</font> is set to the number of standard deviations that the input Data <font face="courier" size="-1">dValue</font> is away from the moving average. All the parameters from the input Data are copied to the output Data events.

 A set of Computed Data streams can also be optionally enabled in the Analytics outputDataName parameter by providing the channel name with the corresponding prefix. For example, specifying the outputChannelName with "stddev:MyStandardDeviationChannel", will send Data events containing the calculated standard deviation on the channel "MyStandardDeviationChannel".

 The table below defines the computed data stream type and the prefix required:<ul> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Calculation Type</th><th>Description</th><th>Output Channel Name Prefix</th></tr> <tr><td><b>Upper boundary</b></td><td>If this parameter is provided, Data events containing the calculated upper Nominal Range will be sent on the stream name provided by this parameters value</td><td><font face="courier" size="-1">upper:</font></td></tr> <tr><td><b>Lower boundary</b></td><td>If this parameter is provided, Data events containing the calculated lower Nominal Range will be sent on the stream name provided by this parameters value</td><td><font face="courier" size="-1">lower:</font></td></tr> <tr><td><b>Moving average</b></td><td>If this parameter is provided, Data events containing the calculated moving average data will be sent on the stream name provided by this parameters value</td><td><font face="courier" size="-1">avg:</font></td></tr> <tr><td><b>Standard deviation</b></td><td>If this parameter is provided, Data events containing the calculated standard deviation data will be sent on the stream name provided by this parameters value</td><td><font face="courier" size="-1">stddev:</font></td></tr> <tr><td><b>Variance</b></td><td>If this parameter is provided, Data events containing the calculated variance data will be sent on the stream name provided by this parameters value</td><td><font face="courier" size="-1">variance:</font></td></tr> </table></dd> </dd> </dl><dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>The time window (in seconds) that moving average is calculated on</td> <td>Value must be > 0</td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">60.0d</font></td></tr> <tr><td><b>standardDeviationMultiple</b></td><td>Sets the width of the Nominal Range in STDDEV</td> <td>Value must be > 0</td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">2</font></td></tr> <tr><td><b>warmUp</b></td><td>The number of events to use to calculate the inital bounds. No anomalies will be generated during calculation.</td> <td>Value must be >= 0</td><td>Integer</td><td>False</td><td><font face="courier" size="-1">5</font></td></tr> <tr><td><b>verbose</b></td><td>Enables/Disables the verbose mode so that computed values are generated as well as anomaly values.</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">false</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Spike Analytic for Data events on the channel "Input1"
// and generate an anomaly Data event on the channel "Output1" if the value goes outside
// 2.0 standard deviations away from the moving average which was calculated over 10.0 seconds 
send com.industry.analytics.Analytic("Spike", ["Input1"], ["Output1"], {"timeWindow":"10.0","standardDeviationMultiple":"2.0"} ) to "";

// Define a Spike Analytic for Data events on the channel "Input1"
// and generate an anomaly Data event on the channel "Output2" if the value goes outside   
// 2.0 standard deviations away from the moving average which was calculated over 10.0 seconds. 
// Also send the raw Data events on the "Output2" channel, the values calculated
// for the upper and lower boundaries on "UpperChannel" and "LowerChannel", and 
// the moving Average calculation on the "AverageChannel"
send com.industry.analytics.Analytic("Spike", ["Input2"], ["Output2", "upper:UpperChannel","lower:LowerChannel","avg:AverageChannel","verbose:true"], 
						{"timeWindow":"10.0","standardDeviationMultiple":"2.0"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Spike Analytic takes a set of input Data events and, using the same time weighted calculations as used in the Average and Volatility Analytics, calculates the Nominal Range as a Bollinger Band centred on the moving average and bounded by a configured multiple of the standard deviation away from the moving average.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Spike&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="TIMEWINDOW" type="string" typeValue="&quot;timeWindow&quot;"><Description><![CDATA[This constant defines the configuration parameter name for the time window (in seconds as a decimal) that moving average is calculated on]]></Description><Summary><![CDATA[This constant defines the configuration parameter name for the time window (in seconds as a decimal) that moving average is calculated on]]></Summary></Member><Member constant="true" name="STANDARD_DEVIATION_MULTIPLE" type="string" typeValue="&quot;standardDeviationMultiple&quot;"><Description><![CDATA[This constant defines the configuration parameter name for the width of the Nominal Range in STDDEVs (as a decimal value)]]></Description><Summary><![CDATA[This constant defines the configuration parameter name for the width of the Nominal Range in STDDEVs (as a decimal value)]]></Summary></Member><Member constant="true" name="VERBOSE" type="string" typeValue="&quot;verbose&quot;"><Description><![CDATA[This constant defines the configuration parameter name for enabling Verbose mode on/off.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name for enabling Verbose mode on/off.]]></Summary></Member><Member constant="true" name="WARMUP" type="string" typeValue="&quot;warmUp&quot;"/><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_movingAverageChannel" private="true" type="string"><Description><![CDATA[Local cached output Data name for the optionally enabled moving Average calculations Data stream.]]></Description><Summary><![CDATA[Local cached output Data name for the optionally enabled moving Average calculations Data stream.]]></Summary></Member><Member name="_standardDeviationChannel" private="true" type="string"><Description><![CDATA[Local cached output Data name for the optionally enabled Standard Deviation calculations Data stream.]]></Description><Summary><![CDATA[Local cached output Data name for the optionally enabled Standard Deviation calculations Data stream.]]></Summary></Member><Member name="_lowerBoundaryChannel" private="true" type="string"><Description><![CDATA[Local cached output Data name for the optionally enabled Lower Boundary calculations Data stream.]]></Description><Summary><![CDATA[Local cached output Data name for the optionally enabled Lower Boundary calculations Data stream.]]></Summary></Member><Member name="_upperBoundaryChannel" private="true" type="string"><Description><![CDATA[Local cached output Data name for the optionally enabled Upper Boundary band calculations Data stream.]]></Description><Summary><![CDATA[Local cached output Data name for the optionally enabled Upper Boundary band calculations Data stream.]]></Summary></Member><Member name="_varianceChannel" private="true" type="string"><Description><![CDATA[Local cached output Data name for the optionally enabled Variance calculations Data stream.]]></Description><Summary><![CDATA[Local cached output Data name for the optionally enabled Variance calculations Data stream.]]></Summary></Member><Member name="_bollingers" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="TimeWeightedBollinger"/></Parameters><Description><![CDATA[Local cached previous Bollinger band data for each incoming sourceId]]></Description><Summary><![CDATA[Local cached previous Bollinger band data for each incoming sourceId]]></Summary></Member><Member name="_verbose" private="true" type="boolean"><Description><![CDATA[Local cached boolean parameter that indicates raw data should be sent on the output Data stream as well as anomalies.]]></Description><Summary><![CDATA[Local cached boolean parameter that indicates raw data should be sent on the output Data stream as well as anomalies.]]></Summary></Member><Member name="_timeWindow" private="true" type="decimal"><Description><![CDATA[Local cached value for the defined timewindow]]></Description><Summary><![CDATA[Local cached value for the defined timewindow]]></Summary></Member><Member name="_standardDeviationMultiple" private="true" type="decimal"><Description><![CDATA[Local cached value for the defined Nominal Range width]]></Description><Summary><![CDATA[Local cached value for the defined Nominal Range width]]></Summary></Member><Member name="_sendStandardDeviation" private="true" type="boolean"><Description><![CDATA[Local cached boolean value that indicates whether or not to generate a Data with the standard deviation data]]></Description><Summary><![CDATA[Local cached boolean value that indicates whether or not to generate a Data with the standard deviation data]]></Summary></Member><Member name="_sendMovingAverage" private="true" type="boolean"><Description><![CDATA[Local cached boolean value that indicates whether or not to generate a Data with the moving average data]]></Description><Summary><![CDATA[Local cached boolean value that indicates whether or not to generate a Data with the moving average data]]></Summary></Member><Member name="_sendLowerBoundary" private="true" type="boolean"><Description><![CDATA[Local cached boolean value that indicates whether or not to generate a Data with the Lower Boundary data]]></Description><Summary><![CDATA[Local cached boolean value that indicates whether or not to generate a Data with the Lower Boundary data]]></Summary></Member><Member name="_sendUpperBoundary" private="true" type="boolean"><Description><![CDATA[Local cached boolean value that indicates whether or not to generate a Data with the Upper Boundary data]]></Description><Summary><![CDATA[Local cached boolean value that indicates whether or not to generate a Data with the Upper Boundary data]]></Summary></Member><Member name="_sendVariance" private="true" type="boolean"><Description><![CDATA[Local cached boolean value that indicates whether or not to generate a Data with the Variance data]]></Description><Summary><![CDATA[Local cached boolean value that indicates whether or not to generate a Data with the Variance data]]></Summary></Member><Member name="_warmUpCount" private="true" type="integer"><Description><![CDATA[Local cached param value determining the warmup period]]></Description><Summary><![CDATA[Local cached param value determining the warmup period]]></Summary></Member><Member name="_eventCounts" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="integer"/></Parameters><Description><![CDATA[Used for the warmUp period calculation for each of sourceId]]></Description><Summary><![CDATA[Used for the warmUp period calculation for each of sourceId]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.

 The following formulaes are implemented:

 Moving average: Standard formulation: ma_n = a * x_n + (1 - a) * ma_n-1 = ma_n-1 + a * (x_n - ma_n-1) a = (1 - e^-u) u = (t_n - t_n-1) / T

 Re-arrange for efficiency: ma_n = (1 - a) * x_n + a * ma_n-1 = x_n + a * (ma_n-1 - x_n) a = e^-u u = (t_n - t_n-1) / T

 Variance: S_n  = a * S_n-1 + (1 - a)(x_n - ma_n)(x_n - ma_n-1) = a * (S_n-1 + (1 - a)(x_n - ma_n-1)^2)

 Standard deviation: StDev = S_n^0.5]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type><Type category="Event" name="CorridorData" private="true"><Description><![CDATA[This event object is a cache of the Corridor data used in the Analytic.  This is only used for internal purposes, and is not exposed to the Users application.]]></Description><Summary><![CDATA[This event object is a cache of the Corridor data used in the Analytic.  This is only used for internal purposes, and is not exposed to the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="lastValue" type="decimal"/><Member name="lastTimestamp" type="decimal"/><Member name="duration" type="decimal"/><Member name="repeats" type="integer"/></Type><Type category="Event" name="PeerAnalysis"><Description><![CDATA[The Peer Analysis Analytic calculates the "normal" range of Data events and detects if incoming Data events are outside that range. It does this by calculating the spread between the raw Data events being received and a moving average calculated for that same set of Data.  It then generates an anomaly Data event if the the calculated Spread is breaches the defined threshold value. This Analytic utilizes the Average, Spread and Threshold analytics internally, so the same set of configuration parameters are available in this Analytic. This allows the moving Average timewindow to be defined, and the threshold value can either look for rising breaches, falling breaches or every time a threshold is passed in both directions. These can either be reported immediately or, to ignore spikes, after a set duration based on the Data timestamps.

 In addition the computation can output a data event for up to a set maximum number of repeats (multiples of the duration) whilst the breach continues. This latter functionality is not applicable for the bi-directional breach detection as after the duration, the breached side is now considered the valid side and a breach reported for crossing the threshold in the opposite direction.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Anomaly type are generated.  All the <font face="courier" size="-1">params</font> from the breaching input Data are copied to the anomaly Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window to calculate the moving average over</td> <td>Stringified decimal <font face="courier" size="-1">>0.0d</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">60.0d</font></td></tr> <tr><td><b>threshold</b></td><td>Defines the threshold value that is used to detect breaches</td> <td>Stringified decimal</td><td>Decimal</td><td>True</td><td></td></tr> <tr><td><b>direction</b></td><td>Defines whether to check for crossing, falling or rising threshold breaches</td> <td><font face="courier" size="-1">"crossing"</font>, <font face="courier" size="-1">"falling"</font> or <font face="courier" size="-1">"rising"</font>. <b>Note:</b> These values are case-insensitive</td> <td>String</td><td>False</td><td><font face="courier" size="-1">'crossing'</font></td></tr> <tr><td><b>duration</b></td><td>Defines how long (in seconds) the threshold may be breached before an Anomaly Data is generated. If a value of <font face="courier" size="-1"><=0.0d</font> is defined, the Anomaly Data is generated immediately.</td> <td>Stringified Decimal <font face="courier" size="-1">>= 0.0d</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">0.0d</font></td></tr> <tr><td><b>repeats</b></td><td>Defines the maximum number of times an Anomaly Data is generated for the breach before stopping checking. A value of <font face="courier" size="-1">0</font> indicates unlimited repeats. </td> <td>Stringified Integer <font face="courier" size="-1">>= 0</font></td><td>Integer</td><td>False</td><td><font face="courier" size="-1">1</font></td> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a PeerAnalysis Analytic for Data events on the channel "Input1"
// and generate an anomaly Data event on the channel "Output1" if the difference 
// between the current Data event and the moving average of Data events
// goes over the defined threshold value of 10.0
send com.industry.analytics.Analytic("PeerAnalysis", ["Input1"], ["Output1"], {"threshold":"10.0"} ) to "";

// Define a PeerAnalysis Analytic for Data events on the channel "Input2"
// and generate an anomaly Data event on the channel "Output2" if the difference 
// between the current Data event and the moving average, calculated over a 
// 30 second timewindow, of Data events goes over the defined threshold value of 10.0
send com.industry.analytics.Analytic("PeerAnalysis", ["Input2"], ["Output2"], {"threshold":"10.0","timeWindow":"30.0"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Peer Analysis Analytic calculates the "normal" range of Data events and detects if incoming Data events are outside that range. It does this by calculating the spread between the raw Data events being received and a moving average calculated for that same set of Data.  It then generates an anomaly Data event if the the calculated Spread is breaches the defined threshold value. This Analytic utilizes the Average, Spread and Threshold analytics internally, so the same set of configuration parameters are available in this Analytic. This allows the moving Average timewindow to be defined, and the threshold value can either look for rising breaches, falling breaches or every time a threshold is passed in both directions. These can either be reported immediately or, to ignore spikes, after a set duration based on the Data timestamps.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;PeerAnalysis&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="CHANNEL_PREFIX" private="true" type="string" typeValue="&quot;__internalChannel_PEER&quot;"><Description><![CDATA[This constant defines the prefix used for the internal channel names.]]></Description><Summary><![CDATA[This constant defines the prefix used for the internal channel names.]]></Summary></Member><Member name="_inputDataName" private="true" type="string"><Description><![CDATA[Local cached input Data name]]></Description><Summary><![CDATA[Local cached input Data name]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Member name="_config" package="com.industry.analytics" private="true" type="Analytic"><Description><![CDATA[Local cached copy of the original configuration provided for the Peer Analysis Analytic.]]></Description><Summary><![CDATA[Local cached copy of the original configuration provided for the Peer Analysis Analytic.]]></Summary></Member><Member name="_initCompletePeerAnalysis" private="true" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[Local cached closure for the initialisation of the Peer Analysis Analytic.]]></Description><Summary><![CDATA[Local cached closure for the initialisation of the Peer Analysis Analytic.]]></Summary></Member><Member name="_averageAnalyticInterface" package="com.industry.analytics" private="true" type="AnalyticInterface"><Description><![CDATA[Local cached AnalyticInterface object for the internally created Average Analytic.]]></Description><Summary><![CDATA[Local cached AnalyticInterface object for the internally created Average Analytic.]]></Summary></Member><Member name="_spreadAnalyticInterface" package="com.industry.analytics" private="true" type="AnalyticInterface"><Description><![CDATA[Local cached AnalyticInterface object for the internally created Spread Analytic.]]></Description><Summary><![CDATA[Local cached AnalyticInterface object for the internally created Spread Analytic.]]></Summary></Member><Member name="_thresholdAnalyticInterface" package="com.industry.analytics" private="true" type="AnalyticInterface"><Description><![CDATA[Local cached AnalyticInterface object for the internally created Threshold Analytic.]]></Description><Summary><![CDATA[Local cached AnalyticInterface object for the internally created Threshold Analytic.]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="onDelete" private="true" staticNature=""><Description><![CDATA[Optional action that is called on deleting the Analytic instance. This action should clear any local state/listeners that have been created by the Analytic instance. This is called internally by the Analytic Object, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[Optional action that is called on deleting the Analytic instance. This action should clear any local state/listeners that have been created by the Analytic instance. This is called internally by the Analytic Object, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_initCompleteAverage" private="true" staticNature=""><Description><![CDATA[This action defines the completion handler for the for Average Analytic]]></Description><Summary><![CDATA[This action defines the completion handler for the for Average Analytic]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="success" type="boolean"/><Parameter name="tInterface" package="com.industry.analytics" type="AnalyticInterface"/></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the Analytic instance back to its initialisation state. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the Analytic instance back to its initialisation state. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_initCompleteThreshold" private="true" staticNature=""><Description><![CDATA[Init complete for Threshold Analytic]]></Description><Summary><![CDATA[Init complete for Threshold Analytic]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="success" type="boolean"/><Parameter name="tInterface" package="com.industry.analytics" type="AnalyticInterface"/></Parameters></Action><Action name="_initCompleteSpread" private="true" staticNature=""><Description><![CDATA[This action defines the completion handler for the for Spread Analytic]]></Description><Summary><![CDATA[This action defines the completion handler for the for Spread Analytic]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="success" type="boolean"/><Parameter name="tInterface" package="com.industry.analytics" type="AnalyticInterface"/></Parameters></Action></Type><Type category="Event" name="ThresholdData" private="true"><Description><![CDATA[This event object is a cache of the Threshold data used in the Analytic.  This is only used for internal purposes, and is not exposed to the Users application.]]></Description><Summary><![CDATA[This event object is a cache of the Threshold data used in the Analytic.  This is only used for internal purposes, and is not exposed to the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="lastValue" type="decimal"/><Member name="lastTimestamp" type="decimal"/><Member name="duration" type="decimal"/><Member name="repeats" type="integer"/></Type><Type category="Event" name="Corridor"><Description><![CDATA[The Corridor Analytic generates an anomaly Data if a threshold range is breached. The computation looks for data entering or exiting the corridor. These can either be reported immediately or, to ignore spikes, after a set duration based on the Data timestamps.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd>The stream will always provide the data to be compared to the threshold and is mandatory.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Anomaly type are generated.  All the <font face="courier" size="-1">params</font> from the breaching input Data are copied to the anomaly Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>upperThreshold</b></td><td>Defines the upper threshold value that is used to detect breaches</td> <td>Stringified decimal</td><td>Decimal</td><td>True</td><td><font face="courier" size="-1">0.0d</font></td></tr> <tr><td><b>lowerThreshold</b></td><td>Defines the lower threshold value that is used to detect breaches</td> <td>Stringified decimal</td><td>Decimal</td><td>True</td><td><font face="courier" size="-1">0.0d</font></td></tr> <tr><td><b>zone</b></td><td>Defines whether to check for data inside or outside the corridor</td> <td><font face="courier" size="-1">"inside"</font>, <font face="courier" size="-1">"outside"</font>. <b>Note:</b> These values are case-insensitive</td> <td>String</td><td>True</td><td></td></tr> <tr><td><b>duration</b></td><td>Defines how long (in seconds) the threshold may be breached before an Anomaly Data is generated. If a value of <font face="courier" size="-1"><=0.0d</font> is defined, the Anomaly Data is generated immediately.</td> <td>Stringified Decimal <font face="courier" size="-1">>= 0.0d</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">0.0d</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a threshold Corridor for Data events on the channel "Input1"
// and generate an anomaly Data event on the channel "Output1" if the
// value is outside the range 10 to 30
send com.industry.analytics.Analytic("Corridor", ["Input1"], ["Output1"], {"lowerThreshold":"10","upperThreshold":"30", "zone":"outside"} ) to "";
  
// Define a threshold Corridor for Data events on the channel "Input2"
// and generate an anomaly Data event on the channel "Output2" if the 
// value is goes inside the range 10 to 30
send com.industry.analytics.Analytic("Corridor", ["Input2"], ["Output2"], {"lowerThreshold":"10","upperThreshold":"30", "zone":"inside"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Corridor Analytic generates an anomaly Data if a threshold range is breached. The computation looks for data entering or exiting the corridor. These can either be reported immediately or, to ignore spikes, after a set duration based on the Data timestamps.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Corridor&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="ZONE" type="string" typeValue="&quot;zone&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the zone of the threshold check]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the zone of the threshold check]]></Summary></Member><Member constant="true" name="DURATION" type="string" typeValue="&quot;duration&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the duration the threshold can be breached before an Anomaly data event is generated.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the duration the threshold can be breached before an Anomaly data event is generated.]]></Summary></Member><Member constant="true" name="UPPER_THRESHOLD" type="string" typeValue="&quot;upperThreshold&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the upper threshold value to check for.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the upper threshold value to check for.]]></Summary></Member><Member constant="true" name="LOWER_THRESHOLD" type="string" typeValue="&quot;lowerThreshold&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the lower threshold value to check for.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the lower threshold value to check for.]]></Summary></Member><Member constant="true" name="OUTSIDE" type="string" typeValue="&quot;outside&quot;"><Description><![CDATA[This constant defines the value for setting the <font face="courier" size="-1">"zone"</font> configuration parameter to use exiting the threshold corridor check.]]></Description><Summary><![CDATA[This constant defines the value for setting the <font face="courier" size="-1">"zone"</font> configuration parameter to use exiting the threshold corridor check.]]></Summary></Member><Member constant="true" name="INSIDE" type="string" typeValue="&quot;inside&quot;"><Description><![CDATA[This constant defines the value for setting the <font face="courier" size="-1">"zone"</font> configuration parameter to use entering the threshold corridor check.]]></Description><Summary><![CDATA[This constant defines the value for setting the <font face="courier" size="-1">"zone"</font> configuration parameter to use entering the threshold corridor check.]]></Summary></Member><Member name="_breaches" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics.detectors" type="CorridorData"/></Parameters><Description><![CDATA[Local cached dictionary of the threshold breach values, keyed by the sourceId.]]></Description><Summary><![CDATA[Local cached dictionary of the threshold breach values, keyed by the sourceId.]]></Summary></Member><Member name="_lastDataValues" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[Dictionary of the last data values. Needed when the thresholds are changed.]]></Description><Summary><![CDATA[Dictionary of the last data values. Needed when the thresholds are changed.]]></Summary></Member><Member name="_position" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[Local cached value for the position of data value wrt corridor]]></Description><Summary><![CDATA[Local cached value for the position of data value wrt corridor]]></Summary></Member><Member name="_inputDataName" private="true" type="string"><Description><![CDATA[Local cached input Data names]]></Description><Summary><![CDATA[Local cached input Data names]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_zoneParam" private="true" type="string"><Description><![CDATA[Local cached value for the zone configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the zone configuration parameter value]]></Summary></Member><Member name="_duration" private="true" type="decimal"><Description><![CDATA[Local cached value for the duration configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the duration configuration parameter value]]></Summary></Member><Member name="_upperThreshold" private="true" type="decimal"><Description><![CDATA[Local cached value for the upper threshold configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the upper threshold configuration parameter value]]></Summary></Member><Member name="_lowerThreshold" private="true" type="decimal"><Description><![CDATA[Local cached value for the lower threshold configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the lower threshold configuration parameter value]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="_createThresholdData" private="true" staticNature=""><Description><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_sendBreach" private="true" staticNature=""><Description><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Event" name="BaselineCalculation" private="true"><Description><![CDATA[Event for keeping track of the offsetPeriod variance calculation. However, beyond the variance we also need to keep track of the timestamp of the first event we received to know when to finish.]]></Description><Summary><![CDATA[Event for keeping track of the offsetPeriod variance calculation. However, beyond the variance we also need to keep track of the timestamp of the first event we received to know when to finish.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="initialTimestamp" type="decimal"/><Member name="twv" package="com.industry.analytics" type="TimeWeightedVariance"/><Action name="init" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/><Parameter name="timeWindow" type="decimal"/></Parameters></Action><Action name="update" staticNature=""><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Event" name="Drift"><Description><![CDATA[The Drift Analytic monitors a sources <font face="courier" size="-1">dValue</font> to ensure that it doesn't go outside of a set boundary or pair of boundaries. If a boundary is breached then an anomaly Data is generated. Once set these boundaries are fixed, unlike, for example, a Bollinger Band which will mutate along with a slow moving drift in values.

 The boundary values are based upon a moving average taken over a defined initial period for the data source. The boundaries will then be set at a number of standard deviations, a given value, or a percentage above and/or below the final moving average value.

 The moving average and standard deviation are calculated using the same formulas as in the Volatility Analytic.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the <font face="courier" size="-1">params</font> from the Data that breaches the threshold are copied to the anomaly Data.<br></dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>offset</b><td>The amount of 'drift' allowed relative to the mean. The value applied depends on the offsetType used</td> <td><font face="courier" size="-1">>0.0d</font></td></td><td>decimal</td><td>False</td><td>2.0d</td></tr> <tr><td><b>offsetType</b><td>The type of the value that is used as the offset</td> <td><font face="courier" size="-1">"stddev", "absolute", "percentage"</font></td></td><td>string</td><td>False</td><td><font face="courier" size="-1">"stddev"</font></td></tr> <tr><td><b>offsetPeriod</b><td>Defines the period over which the initial moving average is calculated.</td> <td>Stringified decimal <font face="courier" size="-1">>0.0d</font></td><td>Decimal</td><td>False</td><td>60.0</td></tr> <tr><td><b>lowerOffsetOverride</b><td>If this value is provided, it overrides the value calculated for the lower boundary.</td> <td><font face="courier" size="-1">>0.0d</font></td><td>Decimal</td><td>False</td><td>The <font face="courier" size="-1">offset</font> value</td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Drift calculations are partitioned based on the <font face="courier" size="-1">sourceId</font> of the <font face="courier" size="-1">Data</font> events</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Drift Analytic to monitor Data events on the channel "Input1"
// and generate a boundary based on a value 1.2 standard deviations away from the moving average
// for that Data stream over a 30 second window. An anomaly Data event will be 
// generated on the channel "Output1" if the value goes outside that range.
send com.industry.analytics.Analytic("Drift", ["Input3"], ["Output3"], {"offset":"1.2", "offsetPeriod":"30"}) to "";

// Define a Drift Analytic to monitor Data events on the channel "Input2"
// and generate a boundary based on a fixed value away from the moving average
// for that Data stream over an initial 60 second window. An anomaly Data event 
// will be generated  on the channel "Output2" if the value goes outside that range.
send com.industry.analytics.Analytic("Drift", ["Input3"], ["Output3"], {"offset":"60", "offsetType":"absolute", "offsetPeriod":"60"}) to "";
   
// Define a Drift Analytic to monitor Data events on the channel "Input3"
// and generate a boundary based on a value 30% away from the moving average
// for that Data stream over a 20 second window. An anomaly Data event will be 
// generated on the channel "Output3" if the value goes outside that range.
send com.industry.analytics.Analytic("Drift", ["Input3"], ["Output3"], {"offset":"30", "offsetType":"percentage", "offsetPeriod":"20"}) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Drift Analytic monitors a sources <font face="courier" size="-1">dValue</font> to ensure that it doesn't go outside of a set boundary or pair of boundaries. If a boundary is breached then an anomaly Data is generated. Once set these boundaries are fixed, unlike, for example, a Bollinger Band which will mutate along with a slow moving drift in values.]]></Summary><See reference="com.industry.analytics.Volatility"><Description><![CDATA[The Volatility Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Drift&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="OFFSET" type="string" typeValue="&quot;offset&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the boundary offset value.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the boundary offset value.]]></Summary></Member><Member constant="true" name="OFFSET_TYPE" type="string" typeValue="&quot;offsetType&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the type of the offset value defined.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the type of the offset value defined.]]></Summary></Member><Member constant="true" name="LOWER_OFFSET_OVERRIDE" type="string" typeValue="&quot;lowerOffsetOverride&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the overridden lower offset value, if used.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the overridden lower offset value, if used.]]></Summary></Member><Member constant="true" name="OFFSET_PERIOD" type="string" typeValue="&quot;offsetPeriod&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the period over which the initial boundary moving average is calculated.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the period over which the initial boundary moving average is calculated.]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the drift calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the drift calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="OFFSET_ABSOLUTE" private="true" type="string" typeValue="&quot;absolute&quot;"><Description><![CDATA[Constant defining whether the given offset is a value.]]></Description><Summary><![CDATA[Constant defining whether the given offset is a value.]]></Summary></Member><Member constant="true" name="OFFSET_PERCENTAGE" private="true" type="string" typeValue="&quot;percentage&quot;"><Description><![CDATA[Constant defining whether the given offset is a percentage.]]></Description><Summary><![CDATA[Constant defining whether the given offset is a percentage.]]></Summary></Member><Member constant="true" name="OFFSET_STD_DEV" private="true" type="string" typeValue="&quot;stddev&quot;"><Description><![CDATA[Constant defining whether the given offset is a standard deviation multiple.]]></Description><Summary><![CDATA[Constant defining whether the given offset is a standard deviation multiple.]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_calculations" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics.detectors" type="BaselineCalculation"/></Parameters><Description><![CDATA[Local cached dictionary of the baseline calculations in progress, keyed by the sourceId.]]></Description><Summary><![CDATA[Local cached dictionary of the baseline calculations in progress, keyed by the sourceId.]]></Summary></Member><Member name="_boundaries" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics.detectors" type="Boundaries"/></Parameters><Description><![CDATA[Local cached dictionary of the calculated baselines in use, keyed by the sourceId.]]></Description><Summary><![CDATA[Local cached dictionary of the calculated baselines in use, keyed by the sourceId.]]></Summary></Member><Member name="_offset" private="true" type="decimal"><Description><![CDATA[Local cached value for the baseline configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the baseline configuration parameter value]]></Summary></Member><Member name="_offsetType" private="true" type="string"><Description><![CDATA[Local cached value for the baseline configuration parameter type]]></Description><Summary><![CDATA[Local cached value for the baseline configuration parameter type]]></Summary></Member><Member name="_lowerOffsetOverride" private="true" type="decimal"><Description><![CDATA[Local cached value for the baseline2 configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the baseline2 configuration parameter value]]></Summary></Member><Member name="_offsetPeriod" private="true" type="decimal"><Description><![CDATA[Local cached value for the offsetPeriod configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the offsetPeriod configuration parameter value]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="_checkBoundaries" private="true" staticNature=""><Description><![CDATA[This helper action checks the dValue of a Data event against the values in the Boundaries event. If the dataIn dValue breaches one of the boundaries then an anomaly Data event is sent containing the breaching value. A breach occurs if dataIn.dValue > offset.upper or dataIn.dValue < offset.lower. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action checks the dValue of a Data event against the values in the Boundaries event. If the dataIn dValue breaches one of the boundaries then an anomaly Data event is sent containing the breaching value. A breach occurs if dataIn.dValue > offset.upper or dataIn.dValue < offset.lower. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The Data event being examined for a boundary breach.]]></Description></Parameter><Parameter name="boundary" package="com.industry.analytics.detectors" type="Boundaries"><Description><![CDATA[The boundaries being examined against for a breach.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.

 The action either progresses the initial baseline moving average calculation, or checks to see whether the incoming Data has breaches the boundary values.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_setBoundaries" private="true" staticNature=""><Description><![CDATA[This helper action creates a Boundaries event based upon the offset value and type configuration parameters and the calculated moving average and standard deviation as appropriate. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action creates a Boundaries event based upon the offset value and type configuration parameters and the calculated moving average and standard deviation as appropriate. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics.detectors" type="Boundaries"><Description><![CDATA[A Boundaries event based on the input parameters and var.]]></Description></Returns><Parameters><Parameter name="var" package="com.industry.analytics" type="TimeWeightedVariance"><Description><![CDATA[A time weighted variance calculation event.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="Boundaries" private="true"><Description><![CDATA[Storage event for holding the boundaries to be used for comparison. Populated after the initial offsetPeriod value.]]></Description><Summary><![CDATA[Storage event for holding the boundaries to be used for comparison. Populated after the initial offsetPeriod value.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="lower" type="decimal"/><Member name="upper" type="decimal"/></Type><Type category="Event" name="MissingData"><Description><![CDATA[The MissingData Analytic computation generates an Anomaly type of Data when no data is being received on the input channel. The period is a multiple of either a fixed time period in the configuration or a weighted average calculated from the timings of events which have been received. The computation will give out a set number of repeated anomalies after each subsequent multiple of the timeout period and can also calculate the timeout based for each individual source or calculated across all the sources combined.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Anomaly type are generated. No params are populated as by definition there are no input Mreasures when the output is generated.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>interval</b></td><td>Defines the time window that data must be received within. The actual units are based on the value of the <font face="courier" size="-1">intervalType</font> parameter</td> <td>Stringified decimal value <font face="courier" size="-1">> 0.0d</font></td><td>Decimal</td> <td>False</td><td>4.0d</td></tr> <tr><td><b>intervalType</b></td><td>Defines the unit type of the <font face="courier" size="-1">interval</font> parameter.</td> <td><font face="courier" size="-1">"seconds"</font> or <font face="courier" size="-1">"stddev"</font></font></td><td>String</td> <td>False</td><td><font face="courier" size="-1">"stddev"</font></td></tr> <tr><td><b>repeats</b></td><td>Defines the number of times an Anomaly Data is generated for missing data before stopping checking until another event for that sourceId is received again.</td> <td>Stringified integer value <font face="courier" size="-1">>= 0</font></td><td>Integer</td> <td>False</td><td><font face="courier" size="-1">1</font></td></tr> <tr><td><b>timeFactor</b></td><td>Defines a scaling factor for the time window. This is applied regardless of if the EWMA or a fixed time period is configured</td> <td>Stringified decimal value <font face="courier" size="-1">> 0</font></td><td>Decimal</td> <td>False</td><td><font face="courier" size="-1">3</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Missing Data calculations are partitioned based on the sourceId parameter of the input data stream</td> <td><font face="courier" size="-1">true</font> or <font face="courier" size="-1">false</font></td><td>Boolean</td><td>False</td><td><font face="courier" size="-1">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a MissingData Analytic for Data events on the channel "Input1"
// and generate an anomaly Data event on the channel "Output1" if another event
// from that sourceId has not been received on the input channel within a 10 second time period
send com.industry.analytics.Analytic("MissingData", ["Input1"], ["Output1"], {"interval":"10.0"} ) to "";

// Define a MissingData Analytic for Data events on the channel "Input2"
// and generate an anomaly Data event on the channel "Output2" if another event
// from that sourceId has not been received on the input channel within a time period calculated from the  
// exponentially weighted moving average (EWMA) time between previous events on the same stream
send com.industry.analytics.Analytic("MissingData", ["Input2"], ["Output2"], new dictionary&ltstring,string&gt ) to "";
                                          
// Define a MissingData Analytic for Data events on the channel "Input3"
// and generate an anomaly Data event on the channel "Output3" if another event 
// has not been received for the ANY sourceId on the input channel within a 10 second time period 
send com.industry.analytics.Analytic("MissingData", ["Input3"], ["Output3"], {"interval":"10.0", "bySourceId":"false"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The MissingData Analytic computation generates an Anomaly type of Data when no data is being received on the input channel. The period is a multiple of either a fixed time period in the configuration or a weighted average calculated from the timings of events which have been received. The computation will give out a set number of repeated anomalies after each subsequent multiple of the timeout period and can also calculate the timeout based for each individual source or calculated across all the sources combined.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;MissingData&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="REPEATS" type="string" typeValue="&quot;repeats&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the number of repeating times data is missed before terminating the check.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the number of repeating times data is missed before terminating the check.]]></Summary></Member><Member constant="true" name="INTERVAL" type="string" typeValue="&quot;interval&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the time window value that data must be received within.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the time window value that data must be received within.]]></Summary></Member><Member constant="true" name="INTERVAL_TYPE" type="string" typeValue="&quot;intervalType&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the type of the interval value defined.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the type of the interval value defined.]]></Summary></Member><Member constant="true" name="TIMEFACTOR" type="string" typeValue="&quot;timeFactor&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies a scaling factor for the time window.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies a scaling factor for the time window.]]></Summary></Member><Member constant="true" name="BY_SOURCEID" type="string" typeValue="&quot;bySourceId&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether or not the missing data calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether or not the missing data calculation will be partitioned by the <font face="courier" size="-1">sourceId</font>]]></Summary></Member><Member constant="true" name="INTERVAL_SECONDS" private="true" type="string" typeValue="&quot;seconds&quot;"><Description><![CDATA[Constant defining whether the given interval is defined in seconds.]]></Description><Summary><![CDATA[Constant defining whether the given interval is defined in seconds.]]></Summary></Member><Member constant="true" name="INTERVAL_STD_DEV" private="true" type="string" typeValue="&quot;stddev&quot;"><Description><![CDATA[Constant defining whether the given interval is a standard deviation multiple.]]></Description><Summary><![CDATA[Constant defining whether the given interval is a standard deviation multiple.]]></Summary></Member><Member constant="true" name="CONST_INTERNAL_ALL_SOURCES" private="true" type="string" typeValue="&quot;__internalSourceIdWildcard&quot;"><Description><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Description><Summary><![CDATA[This constant defines the internal name used to define "all sourceIds" used when not partitioning by sourceId.]]></Summary></Member><Member name="_timeouts" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="decimal"/></Parameters><Description><![CDATA[Local cached set of the time windows, keyed by the sourceId. If the time window is based on the combined set of sources, the key used is the constant <font face="courier" size="-1">COMBINED</font> (I.E. "c").]]></Description><Summary><![CDATA[Local cached set of the time windows, keyed by the sourceId. If the time window is based on the combined set of sources, the key used is the constant <font face="courier" size="-1">COMBINED</font> (I.E. "c").]]></Summary></Member><Member name="_data" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics.detectors" type="MissingDataData"/></Parameters><Description><![CDATA[Local cached set of the missing data configuration, keyed by the sourceId. If the time window is based on the combined set of sources, the key used is the constant <font face="courier" size="-1">COMBINED</font> (I.E. "c").]]></Description><Summary><![CDATA[Local cached set of the missing data configuration, keyed by the sourceId. If the time window is based on the combined set of sources, the key used is the constant <font face="courier" size="-1">COMBINED</font> (I.E. "c").]]></Summary></Member><Member name="_missingCounts" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="integer"/></Parameters><Description><![CDATA[Local cached set of the number of times data has been missed, keyed by the sourceId. If the time window is based on the combined set of sources, the key used is the constant <font face="courier" size="-1">COMBINED</font> (I.E. "c").]]></Description><Summary><![CDATA[Local cached set of the number of times data has been missed, keyed by the sourceId. If the time window is based on the combined set of sources, the key used is the constant <font face="courier" size="-1">COMBINED</font> (I.E. "c").]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_repeats" private="true" type="integer"><Description><![CDATA[Local cached value for the repeats configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the repeats configuration parameter value]]></Summary></Member><Member name="_bySourceId" private="true" type="boolean"><Description><![CDATA[Local cached value for if we are partioning by the sourceId]]></Description><Summary><![CDATA[Local cached value for if we are partioning by the sourceId]]></Summary></Member><Member name="_interval" private="true" type="decimal"><Description><![CDATA[Local cached value for the interval configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the interval configuration parameter value]]></Summary></Member><Member name="_intervalType" private="true" type="string"><Description><![CDATA[Local cached value for the interval type configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the interval type configuration parameter value]]></Summary></Member><Member name="_timeFactor" private="true" type="decimal"><Description><![CDATA[Local cached value for the timeFactor configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the timeFactor configuration parameter value]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_setupWaitListener" private="true" staticNature=""><Description><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="interval" type="decimal"/><Parameter name="data" package="com.industry.analytics.detectors" type="MissingDataData"/><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Event" name="Threshold"><Description><![CDATA[The Threshold Analytic generates an anomaly Data event if a threshold is breached. The computation can either look for rising breaches, falling breaches or every time a threshold is passed in both directions. These can either be reported immediately or, to ignore spikes, after a set duration based on the Data timestamps.

 In addition the computation can output a data event for up to a set maximum number of repeats (multiples of the duration) whilst the breach continues. This latter functionality is not applicable for the bi-directional breach detection as after the duration, the breached side is now considered the valid side and a breach reported for crossing the threshold in the opposite direction.

 <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Anomaly type are generated.  All the <font face="courier" size="-1">params</font> from the breaching input Data are copied to the anomaly Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>threshold</b></td><td>Defines the threshold value that is used to detect breaches</td> <td>Stringified decimal</td><td>Decimal</td><td>True</td><td></td></tr> <tr><td><b>direction</b></td><td>Defines whether to check for crossing, falling or rising threshold breaches</td> <td><font face="courier" size="-1">"crossing"</font>, <font face="courier" size="-1">"falling"</font> or <font face="courier" size="-1">"rising"</font>. <b>Note:</b> These values are case-insensitive</td> <td>String</td><td>False</td><td><font face="courier" size="-1">'crossing'</font></td></tr> <tr><td><b>duration</b></td><td>Defines how long (in seconds) the threshold may be breached before an Anomaly Data is generated. If a value of <font face="courier" size="-1"><=0.0d</font> is defined, the Anomaly Data is generated immediately.</td> <td>Stringified Decimal <font face="courier" size="-1">>= 0.0d</font></td><td>Decimal</td><td>False</td><td><font face="courier" size="-1">0.0d</font></td></tr> <tr><td><b>repeats</b></td><td>Defines the maximum number of times an Anomaly Data is generated for the breach before stopping checking. A value of <font face="courier" size="-1">0</font> indicates unlimited repeats. </td> <td>Stringified Integer <font face="courier" size="-1">>= 0</font></td><td>Integer</td><td>False</td><td><font face="courier" size="-1">1</font></td> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Threshold Analytic for Data events on the channel "Input1"
// and generate an anomaly Data event on the channel "Output1" if the value falls
// below the defined threshold value of 10.0
send com.industry.analytics.Analytic("Threshold", ["Input1"], ["Output1"], {"threshold":"10.0","direction":"falling"} ) to "";

// Define a Threshold Analytic for Data events on the channel "Input2"
// and generate an anomaly Data event  on the channel "Output2" if the value goes
// above the defined threshold value of 60.0 for over 5.0seconds.
send com.industry.analytics.Analytic("Threshold", ["Input1"], ["Output1"], {"threshold":"60.0","direction":"rising","duration":"5.0"} ) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Threshold Analytic generates an anomaly Data event if a threshold is breached. The computation can either look for rising breaches, falling breaches or every time a threshold is passed in both directions. These can either be reported immediately or, to ignore spikes, after a set duration based on the Data timestamps.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="NAME" type="string" typeValue="&quot;Threshold&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="DIRECTION" type="string" typeValue="&quot;direction&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the direction of the threshold check]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the direction of the threshold check]]></Summary></Member><Member constant="true" name="DURATION" type="string" typeValue="&quot;duration&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the duration the threshold can be breached before an Anomaly data event is generated.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the duration the threshold can be breached before an Anomaly data event is generated.]]></Summary></Member><Member constant="true" name="REPEATS" type="string" typeValue="&quot;repeats&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the maximum number of times a threshold can be breached before Anomaly data event will be generated.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the maximum number of times a threshold can be breached before Anomaly data event will be generated.]]></Summary></Member><Member constant="true" name="THRESHOLD" type="string" typeValue="&quot;threshold&quot;"><Description><![CDATA[This constant defines the configuration parameter name that specifies the threshold value to check for.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that specifies the threshold value to check for.]]></Summary></Member><Member constant="true" name="CROSSING" type="string" typeValue="&quot;crossing&quot;"><Description><![CDATA[This constant defines the value for setting the <font face="courier" size="-1">"direction"</font> configuration parameter to use a crossing threshold breach check.]]></Description><Summary><![CDATA[This constant defines the value for setting the <font face="courier" size="-1">"direction"</font> configuration parameter to use a crossing threshold breach check.]]></Summary></Member><Member constant="true" name="FALLING" type="string" typeValue="&quot;falling&quot;"><Description><![CDATA[This constant defines the value for setting the <font face="courier" size="-1">"direction"</font> configuration parameter to use a falling threshold breach check.]]></Description><Summary><![CDATA[This constant defines the value for setting the <font face="courier" size="-1">"direction"</font> configuration parameter to use a falling threshold breach check.]]></Summary></Member><Member constant="true" name="RISING" type="string" typeValue="&quot;rising&quot;"><Description><![CDATA[This constant defines the value for setting the <font face="courier" size="-1">"direction"</font> configuration parameter to use a rising threshold breach check.]]></Description><Summary><![CDATA[This constant defines the value for setting the <font face="courier" size="-1">"direction"</font> configuration parameter to use a rising threshold breach check.]]></Summary></Member><Member name="_breaches" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics.detectors" type="ThresholdData"/></Parameters><Description><![CDATA[Local cached dictionary of the threshold breach values, keyed by the sourceId.]]></Description><Summary><![CDATA[Local cached dictionary of the threshold breach values, keyed by the sourceId.]]></Summary></Member><Member name="_directions" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[Local cached value for the direction configuration parameter value converted to an integer, for each source. Needed when in crossing mode.]]></Description><Summary><![CDATA[Local cached value for the direction configuration parameter value converted to an integer, for each source. Needed when in crossing mode.]]></Summary></Member><Member name="_outputDataName" private="true" type="string"><Description><![CDATA[Local cached output Data name]]></Description><Summary><![CDATA[Local cached output Data name]]></Summary></Member><Member name="_directionParam" private="true" type="string"><Description><![CDATA[Local cached value for the direction configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the direction configuration parameter value]]></Summary></Member><Member name="_duration" private="true" type="decimal"><Description><![CDATA[Local cached value for the duration configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the duration configuration parameter value]]></Summary></Member><Member name="_repeats" private="true" type="integer"><Description><![CDATA[Local cached value for the repeats configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the repeats configuration parameter value]]></Summary></Member><Member name="_threshold" private="true" type="decimal"><Description><![CDATA[Local cached value for the threshold configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the threshold configuration parameter value]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processData" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">processData</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[A boolean value indicating whether the configuration was valid or not.]]></Description></Returns><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="_processValue" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action><Action name="reset" private="true" staticNature=""><Description><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[Optional action to reset the state of the analytic instance back to its initialisation state. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #init() action directly, then the <font face="courier" size="-1">reset</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="_sendBreach" private="true" staticNature=""><Description><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This action is called internally and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" package="com.industry.analytics" type="Data"/></Parameters></Action></Type><Type category="Monitor" name="DriftService" private="true"><Description><![CDATA[The DriftService monitor listens for requests to create a new Drift Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The DriftService monitor listens for requests to create a new Drift Analytic object, and creates the Analytic in a new unique context.]]></Summary><See reference="com.industry.analytics.Drift"><Description><![CDATA[The implementation of the Drift Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="MissingDataService" private="true"><Description><![CDATA[The MissingDataService monitor listens for requests to create a new MissingData Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The MissingDataService monitor listens for requests to create a new MissingData Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.detectors" type="MissingData"><Description><![CDATA[The implementation of the MissingData Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternSpike" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Spike Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Spike Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternSpike" package="com.industry.analytics.detectors" type="StayAlive"/></Listens></Type><Type category="Monitor" name="InternThreshold" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Threshold Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Threshold Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternThreshold" package="com.industry.analytics.detectors" type="StayAlive"/></Listens></Type><Type category="Monitor" name="ThresholdService" private="true"><Description><![CDATA[The ThresholdService monitor listens for requests to create a new Threshold Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The ThresholdService monitor listens for requests to create a new Threshold Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.detectors" type="Threshold"><Description><![CDATA[The implementation of the Threshold Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternDrift" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Drift Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive for a Persistant Correlator's recovery.  Otherwise, this would be a transient monitor, and it would not be recovered, which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Drift Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternDrift" package="com.industry.analytics.detectors" type="StayAlive"/></Listens></Type><Type category="Monitor" name="InternMissingData" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the MissingData Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the MissingData Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternMissingData" package="com.industry.analytics.detectors" type="StayAlive"/></Listens></Type><Type category="Monitor" name="CorridorService" private="true"><Description><![CDATA[The CorridorService monitor listens for requests to create a new Corridor Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The CorridorService monitor listens for requests to create a new Corridor Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.detectors" type="Corridor"><Description><![CDATA[The implementation of the Corridor Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternPeerAnalysis" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the PeerAnalysis Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the PeerAnalysis Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternPeerAnalysis" package="com.industry.analytics.detectors" type="StayAlive"/></Listens></Type><Type category="Monitor" name="PeerAnalysisService" private="true"><Description><![CDATA[The AverageService monitor listens for requests to create a new Average Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The AverageService monitor listens for requests to create a new Average Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.streaming_calculations" type="Average"><Description><![CDATA[The implementation of the Average Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="SpikeService" private="true"><Description><![CDATA[The SpikeService monitor listens for requests to create a new Spike Analytic object, and creates the Analytic in a new unique context.]]></Description><Summary><![CDATA[The SpikeService monitor listens for requests to create a new Spike Analytic object, and creates the Analytic in a new unique context.]]></Summary><See package="com.industry.analytics.detectors" type="Spike"><Description><![CDATA[The implementation of the Spike Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type><Type category="Monitor" name="InternCorridor" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Threshold Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Threshold Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternCorridor" package="com.industry.analytics.detectors" type="StayAlive"/></Listens></Type></Package><Package depth="../../../" display="com.industry.utils" name="com.industry.utils"><Type category="Event" name="Bucket"><Description><![CDATA[A Bucket of data]]></Description><Summary><![CDATA[A Bucket of data]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="start" type="float"><Description><![CDATA[The start value of the bucket (Usually the start time) - Inclusive]]></Description><Summary><![CDATA[The start value of the bucket (Usually the start time) - Inclusive]]></Summary></Member><Member name="currentSize" type="float"><Description><![CDATA[The current size of the bucket (if the bucket is the latest then this equals: "the latest value in the bucket" - "the start value of the bucket", otherwise this is the maxSize)]]></Description><Summary><![CDATA[The current size of the bucket (if the bucket is the latest then this equals: "the latest value in the bucket" - "the start value of the bucket", otherwise this is the maxSize)]]></Summary></Member><Member name="maxSize" type="float"><Description><![CDATA[The maximum size of the bucket]]></Description><Summary><![CDATA[The maximum size of the bucket]]></Summary></Member><Member name="data" type="any"><Description><![CDATA[The data stored in the bucket]]></Description><Summary><![CDATA[The data stored in the bucket]]></Summary></Member><Action name="finalEnd" staticNature=""><Description><![CDATA[The end of the bucket once it has been filled]]></Description><Summary><![CDATA[The end of the bucket once it has been filled]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/></Action><Action name="isValueLarger" staticNature=""><Description><![CDATA[Is the value larger than this bucket]]></Description><Summary><![CDATA[Is the value larger than this bucket]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="value" type="float"/></Parameters></Action><Action name="currentEnd" staticNature=""><Description><![CDATA[The current end of the bucket - Given the provided data (will grow until it equals finalEnd, at which point a new bucket will be created)]]></Description><Summary><![CDATA[The current end of the bucket - Given the provided data (will grow until it equals finalEnd, at which point a new bucket will be created)]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/></Action><Action name="isValueSmaller" staticNature=""><Description><![CDATA[Is the value smaller than this bucket]]></Description><Summary><![CDATA[Is the value smaller than this bucket]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="value" type="float"/></Parameters></Action><Action name="containsValue" staticNature=""><Description><![CDATA[Does the value fit into this bucket]]></Description><Summary><![CDATA[Does the value fit into this bucket]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="value" type="float"/></Parameters></Action></Type><Type category="Event" name="BucketSystemBuilder"><Description><![CDATA[A Builder through which to construct a BucketSystem Eg. <pre>
BucketSystem bucketSystem := BucketSystemBuilder.create()
												.toValue(getTimestampFromData)
												.updateBucket(addDataToBucket)
												.totalSize(10.0)
												.bucketCount(4)
												.build();
</pre>]]></Description><Summary><![CDATA[A Builder through which to construct a BucketSystem Eg. <pre>]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_bucketSize" type="optional"><Parameters><Parameter type="float"/></Parameters></Member><Member name="_totalSize" type="optional"><Parameters><Parameter type="float"/></Parameters></Member><Member name="_bucketCount" type="optional"><Parameters><Parameter type="integer"/></Parameters></Member><Member name="_skipForwardOnGap" type="optional"><Parameters><Parameter type="boolean"/></Parameters></Member><Member name="_toValue" type="action"><Parameters><Parameter type="any"/></Parameters><Returns type="float"/></Member><Member name="_updateBucket" type="action"><Parameters><Parameter package="com.industry.utils" type="Bucket"/><Parameter type="any"/></Parameters><Returns type="any"/></Member><Member name="_onBucketExpired" type="action"><Parameters><Parameter package="com.industry.utils" type="Bucket"/></Parameters></Member><Member name="_onBucketCreated" type="action"><Parameters><Parameter package="com.industry.utils" type="Bucket"/></Parameters></Member><Action name="toValue" staticNature=""><Description><![CDATA[Optional - A callback used to determine which bucket a peice of data should be added to The callback is provided with the data provided to the bucketSystem.add(...) or bucketSystem.addWithValue(...) as the only argument. The callback's return value is the float used by the bucket system to determine which bucket to use (Normally a timestamp)]]></Description><Summary><![CDATA[Optional - A callback used to determine which bucket a peice of data should be added to The callback is provided with the data provided to the bucketSystem.add(...) or bucketSystem.addWithValue(...) as the only argument. The callback's return value is the float used by the bucket system to determine which bucket to use (Normally a timestamp)]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystemBuilder"/><Parameters><Parameter name="toValue" type="action"><Parameters><Parameter type="any"/></Parameters><Returns type="float"/></Parameter></Parameters></Action><Action name="skipForwardOnGap" staticNature=""><Description><![CDATA[Optional - If true then the bucket system will skip bucket creation when there is a large gap in the incoming data (>= 2 * the total size of the system). The onBucketExpired and onBucketCreated are still called as appropriate but not for any skipped buckets. Default - True]]></Description><Summary><![CDATA[Optional - If true then the bucket system will skip bucket creation when there is a large gap in the incoming data (>= 2 * the total size of the system). The onBucketExpired and onBucketCreated are still called as appropriate but not for any skipped buckets. Default - True]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystemBuilder"/><Parameters><Parameter name="skipForwardOnGap" type="boolean"/></Parameters></Action><Action name="totalSize" staticNature=""><Description><![CDATA[Set the total size of the bucket system.]]></Description><Summary><![CDATA[Set the total size of the bucket system.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystemBuilder"/><Parameters><Parameter name="totalSize" type="float"/></Parameters></Action><Action name="onBucketCreated" staticNature=""><Description><![CDATA[Optional - A callback to be called after a new bucket has been added to the system. The callback is provided with the new bucket as the only argument. Often used for initialisation of a bucket. Example: <pre>
		action initialiseBucket(Bucket b) {
			b.data := MyBucketContents(5.0);
		}
	 </pre>]]></Description><Summary><![CDATA[Optional - A callback to be called after a new bucket has been added to the system. The callback is provided with the new bucket as the only argument. Often used for initialisation of a bucket. Example: <pre>]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystemBuilder"/><Parameters><Parameter name="onBucketCreated" type="action"><Parameters><Parameter package="com.industry.utils" type="Bucket"/></Parameters><Description><![CDATA[a callback to be called after the bucket system creates a new bucket]]></Description></Parameter></Parameters></Action><Action name="build" staticNature=""><Description><![CDATA[Create a BucketSystem from the pre-provided params Throws an Exception if any required params have not been set. Must provide 2 of [bucketSize, totalSize, bucketCount]. BucketCount should be larger than 0 BucketSize should be larger than 0 TotalSize should be larger than 0 Must provide an updateBucket function. Must provide a toValue function]]></Description><Summary><![CDATA[Create a BucketSystem from the pre-provided params Throws an Exception if any required params have not been set. Must provide 2 of [bucketSize, totalSize, bucketCount]. BucketCount should be larger than 0 BucketSize should be larger than 0 TotalSize should be larger than 0 Must provide an updateBucket function. Must provide a toValue function]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystem"/></Action><Action name="bucketCount" staticNature=""><Description><![CDATA[Set the maximum number of buckets in the bucket system.]]></Description><Summary><![CDATA[Set the maximum number of buckets in the bucket system.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystemBuilder"/><Parameters><Parameter name="bucketCount" type="integer"/></Parameters></Action><Action name="create" staticNature="static "><Description><![CDATA[Create a new BucketSystemBuilder]]></Description><Summary><![CDATA[Create a new BucketSystemBuilder]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystemBuilder"/></Action><Action name="updateBucket" staticNature=""><Description><![CDATA[Set the callback to be used to add data to the appropriate bucket The callback is provided with 2 arguments: The first - The bucket which the data should be added to The second - The data to be added (This is the data that was provided to the bucketSystem.add(...) or bucketSystem.addWithValue(...) actions) The value returned from the callback is the new value of the bucket]]></Description><Summary><![CDATA[Set the callback to be used to add data to the appropriate bucket The callback is provided with 2 arguments: The first - The bucket which the data should be added to The second - The data to be added (This is the data that was provided to the bucketSystem.add(...) or bucketSystem.addWithValue(...) actions) The value returned from the callback is the new value of the bucket]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystemBuilder"/><Parameters><Parameter name="updateBucket" type="action"><Parameters><Parameter package="com.industry.utils" type="Bucket"/><Parameter type="any"/></Parameters><Returns type="any"/></Parameter></Parameters></Action><Action name="bucketSize" staticNature=""><Description><![CDATA[Set the individual size of each bucket.]]></Description><Summary><![CDATA[Set the individual size of each bucket.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystemBuilder"/><Parameters><Parameter name="bucketSize" type="float"/></Parameters></Action><Action name="onBucketExpired" staticNature=""><Description><![CDATA[Optional - A callback to be called after a bucket is removed from the system. The callback is provided with the expired bucket as the only argument. Example: <pre>
		action removeBucketValueFromTotal(Bucket b) {
			runningTotal := runningTotal - getValueFromBucket(b);
		}
	 </pre>]]></Description><Summary><![CDATA[Optional - A callback to be called after a bucket is removed from the system. The callback is provided with the expired bucket as the only argument. Example: <pre>]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystemBuilder"/><Parameters><Parameter name="onBucketExpired" type="action"><Parameters><Parameter package="com.industry.utils" type="Bucket"/></Parameters><Description><![CDATA[a callback to be called after the bucket system expires a bucket]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="BucketSystem"><Description><![CDATA[BucketSystem provides a way to group anything into buckets They are grouped by a float value (Usually a timestamp), either provided with the incoming data or through an earlier provided getter A required updateBucket callback allows data to be stored into a bucket in any chosen format, either aggregating the data or storing all data. Example Usage: <pre>
// Create a bucketSystem made up of 6 buckets each 10 seconds long
BucketSystem bucketSystem := BucketSystemBuilder.create()
												.toValue(getTimestampFromData)
												.updateBucket(addDataToBucket)
												.bucketSize(10.0)
												.bucketCount(6)
												.onBucketCreate(initializeBucket)
												.build();

action getTimestampFromData(any data) returns float {
	return (&lt;Data&gt; data).getTimestamp();
}

action addDataToBucket(Bucket b, any data) returns any {
	sequence&lt;Data&gt; result := (sequence&lt;Data&gt;b.data)
	result.append(&lt;Data&gt; data);
	return result;
}

action initializeBucket(Bucket b) {
	b.data := new sequence&lt;Data&gt;;
}

bucketSystem.add(data); // Adding data where the timestamp is extracted from the data
bucketSystem.addWithValue(data, 1234.0); // Adding data where the timestamp is provided with the data

bucketSystem.reduce(combineBuckets, new sequence&lt;Data&gt;); // Concatenate all of the sequences stored inside all of the buckets to produce a sequence of all data

action combineBuckets(any allData, Bucket b) return any {
	allData.appendSequence(&lt;sequence&lt;Data&gt;&gt; b.data);
	return allData;
}

</pre>]]></Description><Summary><![CDATA[BucketSystem provides a way to group anything into buckets They are grouped by a float value (Usually a timestamp), either provided with the incoming data or through an earlier provided getter A required updateBucket callback allows data to be stored into a bucket in any chosen format, either aggregating the data or storing all data. Example Usage: <pre>]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="buckets" private="true" type="sequence"><Parameters><Parameter package="com.industry.utils" type="Bucket"/></Parameters><Description/><Summary/></Member><Member name="bucketSize" private="true" type="float"><Description/><Summary/></Member><Member name="totalSize" private="true" type="float"><Description/><Summary/></Member><Member name="bucketCount" private="true" type="integer"><Description/><Summary/></Member><Member name="skipForwardOnGap" type="boolean"><Description><![CDATA[Whether the bucketSystem can remove all buckets and restart when the gap between data is larger than the totalSize of the bucketSystem If false then the bucketSystem will add any intermediate buckets (This could potentially take a long time if the gap is large)]]></Description><Summary><![CDATA[Whether the bucketSystem can remove all buckets and restart when the gap between data is larger than the totalSize of the bucketSystem If false then the bucketSystem will add any intermediate buckets (This could potentially take a long time if the gap is large)]]></Summary></Member><Member name="toValue" private="true" type="action"><Parameters><Parameter type="any"/></Parameters><Returns type="float"/><Description/><Summary/></Member><Member name="updateBucket" private="true" type="action"><Parameters><Parameter package="com.industry.utils" type="Bucket"/><Parameter type="any"/></Parameters><Returns type="any"/><Description/><Summary/></Member><Member name="onBucketExpired" type="action"><Parameters><Parameter package="com.industry.utils" type="Bucket"/></Parameters><Description><![CDATA[Optional - Called when a bucket is removed]]></Description><Summary><![CDATA[Optional - Called when a bucket is removed]]></Summary></Member><Member name="onBucketCreated" type="action"><Parameters><Parameter package="com.industry.utils" type="Bucket"/></Parameters><Description><![CDATA[Optional - Called when a bucket is created]]></Description><Summary><![CDATA[Optional - Called when a bucket is created]]></Summary></Member><Action name="add" staticNature=""><Description><![CDATA[Add an item to the bucketSystem Throws an exception if toValue function has not been provided]]></Description><Summary><![CDATA[Add an item to the bucketSystem Throws an exception if toValue function has not been provided]]></Summary><See reference="BucketSystem.addWithValue"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="item" type="any"/></Parameters></Action><Action name="reduce" staticNature=""><Description><![CDATA[Reduce buckets to a single value or event Example: <pre>
		// Sum all of the buckets
        float sum := &lt;float&gt;bucketSystem.reduce(sum, 0);
	
		action sum(any accumulator, Bucket b) returns any {
			return &lt;float&gt; accumulator + &lt;float&gt;b.data;
		}
	 </pre>]]></Description><Summary><![CDATA[Reduce buckets to a single value or event Example: <pre>]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="callback" type="action"><Parameters><Parameter type="any"/><Parameter package="com.industry.utils" type="Bucket"/></Parameters><Returns type="any"/></Parameter><Parameter name="initialValue" type="any"/></Parameters></Action><Action name="clear" staticNature=""><Description><![CDATA[Completely empty the bucket system and return it to starting conditions]]></Description><Summary><![CDATA[Completely empty the bucket system and return it to starting conditions]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="create" staticNature="static "><Description><![CDATA[Create a bucket system]]></Description><Summary><![CDATA[Create a bucket system]]></Summary><See package="com.industry.utils" type="BucketSystemBuilder"><Description><![CDATA[provides a better interface for construction and param validation]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.utils" type="BucketSystem"><Description><![CDATA[A new BucketSystem]]></Description></Returns><Parameters><Parameter name="updateBucket" type="action"><Parameters><Parameter package="com.industry.utils" type="Bucket"/><Parameter type="any"/></Parameters><Returns type="any"/><Description><![CDATA[The function called to determine how to store a particular value into a bucket]]></Description></Parameter><Parameter name="toValue" type="action"><Parameters><Parameter type="any"/></Parameters><Returns type="float"/><Description><![CDATA[The function called to determine which bucket to place a value into (For example: a function that gets the timestamp from a object passed to "BucketSystem.add")]]></Description></Parameter><Parameter name="bucketSize" type="float"><Description><![CDATA[The size of an individualBucket]]></Description></Parameter><Parameter name="bucketCount" type="integer"><Description><![CDATA[The maximum number of buckets to use]]></Description></Parameter></Parameters></Action><Action name="addBucket" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="b" package="com.industry.utils" type="Bucket"/></Parameters></Action><Action name="expireAllBuckets" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="addWithValue" staticNature=""><Description><![CDATA[Add an item to the bucketSystem]]></Description><Summary><![CDATA[Add an item to the bucketSystem]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="item" type="any"/><Parameter name="itemValue" type="float"/></Parameters></Action><Action name="expireFirstBucket" private="true" staticNature=""><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="getBuckets" staticNature=""><Description><![CDATA[Get all buckets]]></Description><Summary><![CDATA[Get all buckets]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter package="com.industry.utils" type="Bucket"/></Parameters></Returns></Action></Type></Package><Package depth="../../../../" display="com.industry.analytics.extensions" name="com.industry.analytics.extensions"><Type category="Event" name="Prediction"><Description><![CDATA[The Prediction Analytic takes the specified input Data values and inputs them into a defined Predictive (PMML) model, gets the result from the Apama Predictive Analytics plugin and generates the specified Data events with the results. The Apama Predictive Analytics plugin must also be installed (a separate license may also be required).

 In addition to the parameters specified below the Analytic will also pass through the following plugin parameters to the plugin setup. Please see the Apama Predictive Analytics plugin documentation for more details on these parameters: configDirectory, workDirectory, recordLatency, logLatency.

 <dl><dt><b>Input Data events:</b></dt> <dd>At least one input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>At least one output Data stream name must be provided.<br></dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border="1" style="border-collapse: collapse;width:100%"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>combineParams</b></td><td>Defines whether the output Data events have a combination of all the params in the Data events used for the calculation (true) or just the params from the input Data from the alphabetically first input stream (false). The latter is more performant.</td> <td>Stringified boolean</font></td><td>boolean</td><td>False</td><td>false</td></tr> <tr><td><b>modelName</b></td><td>The name of the model to be used within the PMML file.</td> <td>Non-Empty String</td><td>String</td><td>True</td><td></td></tr> <tr><td><b>pmmlFileDirectory</b></td><td>The directory containing the PMML model.</td> <td>Non-Empty String</td><td>String</td><td>False.</td><td>Current working directory.</td></tr> <tr><td><b>pmmlFileName</b></td><td>The file containing the PMML model.</td> <td>Non-Empty String</td><td>String</td><td>True</td><td></td></tr> <tr><td><b>synchronous</b></td><td>Whether the input stream Data events should be dealt with synchronously or as they arrive.</td> <td>True / False</td><td>Boolean</td><td>False</td><td>True</td></tr> <tr><td><b>&lt;input parameter name&gt;</b></td><td>The mapping of an input parameter to the PMML model to a value within one of the input Data events. These parameters use the syntax "<channel_name>.[DVALUE|SVALUE|XVALUE|YVALUE|ZVALUE|PVALUE.<param_name>]". For example, "Input1.DVALUE" would use the "dValue" parameter of Data events received on the input channel "Input1" for the value of the named input parameter. Whereas "Input2.PVALUE.myValue" would use the parameter "myValue" in the "params" of Data events received on the input channel "Input2" for the value of the named input parameter. If necessary the parameter can be prefixed by 'input.' to avoid confusion when a model uses the same name for both an input and output parameter.</td> <td>Non-Empty String</td><td>String</td><td>True when mandatory in the model.</td><td></td></tr> <tr><td><b>&lt;output parameter name&gt;</b></td><td>The mapping of an output parameter to the PMML model to a value within one of the output Data events. These parameters use the syntax "<channel_name>.[DVALUE|SVALUE|XVALUE|YVALUE|ZVALUE|PVALUE.<param_name>]". For example, "Output1.DVALUE" would put the value from the named output parameter into the "dValue" parameter of Data events and publish them on the output channel "Output1".  Whereas "Output2.PVALUE.myValue" would put the value from the named output parameter into a parameter called "myValue" in the "params" of Data events that are sent on the output channel "Output2". If necessary the parameter can be prefixed by 'output.' to avoid confusion when a model uses the same name for both an input and output parameters.</td> <td>Non-Empty String</td><td>String</td><td>True when mandatory in the model.</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre>
// Define a Prediction Analytic to pass Data events on the channel "Input1"
// to a specified PMML model (the "PredictedEngineStatus" model defined in  
// the "Engine.pmml" file) and generate a Data event with the results of 
// the model in the "dValue" parameter and send to the channel "PMMLRESULT".
// The model is defined to take the Temperature, Pressure and RPM values from 
// the "xValue", "yValue" and "zValue" parameters of the incoming Data event.
send com.industry.analytics.Analytic("Prediction", ["Input1"], ["PMMLRESULT"],
								{"modelName":"PredictedEngineStatus",
								 "pmmlFileName":"Engine.pmml",
								 "pmmlFileDirectory":"./model",
								 "Temperature":"Input1.XVALUE",
								 "Pressure":"Input1.YVALUE",
								 "RPM":"Input1.ZVALUE",
								 "model_output":"PMMLRESULT.DVALUE"}) to "";
</pre></dd> </dl>]]></Description><Summary><![CDATA[The Prediction Analytic takes the specified input Data values and inputs them into a defined Predictive (PMML) model, gets the result from the Apama Predictive Analytics plugin and generates the specified Data events with the results. The Apama Predictive Analytics plugin must also be installed (a separate license may also be required).]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Import library="TimeFormatPlugin" name="timeFormat"><Description><![CDATA[TimeFormat event for timestamps.]]></Description><Summary><![CDATA[TimeFormat event for timestamps.]]></Summary></Import><Member constant="true" name="NAME" type="string" typeValue="&quot;Prediction&quot;"><Description><![CDATA[This constant defines the name of the Analytic.]]></Description><Summary><![CDATA[This constant defines the name of the Analytic.]]></Summary></Member><Member constant="true" name="COMBINE_PARAMS" type="string" typeValue="&quot;combineParams&quot;"><Description><![CDATA[This constant defines the configuration parameter name that defines whether params should be combined instead of being taken from the last Data in a gradient calculation.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name that defines whether params should be combined instead of being taken from the last Data in a gradient calculation.]]></Summary></Member><Member constant="true" name="PMML_FILE_DIRECTORY" type="string" typeValue="&quot;pmmlFileDirectory&quot;"><Description><![CDATA[This constant defines the configuration parameter name giving the directory containing the PMML model.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name giving the directory containing the PMML model.]]></Summary></Member><Member constant="true" name="PMML_FILE_NAME" type="string" typeValue="&quot;pmmlFileName&quot;"><Description><![CDATA[This constant defines the configuration parameter name giving the filename containing the PMML model.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name giving the filename containing the PMML model.]]></Summary></Member><Member constant="true" name="MODEL_NAME" type="string" typeValue="&quot;modelName&quot;"><Description><![CDATA[This constant defines the configuration parameter name giving the model name within the PMML file.]]></Description><Summary><![CDATA[This constant defines the configuration parameter name giving the model name within the PMML file.]]></Summary></Member><Member constant="true" name="NONE" private="true" type="integer" typeValue="0"><Description/><Summary/></Member><Member constant="true" name="DVALUE" private="true" type="integer" typeValue="1"><Description/><Summary/></Member><Member constant="true" name="SVALUE" private="true" type="integer" typeValue="2"><Description/><Summary/></Member><Member constant="true" name="XVALUE" private="true" type="integer" typeValue="3"><Description/><Summary/></Member><Member constant="true" name="YVALUE" private="true" type="integer" typeValue="4"><Description/><Summary/></Member><Member constant="true" name="ZVALUE" private="true" type="integer" typeValue="5"><Description/><Summary/></Member><Member constant="true" name="PVALUE" private="true" type="integer" typeValue="6"><Description/><Summary/></Member><Member name="_config" package="com.industry.analytics" private="true" type="Analytic"><Description/><Summary/></Member><Member name="_inputMappings" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics.extensions" type="DataMap"/></Parameters><Description/><Summary/></Member><Member name="_outputMappings" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics.extensions" type="DataMap"/></Parameters><Description/><Summary/></Member><Member name="_model" private="true" type="com.apama.pa.pmml.Model"><Description/><Summary/></Member><Member name="_instanceName" private="true" type="string"><Description/><Summary/></Member><Member name="_combineParams" private="true" type="boolean"><Description><![CDATA[Local cached value for the combineParams configuration parameter value]]></Description><Summary><![CDATA[Local cached value for the combineParams configuration parameter value]]></Summary></Member><Member name="_analyticObject" package="com.industry.analytics" private="true" type="AnalyticObject"><Description><![CDATA[The Analytic Base Object implementation]]></Description><Summary><![CDATA[The Analytic Base Object implementation]]></Summary></Member><Action name="init" staticNature=""><Description><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Description><Summary><![CDATA[This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.]]></Summary><See package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration event object.]]></Description></See><See package="com.industry.analytics" type="AnalyticInterface"><Description><![CDATA[The action interface that can be used to interact with the Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration that will be used for this instance]]></Description></Parameter><Parameter name="initComplete" type="action"><Parameters><Parameter type="boolean"/><Parameter package="com.industry.analytics" type="AnalyticInterface"/></Parameters><Description><![CDATA[The action callback to call when the new Analytic has been created, or if an error occured.]]></Description></Parameter></Parameters></Action><Action name="processDataStream" private="true" staticNature=""><Description><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #initMultiple() action directly, then the <font face="courier" size="-1">processDataStream</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Description><Summary><![CDATA[This action implements the Analytic function itself. This is called internally by the Analytic Object, and should not be called directly by the Users application. If the application has created this Analytic using the #initMultiple() action directly, then the <font face="courier" size="-1">processDataStream</font> action on the <font face="courier" size="-1">com.industry.analytics.AnalyticInterface</font> that was returned should be used instead.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters><Description><![CDATA[The input Data event to be processed by this Analytic]]></Description></Parameter></Parameters></Action><Action name="_onServiceError" private="true" staticNature=""><Description><![CDATA[Handles the case when the PMML model file load is unsuccessful.]]></Description><Summary><![CDATA[Handles the case when the PMML model file load is unsuccessful.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="se" type="com.apama.pa.pmml.ServiceError"/></Parameters></Action><Action name="_mapInput" private="true" staticNature=""><Description><![CDATA[Maps the appropriate input Data values to the Input object for passing into the PMML model.]]></Description><Summary><![CDATA[Maps the appropriate input Data values to the Input object for passing into the PMML model.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataIn" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter><Parameter name="input" type="com.apama.pa.pmml.Input"/></Parameters></Action><Action name="_validateConfiguration" private="true" staticNature=""><Description><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Description><Summary><![CDATA[This helper action validates configuration that was used when trying to create a new instance of the Analytic. This is called internally, and should not be called directly by the Users application.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="config" package="com.industry.analytics" type="Analytic"><Description><![CDATA[The Analytic configuration object that is being validated]]></Description></Parameter></Parameters></Action><Action name="_onServiceInitialised" private="true" staticNature=""><Description><![CDATA[Continues validation after the PMML model file has been successfully loaded.]]></Description><Summary><![CDATA[Continues validation after the PMML model file has been successfully loaded.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="sh" type="com.apama.pa.pmml.ServiceHandler"/></Parameters></Action><Action name="_mapOutput" private="true" staticNature=""><Description><![CDATA[Maps the appropriate onput Data values from the Output object for passing sending out on to the specified channels..]]></Description><Summary><![CDATA[Maps the appropriate onput Data values from the Output object for passing sending out on to the specified channels..]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="dataOut" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="com.industry.analytics" type="Data"/></Parameters></Parameter><Parameter name="output" type="com.apama.pa.pmml.Output"/><Parameter name="sourceId" type="string"/><Parameter name="params" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Parameter></Parameters></Action><Action name="_parseMap" private="true" staticNature=""><Description><![CDATA[Parses the mapping value provided with a model parameter in the Analytic parameters.]]></Description><Summary><![CDATA[Parses the mapping value provided with a model parameter in the Analytic parameters.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="com.industry.analytics.extensions" type="DataMap"/><Parameters><Parameter name="map" type="string"/></Parameters></Action></Type><Type category="Event" name="ValidationResult" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="result" type="boolean"/></Type><Type category="Event" name="DataMap" private="true"><Description/><Summary/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="name" type="string"/><Member name="element" type="integer"/><Member name="paramName" type="string"/></Type><Type category="Monitor" name="InternPrediction" private="true"><Description><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Prediction Analytic in order to improve performance when handling strings.

 Note: The listener that is created is required in order to keep the monitor alive between a Persistant Correlators recovery.  Otherwise, this would be a transient monitor, and it would not be recovered. Which would then mean that the strings would not interned in the recovered Correlator.]]></Description><Summary><![CDATA[This internal Monitor is used to automatically intern any string constants that are defined that are associated with the Prediction Analytic in order to improve performance when handling strings.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference monitor="InternPrediction" package="com.industry.analytics.extensions" type="StayAlive"/></Listens></Type><Type category="Monitor" name="PredictionService" private="true"><Description><![CDATA[The PredictionService monitor listens for requests to create a new Prediction Analytic object, and creates the Analytic in a new unique context. Becasue this monitor is using the ADAPS Zementis plugin, it is not possible for the Prediction Analytic to be persistent.]]></Description><Summary><![CDATA[The PredictionService monitor listens for requests to create a new Prediction Analytic object, and creates the Analytic in a new unique context. Becasue this monitor is using the ADAPS Zementis plugin, it is not possible for the Prediction Analytic to be persistent.]]></Summary><See package="com.industry.analytics.extensions" type="Prediction"><Description><![CDATA[The implementation of the Prediction Analytic.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="com.industry.analytics" type="Analytic"><Description><![CDATA[The event that requests the creation of a new Analytic object]]></Description></Reference><Reference package="com.industry.analytics" type="Ready"/></Listens></Type></Package></Packages>